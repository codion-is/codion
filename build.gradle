plugins {
    id "org.sonarqube" version "2.5"
}

ant.importBuild('gradle-ant.xml')

allprojects {
    version='0.11.0-SNAPSHOT'
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext {
        slf4jApiVersion='1.7.7'
        logbackVersion='1.1.3'
        h2Version='1.4.192'
        jsonVersion='20090211'
        jcalendarVersion='1.4'
        jcommonVersion='1.0.23'
        jfreechartVersion='1.0.19'
        jettyServletApiVersion='3.1.0.M3'
        jettyVersion='9.4.6.v20170531'
        httpclientVersion='4.5'
        httpcoreVersion='4.4.1'
        commonsloggingVersion='1.1.1'
        junitVersion='4.12'
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
        testCompile "junit:junit:${junitVersion}"
    }

    task writeVersion {
        ant.concat(destFile:"build/classes/java/main/org/jminor/common/version.txt",
                project.version + " " + new Date().format("yyyy.MM.dd HH:mm"))
    }

    sourceSets {
        main {
            java {
                exclude 'module-info.java'
            }
        }
    }

    test {
        systemProperty "jminor.db.type", "h2"
        systemProperty "jminor.db.host", "h2db"
        systemProperty "jminor.db.embedded", "true"
        systemProperty "jminor.db.embeddedInMemory", "true"
        systemProperty "jminor.db.initScript", "src/test/sql/create_h2_db.sql"
        systemProperty "jminor.unittest.username", "scott"
        systemProperty "jminor.unittest.password", "tiger"
    }.dependsOn create_keystore

    jacoco {
        toolVersion = "0.7.9"
    }

    jar {
        manifest {
            attributes(
                    "Specification-Title": project.name,
                    "Specification-Version": "${version}",
                    "Specification-Vendor": "JMinor",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor": "JMinor",
                    "Implementation-Vendor-Id": "org.jminor",
                    "Implementation-URL": "http://jminor.org",
                    "Automatic-Module-Name": project.name,
                    "Build-Jdk": org.gradle.internal.jvm.Jvm.current(),
                    "Built-By": System.getProperty("user.name"),
                    "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"))
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    sonarqube {
        properties {
            property "sonar.projectName", project.name
            property "sonar.projectKey", "org.jminor:jminor"
            property "sonar.projectVersion", version
            property "sonar.java.source", "1.8"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.exclusions", "**/*module-info.java"
        }
    }
}