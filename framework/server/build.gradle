apply plugin: 'application'

configurations {
    serverRuntime {
        extendsFrom compile
    }
}

dependencies {
    compile project(':org.jminor.common.core')
    compile project(':org.jminor.common.db')
    compile project(':org.jminor.common.server')

    compile project(':org.jminor.framework.db.core')
    compile project(':org.jminor.framework.db.local')
    compile project(':org.jminor.framework.db.remote')

    testRuntime "com.h2database:h2:${h2Version}"

    serverRuntime project(':org.jminor.common.server.http')
    serverRuntime project(':org.jminor.framework.server')
    serverRuntime project(':org.jminor.framework.servlet')
    serverRuntime project(':org.jminor.plugin.jasperreports')
    serverRuntime project(':org.jminor.plugin.hikari.pool')
    serverRuntime project(':org.jminor.plugin.logback.proxy')

    serverRuntime project(path: ':org.jminor.framework.demos.empdept', configuration: 'domain')
    serverRuntime project(path: ':org.jminor.framework.demos.chinook', configuration: 'domain')
    serverRuntime project(path: ':org.jminor.framework.demos.petstore', configuration: 'domain')
    serverRuntime project(path: ':org.jminor.framework.demos.schemabrowser', configuration: 'domain')
    serverRuntime project(path: ':org.jminor.framework.demos.world', configuration: 'domain')

    serverRuntime "com.h2database:h2:${h2Version}"
}

mainClassName = 'org.jminor.framework.server.DefaultEntityConnectionServer'

distTar {
    dependsOn(':org.jminor.framework.demos.empdept:jarDomain')
    dependsOn(':org.jminor.framework.demos.chinook:jarDomain')
    dependsOn(':org.jminor.framework.demos.petstore:jarDomain')
    dependsOn(':org.jminor.framework.demos.schemabrowser:jarDomain')
    dependsOn(':org.jminor.framework.demos.world:jarDomain')
}

distZip {
    dependsOn(':org.jminor.framework.demos.empdept:jarDomain')
    dependsOn(':org.jminor.framework.demos.chinook:jarDomain')
    dependsOn(':org.jminor.framework.demos.petstore:jarDomain')
    dependsOn(':org.jminor.framework.demos.schemabrowser:jarDomain')
    dependsOn(':org.jminor.framework.demos.world:jarDomain')
}

startScripts {
    classpath = configurations.serverRuntime
}

applicationDistribution.from(configurations.serverRuntime.files) {
    duplicatesStrategy= DuplicatesStrategy.EXCLUDE
    into("lib")
}
applicationDistribution.from(files(
        '../../resources/security/JMinorServerKeystore',
        '../../resources/security/JMinorClientTruststore',
        '../../resources/security/jminor_server.policy',
        '../../resources/security/all_permissions.policy',
        '../../resources/security/notsoserial-whitelist.txt')) {
    into("config")
}
applicationDistribution.from(fileTree(dir: '../../resources/server/config', include: '**/*')) {
    into("config")
}
applicationDistribution.from(files('../../demos/empdept/src/main/sql/create_schema.sql')) {
    into("config/empdept")
}
applicationDistribution.from(files('../../demos/chinook/src/main/sql/create_schema.sql')) {
    into("config/chinook")
}
applicationDistribution.from(files('../../demos/petstore/src/main/sql/create_schema.sql')) {
    into("config/petstore")
}
applicationDistribution.from(files('../../demos/world/src/main/sql/create_schema.sql')) {
    into("config/world")
}

applicationDefaultJvmArgs = [
        "-Djava.security.policy=../config/all_permissions.policy",
        "-Djminor.configurationFile=../config/h2_embedded.config"
]

task runServer(type: JavaExec) {
    group = 'run'
    classpath = configurations.serverRuntime
    main = 'org.jminor.framework.server.DefaultEntityConnectionServer'
//    jvmArgs '--add-modules', 'java.xml.bind'
    systemProperties = [
            'jminor.db.type': 'h2',
            'jminor.db.host': 'h2db',
            'jminor.db.embedded': 'true',
            'jminor.db.embeddedInMemory': 'true',
            'jminor.db.initScript': '../../demos/empdept/src/main/sql/create_schema.sql,../../demos/chinook/src/main/sql/create_schema.sql,../../demos/petstore/src/main/sql/create_schema.sql,../../demos/world/src/main/sql/create_schema.sql',
            'jminor.server.pooling.startupPoolUsers': 'scott:tiger',
            'jminor.server.port': '2222',
            'jminor.server.admin.port': '2223',
            'jminor.server.admin.user': 'scott:tiger',
            'jminor.server.pooling.poolProviderClass': 'org.jminor.framework.plugins.hikari.pool.HikariConnectionPoolProvider',
            'jminor.server.auxiliaryServerClassNames': 'org.jminor.framework.servlet.EntityServletServer',
            'jminor.server.domain.classes': 'org.jminor.framework.demos.empdept.domain.EmpDept,org.jminor.framework.demos.chinook.domain.Chinook,org.jminor.framework.demos.petstore.domain.Petstore,org.jminor.framework.demos.schemabrowser.domain.SchemaBrowser,org.jminor.framework.demos.world.domain.World',
            'javax.net.ssl.keyStore': '../../resources/security/JMinorServerKeystore',
            'java.security.policy': '../../resources/security/all_permissions.policy',
            'javax.net.ssl.keyStorePassword': 'crappypass',
            'java.rmi.server.hostname': 'localhost',
            'logback.configurationFile': '../../resources/server/config/logback.xml'
    ]
}