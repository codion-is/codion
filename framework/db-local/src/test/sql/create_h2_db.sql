create schema employees;

CREATE TABLE employees.department (
  deptno INT NOT NULL,
  dname VARCHAR(14) NOT NULL,
  loc VARCHAR(13),
  constraint dept_pk primary key (deptno),
  constraint dept_uk unique (dname)
);

CREATE TABLE employees.employee (
  empno INT NOT NULL,
  ename VARCHAR(10) NOT NULL,
  job VARCHAR(9),
  mgr INT,
  hiredate DATE,
  hiretime TIMESTAMP WITH TIME ZONE,
  sal DECIMAL(7, 2) NOT NULL,
  comm DECIMAL(7, 2) DEFAULT 200,
  deptno INT NOT NULL,
  data_lazy blob,
  data blob,
  constraint emp_pk primary key (empno),
  constraint emp_dept_fk foreign key (deptno) references employees.department(deptno),
  constraint emp_mgr_fk foreign key (mgr) references employees.employee(empno)
);

CREATE SEQUENCE employees.employee_seq START WITH 17;

INSERT INTO employees.department(deptno, dname, loc)
VALUES (10, 'ACCOUNTING', 'NEW YORK'),
  (20, 'RESEARCH', 'DALLAS'),
  (30, 'SALES', 'CHICAGO'),
  (40, 'OPERATIONS', 'BOSTON');

INSERT INTO employees.employee(empno, ename, job, mgr, hiredate, sal, comm, deptno)
VALUES (8, 'KING', 'PRESIDENT', NULL, '1981-11-17', 5000, NULL, 10),
  (3, 'JONES', 'MANAGER', 8, '1981-04-02', 2975, NULL, 20),
  (5, 'BLAKE', 'MANAGER', 3, '1981-05-01', 2850, NULL, 10),
  (1, 'ALLEN', 'SALESMAN', 5, '1981-02-20', 1600, 300, 30),
  (2, 'WARD', 'SALESMAN', 8, '1981-02-22', 1250, 500, 30),
  (4, 'MARTIN', 'SALESMAN', 3, '1981-09-28', 1250, 1400, 30),
  (6, 'CLARK', 'MANAGER', 8, '1981-06-09', 2450, 1500, 10),
  (7, 'SCOTT', 'ANALYST', 3, '1987-04-19', 3000, 1500, 20),
  (9, 'TURNER', 'SALESMAN', 5, '1981-09-08', 1500, 0, 30),
  (10, 'ADAMS', 'CLERK', 3, '1988-05-15', 1100, NULL, 20),
  (11, 'JAMES', 'CLERK', 5, '1996-10-03', 950, 1500, 10),
  (12, 'FORD', 'CLERK', 3, '1988-12-12', 3200, 1200, 20),
  (13, 'MILLER', 'CLERK', 6, '1983-01-23', 1300, 1200, 10),
  (14, 'SCOTT', 'CLERK', 3, '1989-12-12', 1600, 1200, 20),
  (15, 'BAKER', 'CLERK', 5, '2007-01-01', 1000, NULL, 10),
  (16, 'TREVOR', 'CLERK', 5, '2007-01-01', 1000, NULL, 10);

commit;

create table employees.uuid_test_default (
  id uuid default random_uuid(),
  data varchar(20)
);

create table employees.uuid_test_no_default (
  id uuid,
  data varchar(20)
);

create table employees.no_pk_table (
  col1 integer not null,
  col2 varchar(20),
  col3 varchar(10),
  col4 integer not null
);

insert into employees.no_pk_table(col1, col2, col3, col4)
values
  (1, '2', '3', 4),
  (2, '3', '4', 5),
  (2, '3', '4', 5),
  (3, '4', '5', 6),
  (3, '4', '5', 6),
  (4, '5', '6', 7);

commit;

create table employees.master (
  id int generated by default as identity,
  data varchar(20),
  constraint master_pk primary key (id)
);

create table employees.detail (
  id int generated by default as identity,
  master_1_id int not null,
  master_2_id int not null,
  constraint detail_pk primary key (id),
  constraint master_1_fk foreign key (master_1_id) references master (id),
  constraint master_2_fk foreign key (master_2_id) references master (id)
);

insert into employees.master(data) values ('one');
insert into employees.master(data) values ('two');
insert into employees.master(data) values ('three');
insert into employees.master(data) values ('four');

insert into employees.detail(master_1_id, master_2_id)
values (1, 2);

insert into employees.detail(master_1_id, master_2_id)
values (2, 3);

commit;

create table employees.master_fk (
    id int not null,
    name varchar(5) not null
);

create table employees.detail_fk (
    id int not null,
    master_name varchar(5) not null
);

insert into employees.master_fk(id, name)
values (1, 'name');

insert into employees.detail_fk(id, master_name)
values (1, 'name');

commit;

create sequence employees.generator_test_seq;

create table employees.generator (
    id int generated by default as identity,
    seq integer not null,
    uuid uuid not null,
    data varchar(10) not null,
    constraint generator_pk primary key (id, seq, uuid)
);

-- Generator on non-PK column
create table employees.generator_non_pk (
    id int primary key,
    generated_col int generated by default as identity,
    data varchar(10) not null
);

-- Table for testing identical rows without PK
create table employees.no_pk_identical (
    data varchar(10) not null
);

-- Table with mixed generated/non-generated columns
create sequence employees.mixed_seq;

create table employees.mixed_generated (
    id int generated by default as identity,
    manual_pk int not null,
    generated_col int not null,
    data varchar(10) not null,
    constraint mixed_generated_pk primary key (id, manual_pk)
);

-- Table with partially generated composite PK
create table employees.partial_generated_pk (
    id int generated by default as identity,
    manual_id int not null,
    data varchar(10) not null,
    constraint partial_generated_pk_pk primary key (id, manual_id)
);

create user scott password 'tiger';
alter user scott admin true;