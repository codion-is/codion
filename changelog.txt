1.0b
  Improved default about dialog text and layout
  Some javadoc improvements
  Added tests to org.jminor.common.ui.control, TestBeanPropertyLink and TestMethodControl
  Added test to org.jminor.framework.client.ui.property, TestEntityPropertyLink
  Refactored and lessened package dependencies
  Moved getValueClass() from Type to Property (smaller dep. cycle in org.jminor.framework.model)
  Fixed and renamed checkout target in build.xml, minor code cleanup
  Added a couple logos, used in demos f.x.
  Profiling.selectRandomRows() added
  EntityDbConnection does not add EntityRepository info if it's already initialized
  Property.BooleanProperty.toBoolean() improved
  Navigation now selects correct detail model
  Removed CTR from resizing key combination
  Improved FrameworkUiUtil.showInDialog()
  Re-enabled EntityTestUnit.testUpdate(), added abstract modifyEntity() to accomodate
  Removed redundant entityID parameter from IEntityDb.selectMany(String entityID, List<EntityKey>)
  Completed the unit tests for EmpDept demo
  ControlIterator renamed to IControlIterator for consistency
  Fixed EmpDept test so they run on Oracle (oh the irony) (2 digit deptno values)
  Updated TipsAndTricks.txt
  Added FrameworkSettings.transferTextFieldFocusOnEnter
  Added UiUtil.transferFocusOnEnter(JTextField)
  TextFieldPlus, IntField, and FrameworkUiUtil changed according to the above
  South toolbar is now focusable
  Search sensitive refresh button now only visible when the search panel is visible
  Tentative fix of ToggleBeanPropertyLink
  Navigation is now CTR based with resizing enabled by adding SHIFT
  Added action listener to toolbar update button, showing the update popup menu (wrong position though)
  EntityPanel.prepareUI() now transfers focus to the table (not 100%, header seems to get focus) if the edit panel is hidden
  Added jminor-srctest.jar to dist
  We now throw intelligible exceptions on initialization if required system properties are not found
  EntityComboBoxModels are now provided automatically by the EntityModel if none has already been provided, changed demos to reflect this
  Moved all db connection type/host/sid/port property constants from FrameworkConstants to Constants
  Cleaned up DbUtil.getDatabaseUrl()
  Renamed a few constants in DbUtil
  Added boolean parameter propagateReferenceValues to Entity.doSetValue, selectMany->initializeValue from 7.1% to 0.4%
  FilteredComboBoxModel no longer sets the selected value to null if it does not exist after filtering
  Refactored and cleaned up Entity.doSetValue/setValue and EntityKey.setValue
  EntityDbConnection now initializes all reference property values, instead of leaving out the null references, which messes up originalValue
  propertyName replaced with propertyID throughout
  Removed unused methods from IEntityDb, restructured it and IEntityDbRemote a bit
  Privatized DbConnection.revalidate()
  Added EntityModel.allowInsert/Update/Delete, for overriding. Fx. used when initializing the EntityPanel, also prevents actual insert/update/delete
  IEntityDb.getDependentEntities now returns a Map instead of a HashMap
  Fixed Entity.propertyValuesEqual(), it now uses the entity recieved as parameter as base for the comparison
  EntityRepository.initialize now throws an exception if two properties have the same propertyID
  EntityPanel.handleSave uses tableModel.getSelectionModel().isSelectionEmpty() instead of EntityModel.isActiveEntityNull, which does not really work for non-trivial primary keys
  EntitModel.setValue does not update stEntityActive anymore, problematic when editing primary key values and thereby activating the state
  TextBeanPropertyLink now correctly disables the textComponent if LinkType is LinkType.READ_ONLY
  Removed entity history functionality, not mature enough and not really required