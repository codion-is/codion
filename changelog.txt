0.4.8 (following section imported from old changelog)
  EntityTableModel.getRowBackgroundColor() added, used in EntityTableCellRenderer
  Property.SubQueryProperty added
  EntityDefinition.getSelectColumnString() handles Property.SubQueryProperty;
    entitySelectColumnNames cache removed from EntityDefinition
  EntityDbConnection and FrameworkDbUtil changed accordingly
  Version info added to ant build files
  Confirm on exit option added, set FrameworkSettings.confirmExit to true
  Some rather crude i18n work in EntityPanel (Update/Insert), EntityTablePanel, EntityApplicationPanel and FrameworkUiUtil
  MessageFactory.getMessage() renamed to MessageFactory.get()
  Unused caption constants removed from EntityPanel
  *EntityModel property change notification was problematic when Property.DenormalizedProperty was
    processed, skipped it, since denormalized properties are functionally immutable
  Some code reordering in EntityDbConnection
  EntityDbConnection.getDependentEntities() now works for multi column references
  Embedded search panel now resizes appropriately when the first property search panel is a null panel
  Restructured FrameworkConstants
  Added information on filtering via query configuration to TipsAndTricks
  Improved db profiling code
  Removed unused events from EntityApplicationModel
  Refactored EntityApplicationPanel.startApplication()
  Removed unused local variable from ClientWrapper
  Added a separate port for the rmi db connection, runtime pr framework.server.db.port
  Updated rmi server launch files to reflect changes in property names
  Added typical jnlp file code to the framework walkthrough file
  Added a dialog asking the user whether to retry if login fails
  Some i18n in EntityCriteriaPanel and EntityTablePanel
  EntityTableModel.getQuerySearchProperties() can be overridden to remove query configuration filters for certain properties
  EntityTableModel.clearQueryCriterias() added
  EntityTableModel.getQuerySearchCriteria() parameter changed from Property to String (propertyName)
  Fixed PropertyCriteria so that is provides "is not null" when appropriate
  Fixed DateTextProperty so that it returns a Timestamp object instead of Date, in accordance with the db layer which uses Timestamp exclusively, due to lack of an exact time element in Date
  EntityPanel.createLabel() added
  TextProperty.immediateUpdate can be activated even if the field is a JFormattedTextField
  EntityTablePanel.doubleClickAction property added
  EntityTableSearchPanel now shows correct indicator colors when initialized
  Prevented a NullPointerException in cases when login fails in EntityApplicationPanel.startApplication
  EntityPanel.initCommandPanels() added, override to initialize panels that depend on the commands being initialized
  A minor change in EntityTablePanel.configureQuery(), dialog not disposed of between showings
  FrameworkUiUtil.showInDialog() now takes boolean parameter includeButtonPanel and returns the dialog
  EntityCriteria.getWhereClause() now available with boolean parameter includeWhere, if false "where" is replaced with "and"
  EntityDbConnection.selectMany() handles the above change
  EntityPanel.getDefaultCommands() renamed to EntityPanel.getPanelCommandSet()
  Entity.setValue() now translates null entities into actual null values
  FrameworkUtil.createNullEntity() does not initialize null entities for all reference properties anymore
  Reordered functions according to access rights in PropertyChangePanel
  Improved EntityModel.getPropertyChangeDebugString()
  Added PropertyChangeEvent.isInitialization boolean property
  java.util.Date changed to java.sql.Timestamp where possible
  FrameworkUtil.hashByPropertyValue() added
  FrameworkUtil.getPropertyValues() added
  Date panel text fields have immediateUpdate set as true as default
  TextProperty.getTextField() added, protected
  DateTextProperty.fieldMaskString property added
  DateTextProperty now regards an empty text field as valid
  FilteredComboBoxModel; setting and filtering the contents does not interfere with the selected item
  FilteredComboBoxModel/Test moved to package ...framework.common.model
  FrameworkUiUtil.createDateFieldPanel() fixed, now it handles null Timestamp values correctly
  FrameworkUiUtil.showEntityPanelDialog() now takes a JPanel parameter as owner instead of Container
  Clear button now uses mnemonic charAt(1) instead of charAt(0) due to conflict with the Help menu item (in icelandic)
  Wait cursor is shown while waiting for a support panel initialization
  FrameworkUiUtil.getParentWindow() used instead of getParentFrame where applicable
  ExceptionDialog added to package client.ui, copied from general, used throughout
  EntityModel notifies property value changes in an order which does not interfere with combo box bindings
  Prevented a potential null pointer exception in EntityDefinition.getEntityReferenceProperties()
  EntityModel.setValue() protected, added public EntityModel.uiSetValue()
  Property links updated according to the change above
  Changed maximum log file size from 20 megabytes to a more reasonable 2 megabytes
  TextProperty.getFormattedValue() added, called when format is not null
  DateTextProperty overrides TextProperty.getFormattedValue() and returns a Timestamp object instead of Date
  EntityDefinition.get... methods now throw rational exceptions instead of NullPointerExceptions
  EntityPanel.getPropertyToUpdate() improved, sorts combo box contents
  PropertyListener added to package ...client.property, replaces ActionListener for property change events
  Moved EntityModel.PropertyChangeEvent to package ...client.property
  Replaced EntityApplicationPanel.getTabPlacement() with FrameworkSettings.tabPlacement property
  EntityPropertyEditor does not try to set current value if it is null
  EntityTablePanel, removed vertical scrollbar when not needed
  ItemComboBoxModel moved from ...client.model to ...common.model
  FrameworkUiUtil.chooseFileToSave() added, copied and improved from UiUtil
  Some i18n work in FrameworkUiUtil
  EntityTablePanel.allowQueryConfiguration property added
  FilteredComboBoxModel.setSelectedItem() fixed, now selects nullValueItem when initialized
  TextProperty now handles both JTextField and JTextArea, uses JTextComponent
  FrameworkUiUtil.createTextArea() added
  EntityPanel.createTextArea() added
  EntityModel.getEntityValue() added
  EntityModel.getPropertyInitializedEvent() added
  EntityModel.setValue() now updates stEntityActive accordingly
  FrameworkSettings.resetComboBoxModelsOnClear property added, defaults to false
  EntityModel.resetComboBoxModelOnClear() added, enabling EntityComboBoxModels to be reset when the model is cleared, returns the above property by default
  EntityModel.getEntitiesForInsert() and getEntitiesForUpdate() now return copies of the the active entity, instead of a reference, which was problematic
  Entity.Key.setValue() now copies null value keys as well
  DateTextProperty now returns Constants.TIMESTAMP_NULL_VALUE instead of null when the date string is unparsable
  EntityModel.updateEntityModifiedState() added, can be overridden
  Constructor added to ComboBoxPropertyLink
  EntityDbConnection.selectMany() fixed so that it can handle data sources containing the WHERE keyword
  Entity.Key.hashCode() returns Constants.INT_NULL_VALUE when all key values are null
  EntityDbConnection.selectMany() implementation bug causing f.ex. getDependentEntities() not to work, fixed, IN_LIST instead of EXACT
  EntityPanel returned by FrameworkUiUtil.createStaticEntityPanel() has query configuration disabled, as per panel definition (static data)
  FrameworkUiUtil.createStaticEntityPanel() changed to createStaticEntityTablePanel()
  PropertyCriteria.getConditionString() fixed so that filtering on Property.SubQueryProperty is possible
  EntityModel.getPropertyNotificationOrder() added, override to provide the model with a specific property change notification order
  Unused IEntityDb.selectSingle() and IEntityDb.selectMany() implementations removed
  EntityApplicationPanel.showApplicationPanel() added
  EntityTableModel.includeCriteriaComboBoxModel() added, override to disable a the column criteria combobox for a given property
  EntitySearchPanel.initEntityComboBox() changed to initEntityField(), creates a JTextField for the column criteria if no combo box model is available
  FilteredComboBoxModel.setSelectedItem() returns if the item is already selected since MaximumMatch results in two setSelectedItem() calls each time a change is made
  FilteredComboBoxModel now selects the nullValueItem on init if one is specified
  EntityModel.notifyPropertiesInitialized() bug introduced earlier (propertyNotificationOrder) fixed, didn't exclude Property.DenormalizedProperty as it should
  EntityPanel repaints its JTable on EntityModel.evtEntitiesChanged
  KeyCriteria added to ...framework.db
  EntityDbConnection.selectMany(entityClass, primaryKeys) implementation changed so that it uses EntityDbConnection.selectMany(entityCriteria)
  EntityModel.lastUpdatedEntityPrimaryKeys changed to lastUpdatedEntities
  EntityModel.doUpdate() now returns the updated entities
  EntityModel.update() now uses the entities returned by IEntityDb.update(), see above
  Removed redundant refresh of last updated entities when replacing them in the EntityTableModel, see above
  New overloaded version of EntityTableModel.replaceEntities() added
  FrameworkUtil.createColumnComboBoxModel() now takes a Property object as parameter instead of a columnName string
  EntityModel.entityComboBoxModels changed to EntityModel.propertyComboBoxModels since it now alos contains column combobox models
  EntityModel.getColumnComboBoxModel() added
  FrameworkUtil.createColumnComboBoxModel() fixed so that it selects the correct item on reset
  FrameworkUiUtil.createColumnComboBox() now takes a refresh trigger Event parameter
  FrameworkUtil.createColumnComboBoxModel() now takes a refresh trigger Event parameter, if null it defaults to EntityModel.evtEntitiesChanged
  Access to EntityModel.activeEntity and originalActiveEntity removed
  EntityModel.getActiveEntity() changed to getActiveEntityCopy()
  EntityModel.isActiveEntityNull() added
  EntityModel.isActiveEntityModified() added
  EntityModel.refreshDetailModelsAfterInsertOrUpdate() now throws UserException, DbException and RemoteException instead of RuntimeException
  Events evtEntitiesUpdated and evtEntitiesDeleted fired before refreshDetailModelsAfterInsertOrUpdate() is called, since an exception during that method would prevent those from firing
  FrameworkUtil.cloneMap() removed, unused
  Entity.copy() renamed to getCopy() and improved, now it truly makes a deep copy by calling Entity.getCopy() for all entity reference property values
  Entity.Key.setValue() now makes a deep copy
  Entity.rsEntity() overloaded with a Type parameter, implemented for Type.INT and Type.STRING
  Replaced RuntimeException with IllegalArgumentException where appropriate and removed a few redundant try/catch clauses
  EntityModel.initTableModel() renamed to initializeTableModel for consistency
  PropertySearchModel constructor now takes a EntityComboBoxModel as parameter instead of EntityTableModel, removing a cyclical package dependency
  EntityDefinition.getPropertyByColumnName/ByIndex renamed to getProperty
  EntityDefinition.getColumnIndex() removed
  EntityModel.updateDetailModelsByActiveEntity() now sends a null value as a parameter if the active entity is null
  EntityComboBoxModel.setSelectedItem() now sends a null value forward to super.setSelectedItem() if the value to be selected is a null entity
  FrameworkUiUtil.viewSelectionDependencies() removed, inlined in EntityPanel.viewSelectionDependencies()
  EntityPanel.initUI, initAssociatedPanels, initEntityTablePanel, initCommandPanels renamed to initialize... for consistency
  EntityPanel.getSetQueryRangeCommand() removed
  Removed redundant i18n constants regarding query range
  FrameworkUiUtil.chooseFileToSave() now caches the JFileChooser for quicker subsequent execution time
  FrameworkUiUtil.createStaticEntityTablePanel() changed back to createStaticEntityPanel(), since EntityTablePanel has no popup commands by default
  WaitCursor added to EntityPanel.viewSelectionDependencies(), .handleInsert(), .handleUpdate(), .handleDelete(), .updateSelectedEntities(), FrameworkUiUtil.showDependenciesDialog() and FrameworkUiUtil.chooseFileToSave()
  FrameworkUiUtil.createDateChooserPanel() added
  Util.DateMaskFormat subclasses including time element format changed from ..H:mm.. to ..HH:mm.. to force double digit 24 hour time
  FrameworkUiUtil.DateInputPanel now keeps a reference to the DateMaskFormat
  EntityPropertyEditor now uses the aforementioned FrameworkUiUtil.createDateChooserPanel()
  FilteredComboBoxModel does not set its contents on initialization
  EntityComboBoxModel.setSelectedItem() returns if the combobox model is empty
  EntityPanel restructured
  EntityTablePanel.init... renamed to initialize... for consistency
  FrameworkUiUtil.initFilterPanels() renamed to initializeFilterPanels
  FrameworkUiUtil.initFilterPanel() renamed to initializeFilterPanel
  FrameworkUiUtil.selectEntities() now throws UserCancelException when the user presses the cancel button
  Popup menus are now triggered correctly with a MouseListener.mouseReleased() MouseEvent.isPopupTrigger() combo, instead of a MouseListener.mouseClicked() MouseEvent.getButton() == MouseEvent.BUTTON3 combo
  EntityApplicationPanel.getApplicationInfo() renamed to getRootEntityPanelInfo(), getSupportApplicationPanelInfo() to getSupportEntityPanelInfo(), showApplicationPanel() to showEntityPanel()
  Added a popup menu with a refresh action to EntityComboBox
  EntityTableModel.getQuerySearchProperties() now returns primary key properties as well by default
  Static inner class EntityApplicationPanel.ApplicationPanelInfo moved to own file and renamed to EntityPanelInfo
  ComboBoxPropertyLink now makes an editable combobox post its edits on each keystroke without hiding the popup
  FrameworkUiUtil.createColumnComboBox() overloaded to add a editable boolean parameter
  EntityPanel.createColumnComboBox() overloaded to add a editable boolean parameter
  TextProperty, IntTextProperty, DoubleTextProperty and DateTextProperty renamed to ...TextPropertyLink
  ColumnComboBoxModel added to package ...client.model
  Removed a bunch of unused methods from FrameworkUtil
  Access to EntityPropertyLink.entityModel and .property restricted to private, protected get methods added
  EntityModel.evtActiveEntityChanged renamed to evtActiveEntityModified
  EntityTableModel.evtQueryRangeChanged removed
  PropertyCriteria.get/setValues() added
  EntityTableModel.queryRange Point removed and queryRangeCriteria added
  Added a few verbose logging messages
  Version info added, accessible via Help->About
  PropertySearchPanel now only initializes the lower bound field if it applies, as in, not for boolean or entity properties
  PropertySearchPanel does not refresh EntityComboBoxModels on initialization
  Added a couple of test cases to TestEntity
  Fixed a bug in FrameworkUiUtil.showAndPreparePanel which prevented the keyboard navigation feature from working unless each panel had set the default focus component
  Added valueContainsLiteralCharacters parameter to EntityPanel/FrameworkUiUtil.createTextField, used for formatted text fields
  Refactored detail panel handling in EntityPanel and added the option (dialogDetailPanels via constructor) to have them open in a non-modal dialog instead of embedding them in the parent panel
  Ctr-click on table header to show column filters disabled since it conflicted with sorting multiple columns, now this is only available via the table popup menu
  PropertySearchPanel fixed so that is shows initial value for date fields
  EntityModel.evtBeforeInsert, evtBeforeUpdate and evtBeforeDelete added
  Mnemonics added to i18n for the most common actions
  EntityPanel.allowQueryConfiguration added, is propagated to the EntityTablePanel and controls if Query Configuration appears in the table popup menu
  PropertySearchPanel does not reset SearchType anymore when going from advanced to simple search
  EntityTableModel.setSortingStatus(columnName, status) added
  EntityTableModel.whereLikeValue renamed to simpleSearchString
  EntityPanel floatingFilters property removed from constructor
  EntityPanel.getDetailPanel() removed
  EntityModel.getSelectionDependencies() moved to EntityTableModel
  EntityPanel.detailViewStatus added
  EntityTablePanel now trigger query configuration on status label double click
  Added action buttons to EntityPanel south
  EntityTableCellRenderer does not change the font of the topmost selected record
  PropertySearchPanel checkBox instead of togglebutton
  EntityCriteriaPanel refactored, added toggle command for the underlying EntityTableModel.showAllWhenNotFiltered property
  EntityTablePanel.configureQuery now sets the wait cursor while constructing the EntityCriteriaPanel
  EntityComboBoxModel and ColumnComboBoxModel now implement a new interface IRefreshable
  EntityPanel calls EntityModel.refreshComboBoxModels() on initialization if refreshOnInit is set to false
  PropertyCriteria removed redundant parenthesis
  EntityTableModel.queryCriteriaComboBoxModels not cleared when the search panel is hidden
  {EntityModel.setValue() now updates stEntityActive accordingly} from earlier reverted
  EntityTablePanel table summary panel added
  PropertySummaryPanel added
  EntityPanel.getDetailSplitPaneResizeWeight() added
  EntityTableModel.getColumnValues() added
  EntityTableModel.searchStateOnRefresh added
  EntityTableCellRenderer now uses the system default NumberFormat for all numbers
  EntityPanel SwingWorker used for the CRUD actions
  EntityTablePanel summary panel added
  PropertySummaryPanel added
  Fixed a few icons
  EntityTablePanel refresh button is now aware of the search state, enabled when the search state is different from the one when last refreshed
  PropertySearchModel.hashCode() added
  Replaced Framework*Util.toList() with Arrays.asList() throughout and removed the unused methods
  PropertySearchModel now selects the current value in the EntityComboBoxModel after it's refreshed
  PropertySearchPanel turned from butt ugly to absolutely stunning
  EntityTablePanel refresh button is now activated by pressing F5
  EntityTableModel simpleSearchString changes trigger stDataDirty to be activated
  EntityTablePanel.initializeSimpleSearchPanel made even simpler
0.4.9
  Improved default about dialog text and layout
  Some javadoc improvements
  Added tests to org.jminor.common.ui.control, TestBeanPropertyLink and TestMethodControl
  Added test to org.jminor.framework.client.ui.property, TestEntityPropertyLink
  Refactored and lessened package dependencies
  Moved getValueClass() from Type to Property (smaller dep. cycle in org.jminor.framework.model)
  Fixed and renamed checkout target in build.xml, minor code cleanup
  Added a couple logos, used in demos f.x.
  Profiling.selectRandomRows() added
  EntityDbConnection does not add EntityRepository info if it's already initialized
  Property.BooleanProperty.toBoolean() improved
  Navigation now selects correct detail model
  Removed CTR from resizing key combination
  Improved FrameworkUiUtil.showInDialog()
  Re-enabled EntityTestUnit.testUpdate(), added abstract modifyEntity() to accommodate
  Removed redundant entityID parameter from IEntityDb.selectMany(String entityID, List<EntityKey>)
  Completed the unit tests for EmpDept demo
  ControlIterator renamed to IControlIterator for consistency
  Fixed EmpDept test so they run on Oracle (oh the irony) (2 digit deptno values)
  Updated TipsAndTricks.txt
  Added FrameworkSettings.transferTextFieldFocusOnEnter
  Added UiUtil.transferFocusOnEnter(JTextField)
  TextFieldPlus, IntField, and FrameworkUiUtil changed according to the above
  South toolbar is now focusable
  Search sensitive refresh button now only visible when the search panel is visible
  Tentative fix of ToggleBeanPropertyLink
  Navigation is now CTR based with resizing enabled by adding SHIFT
  Added action listener to toolbar update button, showing the update popup menu (wrong position though)
  EntityPanel.prepareUI() now transfers focus to the table (not 100%, header seems to get focus) if the edit panel is hidden
  Added jminor-srctest.jar to dist
  We now throw intelligible exceptions on initialization if required system properties are not found
  EntityComboBoxModels are now provided automatically by the EntityModel if none has already been provided, changed demos to reflect this
  Moved all db connection type/host/sid/port property constants from FrameworkConstants to Constants
  Cleaned up DbUtil.getDatabaseUrl()
  Renamed a few constants in DbUtil
  Added boolean parameter propagateReferenceValues to Entity.doSetValue, selectMany->initializeValue from 7.1% to 0.4%
  FilteredComboBoxModel no longer sets the selected value to null if it does not exist after filtering
  Refactored and cleaned up Entity.doSetValue/setValue and EntityKey.setValue
  EntityDbConnection now initializes all reference property values, instead of leaving out the null references, which messes up originalValue
  propertyName replaced with propertyID throughout
  Removed unused methods from IEntityDb, restructured it and IEntityDbRemote a bit
  Privatized DbConnection.revalidate()
  Added EntityModel.allowInsert/Update/Delete, for overriding. Fx. used when initializing the EntityPanel, also prevents actual insert/update/delete
  IEntityDb.getDependentEntities now returns a Map instead of a HashMap
  Fixed Entity.propertyValuesEqual(), it now uses the entity received as parameter as base for the comparison
  EntityRepository.initialize now throws an exception if two properties have the same propertyID
  EntityPanel.handleSave uses tableModel.getSelectionModel().isSelectionEmpty() instead of EntityModel.isActiveEntityNull, which does not really work for non-trivial primary keys
  EntitModel.setValue does not update stEntityActive anymore, problematic when editing primary key values and thereby activating the state
  TextBeanPropertyLink now correctly disables the textComponent if LinkType is LinkType.READ_ONLY
  Removed entity history functionality, not mature enough and not really required
  Added EntityModel.containsDetailModel()
  Refactored EntityRepository
  Moved getEntityDependencies from EntityDbConnection to EntityRepository
  Fixed getEntityDependencies, by adding somewhat of a hack to EntityCriteria.isKeyCriteria()
  Removed AbstractEntityTestUnit and refactored EntityTestUnit
  Removed EntityDbConnection.getEntityCacheSize(), unused
  Removed DbConnection.getAutoIncrementValue()
  Fixed EntityTestFixture and EntityTestUnit, now initializing referenced entities is simpler and problem free
  Constants removed along with all its evil machinations (INT_NULL_VALUE...), changes throughout to accommodate
  Wait cursor now active during EntityPanel.initialize()
  Navigating through uninitialized panels now works as expected, that is, the panels are initialized and shown on demand (events were not bound until the panel was initialized)
  Some javadoc added in EntityPanel
  EntityComboBoxModel contents are now sorted by default
  Moved validateValue() and getValueClass() from Property to EntityUtil, lessening dependencies
  Refactored classes in org.jminor.framework.model and ...client.ui, lessening cyclical dependencies
  Table column header is now bold when search is enabled
  Fixed a couple bugs introduced during the refactoring, see above
  Renamed a couple events and methods in EntityTableModel
  Removed EntityPanel.usePreferredSize property
  Some restructuring/reordering/refactoring in EntityPanel, EntityTablePanel and EntityApplicationPanel
  Some more refactoring/restructuring/renaming
  Replaced the old EntityTestUnit and EntityTestFixture with org.jminor.framework.testing.EntityTestUnit
  ToggleBeanPropertyLink fixed at last
  Profiling renamed to ProfilingModel
  Fixed bug in UiUtil.makeUpperCase, null values were not handled correctly
  Fixed bug in EntityTableSearchPanel, it did not resize correctly on advanced toggle when the leftmost panel was not a search panel
  Added a condition in EntityPanel.handleSave, which prevents a save/update confirmation if updating is not allowed
  Simplified the strict editing functionality a bit, State -> boolean
  Removed a redundant variable, useDividers, from FrameworkSettings
  PostgreSQL table status query disabled since the function greatest is missing
  FrameworkSettings now Map based, useQueryRange now defaults to false
  Fixed a serious bug in Entity.getReferencedKey, where key values were cached on entityID instead of Property, fu**ing up the case where a table referenced the same table more than once
  Fixed a bug in Entity.doSetValue, it did not propagate the reference values when the new value was null, since it simply checked if the new value was an instance of Entity
  Some test case cleanup
  OPS$ removed from EntityApplicationPanel.getUserName(), now it uses the DEFAULT_USERNAME_PREFIX settings parameter
  EntityApplicationPanel.getFrameTitle() added
  Restructured EntityApplicationPanel along with minor access modifier modifications
  EntityApplicationPanel.loginRequired() added
  EntityTableCellRenderer boolean renderer now indicates row selected status
  EntityRepository.getEntityProperty() changed to getEntityProperties() since an entity can reference another via more than one property
  Property.DenormalizedViewProperty, ownerEntityID changed to a more logical referencePropertyID
  Entity.getDenormalizedValue changed according to the above
  EntityTablePanel.initializeTableCellRenderer() added
  EntityTablePanel.allowQueryConfiguration renamed to queryConfigurationAllowed, added getter
  Moved code from EntityPanel.initializeEntityTablePanel to EntityPanel.initialize, since it prevented simple overriding of said method
  A parameter to limit the number of records retrieved, recordCount, added to EntityCriteria, DbConnection and relevant EntityDbConnection code
  Removed whereClause caching in EntityCriteria, it was the source of a subtle bug, where the criteria got cached with the where keyword during server logging but used without it
  EntityPanel.setDetailPanelState() now hides all child detail panels if the state is changing from DIALOG
  Entity.isValueNull() fixed, it returned a false positive for Property.NonDbProperty values, since it only relied on Entity.getRawValue() which circumvents the EntityProxy, which handles NonDbProperties
  EntityPanel.initialize(), moved model refresh to top, otherwise the combo box models would be empty, thus preventing correct initial selection
  AbstractEntityPropertyLink, caption removed from constructor, sent property.propertyID forward as action name, removed from subclass constructors also
  EntityModel.modelCaption shortened to caption
  EntityCriteria.orderByClause added, EntityDbConnection.selectMany() changed accordingly
  IEntityDb.selectMany(EntityCriteria criteria, boolean order) removed
  Added getEntityDb() as a shorthand for getDbConnectionProvider().getEntityDb() to EntityModel and EntityTableModel
  EntityPanel.initialize(), moved model refresh back to bottom since most EntityComboBoxModels are created during UI initialization
  SmartRefresh/forceRefresh functionality removed
  TableStatus deprecated
  IEntityDb.getTableStatus() removed
  EntityCriteria.isRangeCriteria and tableHasAuditColumns properties removed
  EntityTableModel.recordCount added in place of TableStatus
  EntityRepository.createDateColumns added
  EntityTablePanel.toggleSearchPanel added, moving code from EntityPanel
  EntityComboBoxModel.setEntityCriteria() added, getEntitiesFromDb() changed accordingly
  Fixed bug preventing correct double click behavior if edit panel was null, detail panel was not shown
  FrameworkSettings.FILTER_QUERY_BY_MASTER property added, default false
  Fixed bug, resulting in a automatically created entity combobox while refreshing detail models after update and delete
  Added space bar as a selection trigger in a comboboxless PropertySearchPanel
  Property.EntityProperty is now hidden if caption is null
  EntityTablePanel, redundant private field tableControls removed
  EntityPanel, removed redundant getDefaultFocusComponent, isActive methods
  EntityPanel, getSelectedDetailPanel() now throws IllegalArgumentException if no detail panels are available
  Update selected entities popup menu now contains the propertyID as caption for properties without captions
  Some minor changes, error handling/messages and javadoc
  EntityComboBoxMOdel.setEntityCriteria() no longer initiates a refresh, must be done separately
  DbConnection.endTransaction() now calls DbConnection.commit/rollback, instead of connection.commit/rollback, results in correct logging
  DbConnection.setTransactionOpen() removed
  EntityPanel.prepareUI(), bindModelEvents(), default focus fixed, now the focus is only put on the defaultFocusComponent on panel activation if the focus owner is not a child component
  SteppedComboBox now uses dynamic popup sizing if the popupWidth property is <= 0, using the getDisplayWidth property from the UI
  PropertySearchModel, EntityComboBox now selects correct item on initialization
  EntityModel.getEntityComboBoxModel no longer creates a model if none exists
  EntityModel.createEntityComboBoxModel added
  FrameworkUiUtil.createEntityComboBox() changed accordingly
  EntityModel.getDefaultValue() renamed to getDefaultEntity
  Some javadocking
  EntityModel.createPropertyComboBox() added and createEntityComboBox protected
  EntityPanel.getInputManager, added List<Entity> toUpdate parameter
  EntityTableModel.searchStateOnRefresh changed from a hash based long to a String due to brokenness
  Property.hashCode removed
  AbstractSearchModel.toString() removed
  PropertySearchModel.hashCode() removed
  EntitySearchField added
  SearchFieldPropertyLink added
  EntityPropertyEditor changed, IEntityDbProvider instance variable removed, takes EntityModel as parameter and uses EntityModel.createEntityComboBoxModel when instantiating a combo box
  EntityModel.createEntityComboBoxModel made public, added nullValueItem and sortContents parameters
  EntityPanel.updateSelectedEntities changed to accommodate the above
  EntityRepository.propertyDescriptions map added, along with set/getPropertyDescription
  FrameworkUiUtil now adds EntityRepository.getPropertyDescription() as a tooltip on generated property components
  ControlSet added some null checks during additions to prevent adding null controls/actions
  EntityTablePanel.isPropertyColumnVisible() and setPropertyColumnVisible() added
  EntityPanel.selectTableColumns() added
  EntityPanel added "Select columns" action to table popup menu, added to FrameworkMessages
  EntityTableModel.clear() added
  EntityTablePanel added Clear action to popup menu
  PropertySearchModel.toString() added missing SearchType to result
  EntityTablePanel.setPropertyColumnVisible() now automatically disables searching on hidden columns
  EntitySearchField added double click as an OK trigger
  EntitySearchField.additionalSearchCriteria added
  EntityBindingFactory.createEntitySearchFieldPanel added
  FrameworkUiUtil.createEntitySearchFieldPanel added
  AbstractSearchModel.stLocked added, introducing the ability to lock search models in a certain state
  AbstractSearchPanel changed according to the above, linking components to the locked state
  PropertySearchModel.initialize fixed to prevent a property setting roundtrip back to the ui
  AbstractPropertySearchModel.stSearchEnabled privatized due to locking mechanism
  EntityModel.stAllowInsert/Delete/Update, .isAllowInsert/Delete/Update, .setAllowInsert/Delete/Update added
  EntityKey improved setValue error handling and reporting
  IntTextPropertyLink fixed valueFromText(), parsing the - sign to -1
  FilteredComboBoxModel.removeItem(), fireContentsChanged() called instead of resetContents(), thus preventing full refresh after removing an item
  UiUtil.selectDirectory() now uses user.home property in case no start directory is specified (instead of C://)
  UiUtil.selectDirectory() added dialogTitle parameter
  EntityTablePanel renamed a few fields
  EntityTablePanel added Copy cell action to JTable popup menu
  EntityUtil.getUpdateSQL() now throws an exception if no updatable properties have been modified, instead of returning a malformed SQL query
  EntitySearchField constructor now takes a String propertyID instead of Property as parameter
  PropertyCriteria now handles LIKE and NOT LIKE as IN and NOT IN when more than one value is specified
  EntityTableModel some refactoring, javadoc improvements and additions
  EntityModel javadoc improvements and additions
  AbstractSearchModel.caseInsensitive added
  PropertyFilterModel changed according to the above
  PropertySearchModel changed according to the above
  EntityRepository.initialize now correctly identifies multiple properties with same id
  EntitySearchField developed further, case sensitivity and wildcards
  EntityTableModel.simpleSearchString removed
  EntityTableModel.stSimpleSearch added
  EntityTablePanel.initializeSimpleSearchPanel improved
  FrameworkUiUtil changes to accomodate the above
  EntityTableSearchModel created, EntityTableModel, EntityTablePanel, EntityCriteriaPanel and EntityTableSearchPanel changed accordingly
  Property.EntityProperty.isLookup property added
  EntityTableModel.includeSearchComboBoxModel() removed, see above item
  EntityTableModel.propertyFilterModels moved to EntityTableSearchModel
  NotEquals60x16.gif changed
  EntitySearchModel.setExactSearchValue() now returns a boolean indicating whether the search state changed
  EntityTableModel.filterByReference() now only triggers a refresh if the search state changed
  EntityPanel.setupControls() now uses the setControl() method
  Control improved error reporting
  Util.formatLat/Lon improved
  Removed > 40 instances of generic Exception catch clauses
  EntityTableCellRenderer date renderers now accept String values as input
  EntityTablePanel.setTableCellRenderer() added
  Util.putUserPreference() and getUserPreference() added
  EntityApplicationPanel sets the last successful login name as the default username for the currently logged on OS user
  FrameworkSettings.getDefaultUser() now returns the username found in the OS users preferences, if any
  Added preferences editing permission to jminor_client.policy
  EntityUtil.getModifiedEntities() added
  EntityDbConnection.update() does not throw an exception any more if it receives an empty list
  DbConnection.queryObjects() added
  TestDbConnection added
  IEntityDb/EntityDbConnection.selectRows() added
  Fixed a bug in Entity, where the toString cache was not cleared on property change
  Moved EntityProxy handling from EntityRepository to static EntityProxy methods, to remove a circular class dependecy
  Added some javadocs
  Fixed a bug in EntityPanel.createStaticEntityPanel() where getAllEntitiesFromDb() was not being overridden due to changes in signature
  EntityApplicationModel.loadDbModel renamed to loadDomainModel
  FrameworkSettings.PERSIST_ENTITY_PANELS added
  EntityApplicationPanel changed according to the above
  EntitySearchField modified to be able to handle multiple entities
  SearchFieldPropertyLink modified to accommodate the above
  PropertySearchPanel now uses a EntitySearchField when a ComboBoxModel is not available in the PropertySearchModel, the field searches by every string property found in the entity
  EntityCriteriaPanel fixed so that text fields in PropertySearchPanels are no longer tiny
  EntityRepository.setPropertyDescription() fixed, it now maps the description to entityID and propertyID instead of only propertyID, which isn't unique
  EntityRepository.setEntitySearchProperties/getEntitySearchProperties added, to hold default search by properties for entities
  EntitySearchField now sets its selected entity value as null on enter when it contains no text, instead of returning a search result containing all underlying records
  TestState and TestAggregateState added
  Property.NonDbProperty renamed to TransientProperty
  Some javadoc additions and changes
  TestDbConnection improved
  EntityModel.getDefaultEntity() fixed, now it doesn't set the value of Property.DenormalizedProperty, since that is set via its parent property
  EntityPanel.getUpdateProperties() no longer includes Property.DenormalizedProperty
  EntityModel.evtActiveEntityChanging added, fired before the active entity changes
  PropertySearchModel.toString(Object obj) fixed, now it uses entity.getPrimaryKey().toString() instead of entity.toString(), which resulted in a non-unique EntityTableSearchModel.searchState values
  EntityModel.lastDeleted/updated... fields removed
  InsertEvent, UpdateEvent and DeleteEvent added to accommodate the above change
  EntityModel.isEntityModified renamed to isActiveEntityModified and changed so that is returns the isActive result of the state returned by getActiveEntityModifiedState
  UiUtil.selectFile() added
  Some javadoc additions and changes
  PropertySearchModel.toString() fixed, now adds the current search type to the result
  EntityModel.masterSelectionChanged changed, now when no entity is selected the master reference property value is set to null in linked detail models
  PropertySearchModel.toString() fixed again, now adds the current search type to the result only when the search is enabled
  Entity.setAs() fixed, now copies the toString cache as well
  EntityApplicationPanel.getRootEntityPanelInfo renamed to getMainEntityPanelInfo
  EntityApplicationModel.getRootEntityModelClasses renamed to getMainEntityModelClasses
  Entity.getValueAsUserString() removed
  EntityProxy.getValueAsUserString() removed
  EntityModel, if the selected record is being updated via the table model refresh the one in the model
  DbConnection, EntityDbConnection, Property and remote interfaces updated for rudimentary BLOB handling
  EntityPropertyEditor now uses Timestamp for date properties
  FrameworkUiUtil, lookup dialog added to all text fields by default
  UiUtil.selectDirectory/File now shows the last visited directory when used
  Transfer focus on enter now works for all editable comboboxes
  EntityModel.getDefaultValue(Property property) now returns null if the the combobox associated with the property has an empty string selected
  EntityComboBoxModel.setSelectedItem now translates an empty string to null
  EntitySearchField added transferFocusOnEnter property
  EntitySearchField, EntityComboBox and UiUtil.setTablePopup now show popup menus via JComponent.setComponentPopupMenu
  PropertySummaryPanel.evtStateChanged renamed to evtSummaryTypeChanged
  EntityApplicationPanel added mnemonics to main menu
  ControlSet removed mnemonic field, now it simply uses the inherited functionality of Action
  EntityPanel.showDependenciesDialog simplified
  EntityPropertyEditor mnemonics added to buttons
  UiUtil.showInDialog added mnemonic to OK button
  ExceptionDialog mnemonics added to buttons
  EntityPanel.getDefaultFocusComponent() added, for overriding
  EmpDept application i18n'ized
  EntityTablePanel.copyTableAsDelimitedString() added along with control method
  EntityPanel.selectTableColumns() moved to EntityTablePanel
  EntityModel.getAllEntities(final boolean includeFiltered) added
  FrameworkSettings.INITIAL_SEARCH_PANEL_STATE added and used in EntityPanel
  Entity.getDenormalizedViewValueAsString() added
  Util.getDelimitedString() refactored out of writeDelimitedFile
  Entity.is(final String entityID) added
  Property.getCaption() returns the caption of the parent property in case the caption is null
  EntityTableModel.initSearchModel() renamed to initializeSearchModel
  EntityRepository.getVisiblePropertyList() added
  EntityModel.resetComboBoxModelOnClear(final Property property) removed, replaced by useLastValueAsDefault()
  FrameworkSettings.RESET_COMBOBOXMODELS_ON_CLEAR replaced with PERSIST_ENTITY_REFERENCE_VALUES, with default value 'true'
  EntityModel.useLastValueAsDefault() renamed to persistValueOnClear()
  DoubleField.setDecimalSymbol() added
  DoubleTextPropertyLink and IntTextPropertyLink changed so that valueFromText now uses Util.getDouble()/getInt()
  EntityPropertyEditor text fields now include lookup functionality (CTR-space)
  IntBeanPropertyLink/DoubleBeanPropertyLink fixed, now use Util.getInt/Double
  EntityUtil.getPropertyValues() added
  EntityPropertyEditor simplified and improved
  EntityUtil.copyPropertyValue() added to lessen cyclical dependencies within the framework.model package
  Entity.isValueNull() method moved to EntityUtil to lessen cyclical dependencies within the framework.model package
  EntityPanel.EntityPanelInfo moved up to it's own class and renamed to EntityPanelProvider... and related changes
  EntityApplicationPanel.getMain/SupportEntityPanelInfo renamed to getMain/SupportEntityPanelProviders
  EntityPanel.getDetailPanelInfo renamed to getDetailPanelProviders
  AggregateState.AND/OR changed to enum
  EntityCriteria, PropertyCriteria and EntityKeyCriteria moved from framework.model to framework.db.criteria
  PropertyChangeEvent and PropertyListener moved from framework.model to common.model
  EntityDependencies deleted (and from EntityRepository), EntityDbConnection.Dependencies and .resolveEntityDependencies() added
  EntityModel strictEditing changed, hopefully improved but needs more thought/work
  AbstractPropertyLink and subclass hierarchy improved and simplified with the above in mind
  IEntityDb.selectForUpdate() now works for multiple entities
  AbstractPropertyLink.refreshUI/Model renamed to updateUI/Model
  TextPropertyLink.isDigitString() unused, removed
  AbstractPropertyLink enabledState removed from constructor, didn't have any effect whatsoever
  PropertyLink class hierarchy changed according to the above, that is, removed a lot of 'null' parameters
  JavaDoc changes and additions
  TextPropertyLink.getFormattedValue() renamed to getParsedValue()
  More JavaDoc additions and changes as well as some minor code improvements, variable names and such
  CheckBoxPropertyLink renamed to BooleanPropertyLink
  UiUtil.DateInputPanel improved and moved to its own class
  TextInputPanel created
  EntityPropertyEditor now uses TextInputPanel for text input
  FrameworkUiUtil.createDateInputField renamed to createDateInputPanel
  EntityBindingFactory.createDateInputField renamed to createDateInputPanel
  EntityBindingFactory renamed to EntityBindingPanel
  UiUtil.showInDialog button caption and mnemonic is now consistent
  TextInputPanel.getTextComponent() added
  EntityDbUtil created, moved some db related stuff from EntityUtil to this class as well as to EntityDbConnection
  TestEntityDbConnection created to accommodate the above (moved dml test case from TestEntity)
  Fixed and added copyright messages
  EntityUtil.isPrimaryKeyModified() added
  EntityModel.update() fixed so that if primary keys were involved in the update the table model is refreshed afterwards
  CompactDotDateFormat mask fixed
  EntityModel.evtLinkedDetailModelChanged now only updates the selected detail model with the active entity if it is non-null
  TestEntityDbConnection fixed, it did not initialize the required domain model
  Entity.setReferenceKeyValues() subtle bug fixed, when a EntityProperty was part of the primary key it didn't update the modified state when changed since it asked the primary key if it had a value using the EntityProperty propertyID (_ref) so it was always an initialization
  EntitySearchField renamed to EntityLookupField
  FrameworkUiUtil.createEntitySearchField() renamed to createEntityLookupField
  EntityBindingPanel.createEntitySearchField() renamed to createEntityLookupField
  ControlProvider moved from ui to ui.control, where it belongs
  ControlSet.iterate() made static and moved to ControlProvider
  UiUtil.handleException() moved to ExceptionDialog to remove a cyclical dependency
  UiUtil.getUser() moved to LoginPanel to remove a cyclical dependency
  EntityUtil.getValueString/printPropertyValues/copyPropertyValue/isValueNull/equal/validateValue/getPropertyChangeDebugString moved to Entity to remove a cyclical dependency
  EntityLookupField renamed some variables and methods from search... to lookup...
  EntityTestUnit.getReferencedEntities() removed
  EntityTestUnit.initializeDbConnection() added
  Split demo sources from test source tree to srcdemos
  ManagerComboBoxModel removed from EmpDept demo
  EntityModel.createEntityComboBoxModel(Property.EntityProperty property) added, uses "-" as the default nullValueItem and sorts the contents
  EmployeeModel override createEntityComboBoxModel() instead of initializeEntityComboBoxModels()
  EntityPropertyEditor now calls the new EntityModel.createEntityComboBoxModel() version
  FrameworkConstants.WILDCARD removed
  FrameworkSettings.WILDCARD_CHARACTER property added
  AbstractSearchModel, EntityLookupField, PropertyCriteria added wildcard property
  FrameworkConstants.JMINOR_SERVER_NAME_PREFIX removed
  FrameworkSettings.SERVER_NAME_PREFIX added
  FrameworkConstants.REMOTE_CONNECTION_PROVIDER and LOCAL_CONNECTION_PROVIDER removed
  FrameworkSettings.REMOTE_CONNECTION_PROVIDER and LOCAL_CONNECTION_PROVIDER properties added
  UiUtil.bindColumnSizesAndPanelSizes() renamed to bindColumnAndPanelSizes and simplified considerably
  UiUtil.DIMENSION_TEXT_FIELD_SQUARE added
  UiUtil.DIMENSION18x18 deprecated
  EntityTablePanel.initializeTableMouseListener() added, for overriding
  EntityPanel.initializeTableDoubleClickAction() added, for overriding
  EntityPanel.confirmUpdate() now uses the edit panel for dialog parent if one is available
  UiUtil.transferFocusOnEnter() now transfers focus backwards is shift is down
  EntityTableModel.getAllEntitiesFromDb() renamed to performQuery
  EntityTableModel.getSearchCriteria() renamed to getQueryCriteria
  State.StateGroup now uses WeakReference to prevent memory leaks
  Event.scheduleForRemoval/scheduleForAddition replaced by synchronizing calls
  Event.debug removed along with the relevant code
  org.jminor.common.model.WeakPropertyChangeListener added
  EntityPanel.initialize() now uses WeakPropertyChangeListener for focusActivation -> no memory leak
  EntityPanel.focusPropertyListener field added for the above
  EntityPanel.resizePanel(), added pixelAmount parameter
  EntityLookupField.setSelectedEntity() added
  EntityPanel.getUpdateProperties() now returns primary key properties as long as they are not auto-incremented
  EntityPropertyEditor now uses isLookup to determine if a combobox or a EntityLookupField should be used
  PropertySummaryPanel constructor now takes a maximumFractionDigits parameter
  PropertySummaryPanel now shows a decimal number average for integer properties
  Renamed a few e1 Exceptions to ex
  EntityTableSearchModel.setStringSearchValue() removed
  EntityTableSearchModel.setSearchState() renamed to setSearchModelState
  EntityTableSearchModel.getSearchModelState() privatized
  EntityTableSearchModel.dbProvider field removed
  UiUtil.DIMENSION18x18 removed
  EntityLookupModel added
  EntityLookupField refactored according to the above
  LookupFieldPropertyLink renamed to LookupModelPropertyLink
  EntityModel.createEntityLookupModel() added
  TestEntityLookupModel added
  PropertySearchModel.entityLookupModel field added, along with overloaded constructors, a getter and bindLookupModelEvents()
  PropertySearchPanel.dbProvider field removed (whohooo) due to the above, along with all the crap involved
  EntityCriteriaPanel, removed all traces of IEntityDbProvider
  EntityTableSearchModel now handles creating the EntityLookupModel
  EntityTableSearchPanel, removed all traces of IEntityDbProvider
  ControlProvider, inlined UiUtil.linkToEnabledState to remove a cyclical dependency
  IEntityDb.executeCallable renamed to executeStatement
  EntityDbConnection reorganized
  RemoteClient renamed to ClientInfo and moved to common.model, common.remote removed
  Added backup ant targets to project template build.xml file and backup.path property to build.properties
  Added deploy_project ant task to build.xml
  Changed default ant task to deploy_all
  readme.txt added
  EntityDbRemoteServer, EntityRepository.get().add(repository.initializeAll()) is now done in the connect() method instead of deep down inside EntityDbConnection
  EntityDbConnection, EntityRepository parameter removed from constructor
  EntityDbConnectionPool, remove EntityRepository parameter from checkOutConnection()
  EntityDbRemoteAdapter, EntityRepository parameter removed from constructor
  PropertySearchPanel now instantiates a JComboBox instead of EntityComboBox to reduce cyclic dependencies
  EntityComboBoxModel/EntityListModel.getEntitiesFromDb() renamed to performQuery
  EntityListModel.entityCriteria field + setter/getter added, used in performQuery()
  EntityLookupField constructor overloaded with an Action parameter, which is performed on enter if the text field represents the selected entities
  PropertySearchPanel uses the aforementioned EntityLookupField constructor action parameter to enable/disable the search on enter
  Event.fire() now copies the listeners list, synchronizing the fire/add/remove methods wasn't enough apparently, so it was removed
  EntityModel.masterModel field added
  EntityPanel.masterPanel field added
  EntityApplicationModel.applicationTreeModel removed
  EntityPanel.initializeResizing/Navigation moved to EntityApplicationPanel
  EntityPanel.getDetailPanels() and getLinkedDetailPanel() added
  EntityApplicationPanel shows the root tab pane regardless of the number of main application panels
  EntityApplicationPanel, some refactoring and restructuring
  Reorganized the resources structure
  Added run_demo_***, run_server_*** tasks to ant build file, restructured it a bit and renamed junit_db_*** properties to run_db_*** in build.properties
  DbConnection query logging now includes query execution time
  EntityApplicationPanel, removed setLookAndFeel command from menu
  UiUtil.setLookAndFeel() removed
  Ant build file cleanup and restructuring, merged deploy_profiling into deploy_demos
  Added create/delete db targets for empdept to ant build file as well as relevant scripts to resources/demos/empdept/scripts
  EntityDbUtil.getQueryString() now uses "is" for null values
  Added resources for creating a derby db for the unit tests
  EntityTestUnit now uses setUp() and tearDown() to connect and disconnect from the database
  PropertySearchModel.bindComboBoxEvents() reverted back to previous version since my "fix" introduced a bug resulting in only single item selection
  Fixed copyright message name for UTF-8, yet again
  TestPetstore now extends EntityTestUnit
  Unit tests now run with an embedded derby database
  Added run_derby_server and shutdown_derby_server to ant build file
  Created lib/derby for the derby jars
  Removed mysql and oracle jdbc drivers due to licensing
  EntityModel.stActive and activeStateGroup moved to EntityPanel, where they belong
  Added IntelliJ project file
  Excluded *Stub.class files from jminor-server.jar
  Added user authentication (scott/tiger) to demo db
  Database.get().getURL() and onDisconnect() now takes a connectionProperties parameter for derby user authentication
  FrameworkSettings.AUTHENTICATION_REQUIRED property added and used in EntityApplicationPanel.loginRequired()
  IdSource constant ID_ prefix removed
  Entity.equal() renamed to isEqual
  FrameworkSettings.FILTER_QUERY_BY_MASTER property value is now true by default
  Default usernames are now saved in preferences per application
  UiUtil.selectAllOnFocusGained(JTextComponent) added
  FrameworkSettings.USE_NUMBER_FORMAT_GROUPING property added, default true
  Refactored EntityTableModel.EntityJRDataSource out of EntityTableModel which no longer implements JRDataSource hence no more reportPrintIterator and currentReportRecord fields
  EntityTableModel.initReportIterator() renamed to initializeReportIterator and made protected
  Removed a few probably ill-placed synchronized keywords, they simply gave the false illusion of thread-secure stuff
  EntityPanel constructor now takes an EntityModel parameter
  EntityPanel.setModel() removed
  UiUtil.showInDialog() improved button caption and mnemonic
  EntityTableModel constructor parameters reordered
  EntityLookupModel, EntityComboBoxModel, EntityListModel and EntityModel constructor parameters reordered for consistency
  EntityPanel.compactPanel field renamed to compactLayout
  EntityPanel.initialize(), moved some code to initializeUI() and bindEvents()
  EntityTablePanel.initializeSummaryPanel() now uses the underlying JTable column model when initializing summary panels
  Database.get().DERBY_LONG_DATE_FORMAT added
  FrameworkUiUtil.IEntityExceptionHandler and DefaultEntityExceptionHandler added
  FrameworkUiUtil.exceptionHandler static field added plus getter/setter
  EntityApplicationModel.instantiateMainApplicationModel() added, for overriding
  EntityApplicationPanel.startApplication() refactored along with prepareFrame()
  EntityPanel now accepts DIALOG as the initial detail panel state
  EntityPanel focus grabbing on activation improved
  EntityApplicationPanel.loginRequired() renamed to isLoginRequired()
  EntityApplicationPanel.startApplication() refactored further
  EntityApplicationPanel.model field renamed to applicationModel
  ProfilingModel.selectRandomRow() now takes a EntityTableModel as parameter
  ProfilingPanel/ProfilingModel refactored
  SchemaBrowser domain model now uses resource bundle
  DbConnection.endTransaction(boolean rollback) is now endTransaction(boolean commit)
  IEntityDb.endTransaction(boolean rollback) is now endTransaction(boolean commit)
  No /bin folder in demos/server deployment, run files fixed
  ServerMonitor, added option to shutdown the selected server, leaves the server monitor in a bad state
  EntityPanel focus grabbing on activation reverted somewhat, so that it does not try to grab default focus when a child component already has the focus, the table for example
  EntityApplicationPanel, navigation modifier key changed from CTR to ALT, resizing from SHIFT-CTR to SHIFT_ALT
  Removed the query range explanation from the TipsAndTricks.txt file, since it is rarely used
  EntityPanel, pressing ALT-CTRL-T toggles the focus between the table and input panels.
  Petstore client, some getDetailSplitPaneResizeWeight() adjustments
  FrameworkMessages, Support tables mnemonic changed from S to P, S conflicted with the edit panel save action
  EntityPanel, direct references to model replaced by getModel() throughout
  EntityTablePanel, direct references to tableModel replace by getTableModel() throughout, as well as for entityTable/getJTable()
  @override annotation added where applicable
  EntityTableModel, some reordering of fields
  QueryRange removed with all its ugly effects
  FrameworkSettings.USE_SMART_REFRESH removed, unused
  EntityPanel, keyboard actions added, ALT-CTRL-T focuses the table, ALT-CTRL-W the edit panel and ALT-CTRL-S the search panel
  EntityTablePanel, ALT-CTRL-T shows the popup menu instead of SHIFT-SPACE
  EntityTablePanel.addJTablePopupMenu() added (removed from UiUtil)
  PropertyCriteria.getMultiReferenceCriteriaString(), bug fixed, searchType NOT_LIKE did not trigger "not in" condition
  EntityTablePanel, a tentative searchPanel/summaryPanel scrollbar fix, added 15 pixel label buffer to each panel, somewhat hacky but seems to work
  UiUtil.getDateFromUser() simplified and refactored
  PropertyFilterPanel, removed unused/inactive key listener from date input field for getting date from use via dialog
  FrameworkUiUtil.getDateChooserPanel() doesn't use today's date as default value if initialValue is not provided
  FrameworkSettings.DEFAULT_SHORT/LONG_DATE_FORMAT properties added
  EntityTableCellRenderer uses the above
  EntityLookupField now transfers focus on enter correctly
  TestEntityDbConnection, TestEntity, EntityDbUtil, null value properties not included in insert statements
  UiUtil.moveCaretToStartOnFocusGained added
  UiUtil, createFormattedField, text field moves cursor to start on focus gained
  Database.get().DATABASE_HOST_PROPERTY used for Derby embedded instead of SID
  DbConnection.execute() uses executeUpdate()
  EntityPanel.confirmUpdate() now uses the EntityPanel for dialogOwner instead of the editPanel
  EntityModel.updateDetailModelsAfterInsertOrUpdate split in two
  EntityModel now sets the appropriate property value in detail models as the newly inserted record
  Util.getFirst/LastDayOfYear/Quarter added
  H2 database support added
  Database.get().isEmbedded() added
  Fixed some server side issues with sid being a required property
  Added jcalendar library to server monitor
  Added server security policy entries for embedded databases
  Added run_server_localhost_derby_embedded.bat
  UiUtil.moveCaretToEndOnFocusGained() added
  Util.addAcceptSingleFileDragAndDrop(JTextComponent) added
  ItemComboBoxModel.getIndexOfItem() added
  BooleanComboBoxModel.setSelectedItem(boolean) added
  Util.DEFAULT_SHORT/LONG_DATE_FORMAT private fields added
  Util.isDateOk() renamed to isDateValid()
  TestCriteriaSet, TestDbUtil, TestItemComboBoxModel, TestEvent, TestUtil and TestBooleanComboBoxModel added
  EntityLookupModel.dbProvider field finalized
  EntityLookupModel.allowMultipleSelection field renamed to multipleSelectionAllowed
  EntityProperty.isLookup field removed
  EntityRepository largeDataset property added for entities, replacing the above
  Property.isUpdatable field renamed to updatable
  Database is now inheritance based
  IDatabase created in org.jminor.common.db.dbms as well as implementations for supported databases
  H2 database creation task added to build.xml
  Updated and added some run scripts according to the above
  EntityApplicationPanel.getUser() now accepts empty passwords
  Added h2 lib to run targets in ant build file
  Added H2 support to SchemaBrowser (not quite working, key_column_usage table not available)
  Removed run_schema_browser targets from ant build file
  Server monitor now handles server shutdown a bit more gracefully
  IEntityDbRemoteServerAdmin.getSystemProperties() added and to implementation as well
  Server monitor code base changed radically, no more messing about with trees
  IEntityDbRemoteServerAdmin.getDatabase.getConnectionPoolStats() renamed to getConnectionPoolStatistics
  IEntityDbRemoteServerAdmin.getDatabase.getDatabaseStats() renamed to getDatabaseStatistics
  DbConnection does not call IDatabase.onDisconnect() on logout since it obviously wreaks havoc when an embedded database is running in the server
  IDatabase.onDisconnect() renamed to shutdownEmbedded(), which is called in the server on exit and in EntityDbLocalProvider on logout
  Util.addAcceptSingleFileDragAndDrop() moved to UiUtil
  FrameworkUIUtil.createComboBox() now calls UiUtil.transferFocusOnEnter for both the combobox and the editor component, it now works for uneditable boxes as well
  All unit test classes renamed ...Test from Test...
  AbstractDateMaskFormat.getDateMask() is no longer abstract
  AbstractDateMaskFormat renamed to DateMaskFormat
  EntityBindingPanel.createDateInputPanel(propertyID) added, uses the default short date format
  EntityDbRemoteServerAdmin refactored out of EntityDbRemoteServer, exported on separate port, changes in dist ant target and run files
  FrameworkConstants.SERVER_ADMIN_PORT_PROPERTY added
  EntityDbRemoteServer.shutdown() now exits properly by simply unexporting the remote object, no call to System.exit() necessary
  EntityDbRemoteAdapter now unexports itself on logout
  Updated source copyright notice where needed, removed it from 3d party files
  deploy targets in ant build file use chmod to make .sh files executable
  initialize_h2_db.sql fixed and renamed create_h2_db.sql, create_h2_db ant target changed accordingly
  run_rmi_registry.bat/sh files added to resources/server as well as resources/security/all_permissions.policy for running the registry
  build.xml cleaned up, removed dist/version and current directories, removed deploy target
  EntityDbRemoteProvider moved to server.provider
  Ant build file cleanup
  DateTextPropertyLink improved somewhat
  Event, removed name field
  Added run_rmi_registry target to build.xml, removed run/shutdown_derby_server
  Cleaned up project_template build file
  IDatabase.DATABASE_TYPE_DERBY_EMBEDDED and DATABASE_TYPE_H2_EMBEDDED removed
  IDatabase.DATABASE_EMBEDDED property added
  DerbyEmbeddedDatabase and H2EmbeddedDatabase removed
  Build and run files changed according to the above
  PropertyFilterPanel and PropertySearchPanel now use default date formats
  PropertyFilterModel.get/setUpper/LowerBound(Comparable) removed
  FrameworkUiUtil.createDateChooserPanel/Field rename to createDateInput...
  EntityBindingPanel.createControlPanel are now protected final
  EntityPanel.handleSave/Insert/Update/Delete renamed to save/insert/update/delete
  serialVersionUID added to Serializable and Externalizable classes
  State, Event and FrameworkSettings no longer implement Serializable
  manifest target added to build file
  EntityDbResultPacker.loadEntity() now catches Exception instead of SQLException
  SQLServerDatabase.getAutoIncrementValueSQL() now uses SELECT SCOPE_IDENTITY() instead of select @@IDENTITY
  EntityTestUnit.testUpdate() does not check properties which are selectOnly or not updatable
  FrameworkUiUtil/EntityBindingPanel createEntityLookupFieldPanel removed
  EntityLookupField.createPanel() added
  EntityBindingPanel javadoc'ed
  Oracle specific code removed from DbException and DbUtil
  IDatabase.getErrorMessage() added
  FrameworkMessages.VALUE_MISSING moved to Messages
  FrameworkUiUtil.IEntityExceptionHandler simplified
  EntityDbUtil.getDbException() added
  StrictEditModelTest now sets the lock timeout if the underlying database is H2 to speed up the test
  EntityApplicationModel/EntityModel/EntityTableModel.getDbConnectionProvider() renamed to getDbProvider()
  IDatabase.getUserInfoString() renamed to getAuthenticationInfo()
  Misc code cleanup
  specialRendering renamed to rowColoring everywhere
  H2/Derby jars included in demo remote run file classpath for db specific exception classes
  EntityDbUtil.getDbException() removed again
  DbException refactored
  EntityDbConnection exception handling changed according to the above
  IEntityDbProvider.getConnectEvent() removed
  Entity and EntityKey are now Serializable instead of Externalizable, the latter resulted in more bytes :|
  EntityKey.keyValues field renamed to values
  Entity.propertyValues field renamed to values
  Entity.originalPropertyValues field renamed to originalValues
  EntityDbConnection entityCache functionality removed
  EntityDbRemoteAdapter loggedIn field removed, not really used
  EntityKey no longer returns the default value for a property if no value is set
  EntityModelTest, removed the default value test according to the above
  EntityKey, all fields privatized
  Entity, changes related to the above
  EntityDbConnection, selectMany() removed redundant return ArrayList, now simply returns the query result list
  build.xml, doc -> javadoc, removed init target
  Some javadoc additions in Entity
  Property.SubQueryProperty renamed to SubqueryProperty
  Entity.validateValue renamed to validateType
  EntityRepository.setIsLargeDataset() added
  EntityModelTest refactored a bit
  EntityTablePanel.getSummaryProvider() renamed to getSummaryPanel
  EntityTablePanel.doubleClickAction renamed to tableDoubleClickAction
  EntityDbRemoteServer.getConnectionLog() renamed to getEntityDbLog
  EntityModel.update() now returns silently if it receives only unmodified entities
  EntityDbRemoteAdapter loggedIn field added again, renamed to connected, it was really used
  AbstractSearchPanel.upper/lowerBooleanComboBoxModel removed
  ModelTestDomain renamed to EntityTestDomain
  EntityPanel, renamed detailTabPane to detailPanelTabbedPanel, editDialog to editPanelDialog, detailDialog to detailPanelDialog
  EntityModel.setActive() renamed to setActiveEntity
  StringBuffer replaced with StringBuilder globally
  EntityLookupFieldTest, added more test cases
  EntityModelTest.testDetailModel() added
  EntityTestUnit refactored, initializeReferenceEntities now void, setReferenceEntity() added
  StrictEditModeTest code moved to EntityModelTest
  PropertySearchModelTest added
  Improved JasperReports integration, added client.model.reporting.EntityReportUtil, moved EntityJRDataSource from EntityTableModel to there
  Added rowColoring to EmpDept demo
  FrameworkSettings renamed to Configuration, removed get(), renamed get/setProperty to get/setValue
  All constants from FrameworkConstants move to configuration
  FrameworkConstants removed
  DateUtil created, moved date related stuff from Util, DateUtilTest created
  ClientInfo moved from common.model to common.db
  Added runtime permission to server policy file to handle some evaluation expression thing in jasper reports
  Added missing jasper collections/logging libs to server run files
  Property.EntityProperty renamed to ForeignKeyProperty
  Added compile_reports target to ant build file, along with the required libraries
  EntityModel.caption moved to EntityPanel
  EntityPanel.initialize() now calls the protected postInitialization() method, which should be overridden instead of initialize()
  Wait cursor now used while preparing reports for viewing via the EntityPanel
  EntityReportUtil.fillReport() added, called from EntityModel.fillReport()
  EntityPanel.initialize() renamed to initializePanel, initialized renamed to panelInitialized, postInitialization() renamed to initialize
  Property.is() added
  Property.DenormalizedViewProperty.referencePropertyID renamed to foreignKeyPropertyID
  Property.DenormalizedProperty.ownerEntityID renamed to foreignKeyPropertyID, changed relevant code in EntityRepository and Entity
  EntityUtil.isPrimaryKeyModified() moved to Entity
  EntityRepository.EntityInfo created
  EntityRepository refactored, transient fields removed, temporarily?
  Package framework.model renamed to framework.domain
  EntityRepository.get() removed, no longer singleton, all methods static
  IEntityDbRemoteServer.connect() now takes a map instead of a EntityRepository parameter
  EntityRepository.EntityInfo renamed to EntityDefinition, refactored
  EntityRepository.getOrderByColumnNames renamed to getOrderByClause
  EntityKey.propertyCount, singleIntegerKey fields removed
  Util.notNull() added along with test method in UtilTest
  Util.sqlEscapeString() moved to EntityDbUtil
  IEntityDb.set/isCheckDependencies() removed
  EntityTableModel.filterQueryByMaster field, setter and getter renamed to queryFilteredByMaster
  IEntityDb.startTransaction() renamed to beginTransaction
  EntityModel.initializeEntityComboBoxModels return value changed from Map<Property, ComboBoxModel> to Map<Property.ForeignKeyProperty, EntityComboBoxModel>
  EntityModel.containsTableModel() added
  EntityModel.useStrictEditing renamed to useSelectForUpdate
  EntityModel.stSelectionFiltersDetail State field changed to boolean selectionFiltersDetail
  EntityModel.refreshEntityComboBoxModels() removed
  Configuration.USE_STRICT_EDIT_MODE renamed to USE_SELECT_FOR_UPDATE
  Demo package model renamed to domain
  private List<Entity> selectMany(final List<Property> properties, final List<EntityKey> primaryKeys) removed from EntityDbConnection
  EntityCriteria.isKeyCriteria() removed
  EntityRepository.EntityDefinition.entitySelectString renamed to selectColumnsString
  EntityRepository.entityInfo renamed to entityDefinitions
  EntityDbUtil.* moved to EntityUtil, EntityDbUtil removed, it introduced a dependency cycle between db.criteria and db
  EntityDbConnection, StringBuilder used throughout
  EntityDbConnection.set/getPoolTime() made package protected
  FrameworkUiUtil.createDateInputField() removed, unused
  TableSorter.evtTableHeaderShiftClick removed
  EntityTablePanel changed according to the above, using a MouseAdapter
  EntityTablePanel.toggleColumnFilterPanel() simplified according to the above
  IDatebase.DATABASE_TYPE_* renamed to *
  IEntityDb.selectAll(String entityID, boolean order) removed
  IEntityDb.getDependentEntities() renamed to selectDependentEntities
  EntityDbRemoteProvider, moved dbProxy initialization from getEntityDb() to initializeEntityDb()
  Type.SHORT_DATE renamed to DATE and LONG_DATE to TIMESTAMP
  EntityDbRemoteProvider, removed proxy since it wasn't used at all
  package framework.tools created, DomainGenerator moved there along with the profiling package
  testing package moved to tools
  DomainGenerator improved, uses arguments and actually writes a file
  Entity.isValueEqualTo() removed, unused
  Entity, removed property debug code, moved relevant stuff to EntityModel
  EntityModel, property change debug code refactored and improved
  PropertyChangeEvent renamed to PropertyEvent and moved to framework.domain
  PropertyListener moved to framework.domain
  Excluded demos from jminor.jar
  EntityModel.getPropertyUIChangeEvent/getPropertyModelChangeEvent renamed to getPropertyUIEvent/getPropertyModelEvent
  Configuration.ALL_PANELS_ENABLED renamed to ALL_PANELS_ACTIVE
  EntityModel constructor refactored, addDetailModels() added
  EntityTablePanel.initializeSimpleSearchPanel() now uses Conjunction.OR and excludes hidden properties
  EntityTableSearchModel javadoc improvements
  Configuration.DEFAULT_SHORT_DATE_FORMAT and DEFAULT_LONG_DATE_FORMAT renamed to DEFAULT_DATE_FORMAT and DEFAULT_TIMESTAMP_FORMAT respectively
  EntityApplicationPanel.initializeSettings() renamed to configureApplication
  Renamed classes in common.model.formats to include Timestamp in classname where applicable
  DateUtil.floorLongDate() renamed to floorTimestamp
  EntityModel.getPropertyUIEvent/getPropertyModelEvent renamed back to getPropertyUIChangeEvent/getPropertyModelChangeEvent
  EntityTestUnit.initializeDbConnection changed to initializeDbConnectionProvider
  Property.ForeignKeyProperty.isWeakReference renamed to lazyLoading
  DbConnection, removed a couple of synchronized instances, these simply gave the illusion of some kind of thread safety
  IEntityDb.selectPropertyValues(), removed distinct parameter
  EntityModel.uiSetValue/setValue, removed unused notify parameter
  DbLog renamed to ServerLog
  LogEntry renamed to ServerLogEntry
  Renamed a few methods according to the change above
  ServerLog, ServerLogEntry and ClientInfo from common.db to new package common.server
  FrameworkUiUtil renamed to EntityUiUtil
  Entity.getTimestampValue() added, some changes concerning Timestamp/Date in related classes
  EntityDbRemoteAdapter refactored and cleaned up a bit, inner classes MethodLogger and RequestCounter created
  EntityApplicationModel.getMainEntityModelClasses() removed
  EntityApplicationModel.initializeMainApplicationModels() return type changed from List<Class<? extends EntityModel>> to List<? extends EntityModel> and made abstract
  EntityApplicationModel.instantiateMainApplicationModel() removed
  EntityApplicationPanel refactored a little
  EntityApplicationPanel.getAboutPanel() added memory usage
  Entity.validateType() does not accept EntityKey values for type ENTITY anymore
  ThreadLocal functionality removed from date formats
  DateUtil.getDateMask(SimpleDateFormat) added
  DateMaskFormat removed, replaced by SimpleDateFormat throughout
  EntityComboBoxModel now uses setSelectedItemByPrimaryKey when setSelectedItem is called, for better lazyLoading support
  EntityKeyCriteria, changed parameter type from varargs to list
  EntityDbConnection refactored (40 loc poof! gone)
  IEntityDbRemoteServerAdmin.get/setConnectionTimeout() added
  ServerMonitor/ServerMonitorPanel, added the above configuration setting
  PropertySummaryModel refactored out of PropertySummaryPanel
  PropertySummaryModelTest added
  EntityTableModel.getPropertySummaryModel(propertyID/Property) created
  EntityTableModel.propertySummaryModels map field introduced
  EntityTableSearchModel.stSimpleSearch converted to a simple boolean, with a getter, added to constructor as well
  EntityPanel.detailEntityPanelProviders Map renamed to detailEntityPanels and turned into a List
  EntityPanel constructor now initializes the EntityTablePanel and calls setupControls()
  EntityPanel.rowColoring field removed due to the above
  EntityPanel.queryConfigurationAllowed moved to EntityTableModel
  EntityPanel.initializePanel() now returns the EntityPanel instance
  EntityTablePanel.propertySummaryPanels map field removed, unused
  common.ui.printing.* deleted
  EntityTableModel.removeAll() removed, code moved to clear()
  IEntityDbRemote, all methods removed, apparently they were unnecessary
  EntityDbConnection, minor changes in throws clauses
  EntityDbRemoteAdapter, minor changes in throws clauses
  IEntityDb.delete() argument is now List<EntityKey> instead of List<Entity>
  EntityUtil.getWhereCondition() overloaded, ValueProvider interface introduced
  I prefix removed from interface names
  PropertyCriteria now adds parenthesis around in conditions, fixes bug due to 1000 item in list limit
  ComboBoxPropertyLink now handles PropertyComboBoxModel.isNullValueSelected()
  EntityLookupField refactored a bit
  EntityLookupModel.getEntityID() added and used
  EntityDbProvider, EntityDbLocalProvider and EntityDbProviderFactory moved to framework.db.provider
  EntityModel.uiSetValue() renamed to setValue()
  EntityModel.setValue() renamed to setPropertyValue()
  EntityModel.addDetailModels() now checks if the detail models are based on valid foreign keys
  Property.maxLength field added
  EntityUiUtil.createTextField() now uses the above field to restrict the allowed number of characters in text fields
  UiUtil.makeUpperCase() overloaded for TextFieldPlus
  Property, replaced constructor arguments with chained method calls
  EntityProxy.addEntityProxy() renamed to setEntityProxy()
  EntityRepository.getDatabaseProperties() implemented with ListIterator instead of HashSet
  LoginPanel, initial focus bug in linux finally fixed
  EntityModel.addDetailModels() doesn't check if the detail models are based on valid foreign keys anymore
  EntityLookupModel.searchStringRepresentsSelected() now returns true for zero selected entities and an empty search string
  EntityPropertyEditor.getValue(), didn't take into consideration that the input field could be a EntityLookupField
  Property.propertyID, propertyType and caption fields privatized
  EntityRepository.initialize() renamed to define()
  DoubleFieldDocument and IntFieldDocument now handle null string values like their superclass
  TextBeanPropertyLink.textComponent field replaced by document
  ToggleBeanPropertyLink.button field replaced by buttonModel field
  ToggleBeanPropertyLink.getButtonModel() added
  ControlProvider toggle control methods changed according to the above
  SelectedItemBeanPropertyLink no longer implements ItemListener, uses an anonymous instance instead
  ui.property.*PropertyLink constructor argument order changed, moved UI component up front
  BooleanPropertyLink, buttonModel argument removed from constructor, buttonModel field plus getter added
  EntityUiUtil.createCheckBox() changed according to the above
  EntityPropertyLinkTest.testDatePropertyLink() improved
  EntityTableModel.filteredEntities renamed to hiddenEntities
  Configuration.DEFAULT_COMBO_BOX_NULL_VALUE_ITEM added
  FilteredComboBoxModel.nullValueItem type changed from Object to String
  EntityModel, EntityUiUtil, EntityBindingPanel and PropertyComboBoxModel changed according to the above
  FilteredComboBoxModel.nullValueItem unfinalized, setter added
  EntityPropertyEditor.InputManager.getInputManager() now throws UserException, useful when refreshing combo box models
  EntityModel.getPropertyComboBoxModel(), moved code into PropertyComboBoxModel constructor
  EntityEditModel refactored from EntityModel
  Entity.getPropertyChangeEvent() removed
  Entity.setFirePropertyChangeEvent() removed
  Entity.add/removePropertyListener() added
  State.evtSetActive/evtSetInactive removed
  State.LinkeState and getLinkedState() added
  EntityEditModel.getPropertyChangeEvent() and getPropertyValueSetEvent() refactored
  Entity.getModifiedState() now returns a linked state
  State.name field removed along with a couple constructors
  EntityEditPanel refactored out of EntityPanel
  ResultPacker is no longer serializable
  EntityPanel.editPanel field renamed to editControlPanel
  EntityPanel.editPanel field added (EntityEditPanel)
  EntityBindingPanel deleted, functionality merged into EntityEditPanel
  framework.client.ui refactoring, removed dependency cycles
  framework.client.ui.reporting.EntityReportUiUtil added
  EntityUiUtil.createEntityComboBoxPanel() and createEntityLookupFieldPanel() added
  SearchTypes renamed
  EntityDb.selectForUpdate() removed, replaced with optimistic locking
  EntityDbProvider.logout() renamed to disconnect
  EntityDb.logout() renamed to disconnect
  DbConnection.getConnectionUser() renamed to getUser()
  EntityDbRemoteServer and EntityDbRemoteServerAdmin refactored, removing cyclical dependency
  IdSource.isQueried() and isAutoIncrement() added
  EntityDbConnection uses the above in insert()
  EntityProxy nested into Entity, renamed to Proxy
  EntityKey nested into Entity, renamed to Key
  PropertyEvent nested into Property, renamed to Event
  PropertyListener nested into Property, renamed to Listener
  EntityPropertyEditor renamed to PropertyEditorPanel and refactored
  EntityPanel.initializeEditPanel(), added EntityEditModel as parameter
  EntityPanel.initializeEntityTablePanel() renamed to initializeTablePanel(), added EntityTableModel and ControlSet as parameters
  UserException removed, RuntimeException used throughout instead
  ValidationException added, thrown by EntityModel.validateData() and EntityPanel.validateData()
  UiUtil.DefaultExceptionHandler.handleException() now unwraps RuntimeExceptions
  PropertyFilterPanel refactored
  Configuration.getDefaultDateFormat() and getDefaultTimestampFormat() added
  EntityTableModel now performs the query on refresh before clearing the model
  FormattedTextPropertyLink refactored out of TextPropertyLink
  DatePropertyLink now extends FormattedTextPropertyLink
  EntityUiUtil.createTextField() refactored
  Property.isNullable field added
  EntityEditModel.isValid() default implementation uses the above
  TextPropertyLink.addValidator() added
  FormattedTextPropertyLink overrides the above and does its thing
  Configuration.INVALID_VALUE_BACKGROUND_COLOR added
  Property.description field added
  EntityRepository.set/getPropertyDescription() removed
  FormattedTextBeanPropertyLink refactored out of TextBeanPropertyLink
  AbstractPropertyLink, removed name parameter
  PropertySearchPanel refactored
  AbstractSearchPanel.getInputFormat() added
  Type.Boolean enum removed, good riddance
  BooleanComboBoxModel refactored and moved to common.model.combobox
  EntityModel.getDetailModel(String entityID) added
  EntityTestUnit.getDbConnectionProvider() renamed to getDbProvider()
  EntityKeyCriteria, removed the unused getKeys() and getProperties() methods
  Methods returning Collection fields now return a new Collection, preventing modification to the field contents
  EntityRepository.EntityDefinition moved up to framework.domain
  EntityDefinition refactored, added chained setters
  EntityRepository.define(EntityDefinition) added, rest deprecated
  EntityRepository.define(EntityDefinition) renamed to add
  EntityRepository.define() removed, wohooo
  Entity.isValueNull() needs to handle Entity.Key values as well for Type.ENTITY
  Property fields privatized, getters added
  Property.selectOnly field renamed to readOnly
  ForeignKeyProperty now uses an unmodifiable list for reference properties
  EntityDbConnection.getResultPacker(Type) is now non static and caches the packers
  EntityComboBoxModelTest and PropertyComboBoxModelTest added, rather rudimentary, to say the least
  Unit tests relying on a database connection now use a centrally initialized EntityDbProvider in EntityDbConnectionTest
  EntityDbRemoteServer.connectionTimeout field now represents seconds instead of milliseconds
  EntityTestUnit EntityDbProvider field replaced with a EntityDb field
  EntityDefinition, fixed bug preventing DenormalizedProperty from working
  Entity.hasDenormalizedProperties field removed
  State.StateGroup, now all other states are deactivated if an active state is added to the group, added a synchronized block in the add method
  Configuration.PERFORM_NULL_VALIDATION added
  EntityModel.validateData() renamed to validateEntities
  EntityModel.validateEntities() performs null validation if Configuration.PERFORM_NULL_VALIDATION is true
  EntityDefinition refactored, all Collection fields made unmodifiable
  Cryptic ret return parameter name replaced throughout
  EntityEditModel validation refactored, isValid() is now final, validate(property,value) throws ValidationException added
  EntityModel.validateEntities() now calls EntityEditModel.validate
  TextPropertyLink now uses the improved validation mechanism in EntityEditModel and adds the validation message to the component tooltip
  TextPropertyLink and FormattedTextPropertyLink refactored a bit, added toolTip functionality to the formatted one
  AbstractEntityPropertyLink.getValidationMessage() added
  EntityEditModel.getEntityComboBoxModel() and getPropertyComboBoxModel() now throw RuntimeException when no comboboxmodels have been initialized
  EntityComboBoxModel and PropertyComboBoxModel moved from model.combobox to model
  Configuration.getDefaultDateFormat() and getDefaultTimestampFormat() removed
  DefaultDateFormat and DefaultTimestampFormat added to common.model.formats
  UiUtil.ExceptionHandler moved up into common.ui package, replaced the old ExceptionHandler interface
  UiUtil.DefaultExceptionHandler moved up into common.ui.package
  DefaultDateFormat and DefaultTimestampFormat removed from common.model.formats, illegal dependency introduced
  DateUtil.getDefaultDateFormat() and getDefaultTimestampFormat() added
  DateUtil moved from framework to framework.client.model.util
  Property.mnemonic field added
  EntityUiUtil.createLabel() add, moved from EntityEditPanel, now uses the above mnemonic field
  Configuration.DEFAULT_LABEL_TEXT_ALIGNMENT added
  DomainClassGenerator improved quite a lot
  Configuration constants changed
  H2Database now uses "sa" for username in embedded mode if none is specified
  ExceptionDialog now truncates the shown message to 100 characters
  Criteria toString renamed to asString
  Database.get() removed and createInstance() added
  Dbms instance is propogated all the way down to DbConnection instead of relying on the static Database.get() method
  Dbms.getSqlDateString() implementations made thread safe using ThreadLocal DateFormats
  EntityApplicationPanel.constructApplicationModel() made non-static and protected
  EntityDbLocalProvider.disconnect() does not revalidate an invalid connection before trying to disconnect it
  EntityApplicationPanel.constructApplicationModel() made abstract and renamed to initializeApplicationModel
  EntityApplicationPanel.startApplication() signature changed accordingly
  EntityApplicationPanel.getUser() made non-static and protected
  EntityComboBoxModel now selectes item whether or not it exists in the model
  EntityApplicationPanel.saveUser() added
  EntityDbConnection.insert() now disregards id generation if primary key values are already set
  SearchType.IN removed
  EntityCriteria.propertyCriteria() added
  AuthenticationException removed, replaced with SQLException
  PropertyCriteria refactored
  common.model.formats SimpleDateFormat classes deleted
  common.model.formats.DateFormats added
  UiUtil.getSize() renamed to getScreenSizeRatio()
  common.db.Criteria.asString(), added Dbms parameter
  DbConnection.endTransaction(boolean commit) replaced with rollbackTransaction() and commitTransaction()
  EntityDb.endTransaction(boolean commit) replaced with rollbackTransaction() and commitTransaction()
  EntityDb.writeBlob() readBlob() signatures changed
  EntityCriteria removed ambiguous method
  EntityCriteria.setOrderByClause() added
  EntityModel refactored, insert/update/delete mechanism moved to EntityEditModel
  EntityEditModelTest added
  bindEventsInternal() added where applicable, so that you don't have to remember to call super.bindEvents() when overriding bindEvents()
  EntityEditModel.getEntityCopy() overloaded with includePrimaryKeyValues parameter
  EntityEditModel.insert() now uses the above method
  EntityEditModel.stEntityNotNull changed to stEntityNull
  EntityEditModel.getEntityNotNullState() renamed to getEntityNullState()
  EntityEditModel.initializeEntityComboBoxModels() removed
  EntityEditModel.isPropertyNullable() added
  EntityEditPanel.getDefaultFocusComponent() added, protected
  EntityApplicationPanel now statically initializes the Messages class
  Property.preferredWidth renamed to preferredColumnWidth
  EntityRepository.getTransientProperties() added
  EntityDefinition.transientProperties field added plus getter
  EntityResultPacker now initializes Property.TransientProperty values as null, does not apply to Property.DenomormalizedViewProperty
  EntityDefinition, added tableName to constructor, used in demos, supports multiple entities based on the same table
  EntityRepository.setEntitySearchProperties() removed
  EntityTestUnit.createEntity() added
  Property.columnHasDefaultValue field added
  UiUtil.selectAllOnFocusGained() now clears the selection on focus lost
  FilteredComboBoxModel.nullValueItem renamed to nullValueString
  FilteredComboBoxModel.emptyStringIsNull boolean field added
  PropertyComboBoxModel sets emptyStringIsNull as true
  EntityEditModel.validate() now takes an action parameter
  EntityEditModel.validate() now takes into account if a column has a default value during null value validation
  EntityUiUtil.createEntityLookupField() now calls UiUtil.selectAllOnFocusGained() for the field
  Entity.validateType() added entity type validation for foreign keys
  EntityDb.delete(EntityCriteria) added
  SelectCriteria refactored out of EntityCriteria
  CriteriaUtil added, moved static helper methods there from EntityCriteria
  EntityTableSearchModel.setExactSearchValue renamed to setSearchValues and generalized, now takes a propertyID and a Collection of values
  Configuration.COMPACT_ENTITY_PANEL_LAYOUT added
  common.db.Database renamed to DatabaseProvider
  common.db.dbms.AbstractDatabase added
  common.db.dbms.Dbms renamed to Database
  EntityDbLocalProvider, EntityDbRemoteProvider set entityDb instance to null on disconnect
  SERVER_LOGGING_ON and SERVER_SECURE_CONNECTION properties changed from 1/0 to true/false
  EntityApplicationPanel.getHelpText() added
  EntityPanel.createStaticEntityPanel refactored and simplified
  Property.BooleanProperty.toSQLString() bug fixed, return null value on false
  Entity.doSetValue()/setValue() now returns the old value
  EntityUtil.copyEntities() added
  EntityPanel.updateSelectedEntities() now copies the selected entities before setting the value, hence no resetting the value on exception
  EntityUtil.getPropertyValues() renamed to getDistinctPropertyValues()
  DatabaseProvider moved from common.db to common.db.dbms
  Util.getContents() renamed to getTextFileContents() and refactored
  Util.getTextFileContents() added Charset parameter
  EntityLookupField now calls the enterAction if the search string is empty
  Entity.getDateStringValue() renamed to getFormattedDate() and it now returns an empty string in case of a null value
  EntityApplicationPanel restructured and refactored, startApplication() and prepareFrame() no longer static
  Entity.Proxy.compareTo() by default uses Collator for i18n sorting
  TableSorter now uses a Collator for String columns for i18n sorting
  EntityTablePanel, some refactoring/restructuring/renaming
  EntityPanel, moved a few getButton() methods to EntityTablePanel
  EntityPanel, removed a couple getButton() methods, renamed others to getControl()
  EntityEditModel.validate() bug fixed, it allowed null values in non-nullable columns during update, since L921
  EntityApplicationPanel.savePreferences() added, called during exit()
  EntityTablePanel.addSouthPanelButtons() removed, initializeSouthPanelToolbar() added
  EntityPanel.getSouthPanelButtons() renamed to getSouthPanelControls(), result no longer includes update button
  EntityPanel.getUpdateButton() removed
  TextInputPanel.maxLength field added
  EntityEditPanel.createTextInputPanel() now uses the above
  TextFieldPlus, fixed bug, getMaxLength() did not prevent insert in case the content was pasted into the field
  EntityApplicationPanel.getSupportModelControlSet() renamed to getSupportTableControlSet()
  EntityApplicationPanel.showInitializationDialog() renamed to showStartupDialog()
  EntityApplicationPanel.evtApplicationStarted event field added
  StateGroup, fixed ConcurrentModification error by iterating array in updateAccordingToState()
  DbConnection.toString() added, for logging
  EntityLookupField now uses wait cursor while performing the query
  EntityEditModel.isPropertyNullable() added entity parameter
  EntityEditModel.validate() overloaded with entity parameter
  EntityPropertyLinkTest separated into multiple test classes
  DoubleTextPropertyLinkTest, added a simple validation test
  Spelling corrected throughout
  EntityLookupField now uses Entity.compareTo() for lexical ordering of selection list
  Entity.setDefaultProxy() not used in demos, problematic during tests for example, when one proxy overrides another
  EntityEditPanel.setDefaultFocus() now requests focus for the base panel in case no default focus component is set
  MethodLogger.getLogEntries() does not fail when logging is not enabled
  EntityEditModel.validate() removed value parameter
  DefaultExceptionHandler.unwrapRuntimeException() now works properly
  DefaultExceptionHandler.unwrapRuntimeException() bug fixed
  EntityTableModel.getFetchCount() added
  EntityTableCellRenderer.DateRenderer(DateFormat) added
  EntityTableCellRenderer.TimestampRenderer(DateFormat) added
  EntityTableCellRenderer.createRenderer(Property) added
  EntityTableModel.tableColumnProperties replaced by TableColumnModel
  EntityTableSearchModel.tableColumnProperties replaced by TableColumnModel
  EntityTableSearchPanel.tableColumnProperties removed
  Property.searchable added
  EntityTableModel.convertColumnIndexToView() added, basically copied from JTable
  EntityTableModel now handles dynamic column positioning
  EntityTableCellRenderer.getRenderer() now takes Property as parameter instead of column index
  EntityTablePanel show/hide table column functionality improved
  EntityTableSummaryPanel added
  EntityTablePanel.summaryPanel added
  EntityTablePanel table popup menu now added to the JTable parent as well, works for empty tables with no columns showing
  EntityTablePanel column reordering allowed
  UiUtil.bindColumnAndPanelSizes() now takes column reordering in account
  EntityTableModel.getTableColumn(Property) added
  EntityTableModel.getColumnClass() and getValueAt() both use convertColumnIndexToView
  EntityTableSearchPanel now handles column reordering
  Configuration.ALLOW_COLUMN_REORDERING added
  EntityTablePanel.allowColumnReordering() added, returns the above value by default, used in initializeJTable()
  EntityTableSearchModel refactored
  EntityTableCellRenderer, EntityTablePanel changed according to the above
  PropertyFilterModel.columnIndex field removed
  EntityTablePanel, fixed column filter panel bugs introduced by allowing column reordering
  EntityDbConnection.optimisticLockingEnabled renamed to optimisticLocking, getter/setter added
  EntityDbConnectionTest, testOptimisticLocking() added
  EntityModifiedException improved
  EntityUiUtil.createEntityComboBoxFilterPanel() added
  Property.maximumFractionDigits field added
  Property.useNumberFormatGrouping field added
  EntityUiUtil.createEntityComboBoxFilterPanel(), remembers the filter criteria
  EntityTableCellRenderer.NumberRenderer.formatValue field removed
  PropertySummaryModel refactored, now uses number formatting based on the underlying property
  EntityTablePanel.setTableCellRenderer() removed
  EntityDbConnection, bug fixed, update was not performed if optimistic locking was enabled
  EntityDbRemoteAdapter now rethrows EntityModifiedException when caught during update()
  ComboBoxPropertyLinkTest added
  LookupModelPropertyLinkTest added
  BooleanPropertyLinkTest added
  BooleanPropertyLink bug fixed, doClick() was required on the actual JButton, setSelected() on the model did not suffice
  BooleanPropertyLink, ButtonModel constructor parameter added
  BooleanPropertyLink.getButtonModel() removed
  BeanPropertyLinkTest separated into multiple tests
  ToggleBeanPropertyLink, ButtonModel constructor parameter added
  ControlFactory.toggleControl() uses a ToggleButtonControl when constructing a ToggleBeanPropertyLink
  EntityUiUtil refactored
  EntityTableColumnPanel refactored from EntityTableSearchPanel and EntityTableSummaryPanel
  EntityUiUtil.createEastButtonPanel() added
  EntityUtil.activeDependencies() removed
  EntityEditPanel.createControlPanel() renamed to createPropertyPanel()
  EntityComboBoxModel.include(Entity) renamed to includeEntity
  FilteredComboBoxModel refactored, filterContents() added, different handling of nullValueString, uses Collator when sorting
  EntityComboBoxModel.foreignKeyFilterEntities and foreignKeyFilterCriteria fields added
  EntityComboBoxModel.get/setForeignKeyFilterEntities() and createForeignKeyFilterComboBoxModel() added
  EntityComboBox.createForeignKeyFilterComboBox() added
  EntityTableColumnPanel.setVerticalFillerWidth() added
  Property.columnName field added
  framework/db package classes changed according to the above
  Configuration now reads most settings from system properties
  Configuration.FILTER_QUERY_BY_MASTER removed
  Configuration.INITIAL_SEARCH_PANEL_STATE renamed to DEFAULT_SEARCH_PANEL_STATE
  common.db.SimpleCriteria added
  EntityTablePanel.getAutoResizeMode() added for overriding
  common.model.ValueMap added
  Entity now implements ValueMap
  common.model.ValueMap.StringProvider added
  domain.Entity.StringProvider added
  EntityDefinition.stringProvider field+setter+getter added
  EntityRepository.getStringProvider() added
  Entity.Proxy.toString() changed according to the above
  Entity.hasValue() renamed to containsValue()
  EntityDbConnectionPool.collectStatistics field added
  Configuration.getBooleanValue() added, used throughout
  Property.format field added
  EntityTableCellRenderer changed according to the above
  EntityDefinition.selectQuery field added
  EntityRepository.getSelectQuery() added
  EntityDbConnection.selectMany(), selectPropertyValues() and selectRowCount() changed to take the above into account
  EntityDbConnectionTest improved
  ProfilingModel/Panel improvements
  ServerMonitor improvements
  TextBeanPropertyLink now synchronizes document during setUIPropertyValue()
  EntityTableModel.getSelectedView/ModelIndexes() now return Collection<Integer> instead of int[]
  EntityTableModel.add/setSelectedItemIndexes() now takes List<Integer> as parameter
  EntityDbRemoteServer no longer keeps a reference to the Registry
  ServerMonitor improved
  Configuration.getIntValue() added
  PetstoreTest and EmpDeptTest now use createEntity() exclusively
  ClientInfo.clientHost field added
  Configuration.SERVER_LOGGING_STATUS renamed to SERVER_CLIENT_LOGGING_ENABLED, property name changed to jminor.server.clientLoggingEnabled
  Configuration.SERVER_CONNECTION_SECURE renamed to SERVER_CONNECTION_SSL_ENABLED, property name changed to jminor.server.connection.sslEnabled
  Configuration.SERVER_POOLING_INITIAL renamed to SERVER_CONNECTION_POOLING_INITIAL
  EmpDeptProfiling now performs updates as well as selects
  EntityDbConnectionTest refactored
  PropertySearchModel.toString(Object) bug that prevented proper search state string functionality fixed
  EntityRepository.isPrimaryKeyAutoGenerated() added
  EntityEditModel null validation did not handle non-auto generated primary keys
  UiUtil.setWaitCursor() now works with multiple frames/dialogs
  Unit tests migrated to JUnit 4
  EntityTableModel.setSortingStatus() simplified
0.5
  EntityTablePanel.showColumn() refactored
  framework.client.ui.property renamings
  IntArray removed
  UserCancelException renamed to CancelException
  Event objects privatized behind a eventXXX() method
  DateUtil.floorDate() added
  Unit test coverage improved somewhat
0.5.1
  EntityTableSearchModel.getSearchCriteriaConjunction() renamed to getSearchConjunction()
  Unit test coverage improved
  EntityDbConnectionPoolTest added
  EntityDbRemoteServerTest added
  Tests added to common.db.dbms package
  Tests added to framework.client.model.reporting
  Unit test coverage improved
  CancelExceptionTest added
  WeakPropertyChangeListenerTest added
  ControlFactory, removed setControlXXX(Control) methods
  Control, setXXX() methods now return the Control instance allowing chained method calls
  EntityApplicationPanelTest added
  MonitorModelTest and MonitorPanelTest added
  Checkstyle run plus lots of minor fixes
  DbConnectionProvider interface added to common.db
  ConnectionPool interface added to common.db
  EntityDbConnectionPool now implements ConnectionPool
  EntityDbConnectionPool renamed to DbConnectionPool and moved to common.db along with test class
  ServerLogEntry.exception field added, included in toString()
  EntityDbRemoteAdapter uses the above
  EntityDbRemoteAdapter logs more detailed info about entity parameters used in method calls
  EntityUtil.get/parseJSONString() added
  Entity.initializeEntity() added, package protected
  EntityPanel.exportSelected() added, included as control action
  DefaultExceptionHandler.handleException() now handles a CancelException wrapped in a RuntimeException correctly
  JSON library from json.org added
  EntityDbConnection.checkIfModified() did not query by original key values, which could have changed since the entity was loaded
  EntityUtil.getWhereClause() result does not include where keyword anymore
  EntityDbRemoteAdapter logs the name of JasperReport parameters used in method calls
  common.db.pool package created and populated with relevant classes
  common.db.criteria package created and populated with relevant classes
  common.db.exception package created and populated with relevant classes
  DbConnectionPool refactored a bit
  DbUtil.getBytesFromFile() moved to Util
  DbUtil removed
  User.properties field removed
  EntityDb.getProperties() added
  ServerLogEntry.exception field replaced with stackTrace
0.5.2
  EntityUtil JSON functionality improved, now exports whole entity object graph and formats the output for readability
  EmpDeptAppPanel example action for importing JSON file added
  DateUtil.getDefaultTimestamp/DateFormat() moved to Configuration
  DateUtil.isDateValid() now requires a format argument
  DateUtil moved to common.model
  client.model.util package removed
  DateFormats.getDateFormat() added and used throughout
  DbConnection.QueryCounter added
  DbConnection added more statistics
  DbConnectionPool.cleanPool() removed parameter
  DbConnectionPool.emptyPool() added
  Entity.Key.copyEntityKeys() renamed to copy
  Entity.Key.equals(Key) removed
  db.EntityDbUtil refactored out of domain.EntityUtil
  EntityJRDataSource.getCurrentEntity() protected
  Lots of minor JavaDoc improvements
  FilteredComboBoxModel removed unused constructor and added protected initializeComparator()
  package-info.java added to all packages as well as overview.html to source root, javadoc ant target updated accordingly
  EntityModifiedException renamed to RecordModifiedException and moved to common.db
  EntityDbRemoteProviderTest added
  ProfilingModel.UsageScenario added
  EmpDepProfiling uses the above
  EntityUtil.createRandomEntity() added
  EntityTestUnit added automatic test entity creation
  Demo domain test cases take advantage of the above
  common.db.Version added
  EmpDept domain uses the above
  run_emp_dept_profiling ant task added
  Property.min/max fields added
  EntityEditModel now does range checks on numerical properties using the above
  FrameworkMessages.PROPERTY_VALUE_TOO_LARGE/SMALL added
  ProfilingModel.initializeUsageScenarios() added
  ProfilingModel.runScenario() added
  ProfilingModel.counter field as well as Counter class
  ProfilingModel added usage scenario statistics graph data set
  ProfilingPanel added usage scenario graph
  common.model.ValueProvider added (moved from EntityDbUtil)
  Property.isNumerical() added
  EntityEditModel.performRangeValidation() added
  EntityUtil.getRandomValue() now takes into account the min and max values of numerical properties
  EntityUtil.createEntity() now uses the ValueProvider interface
  Configuration.SERVER_DOMAIN_MODEL_JARS and SERVER_DOMAIN_MODEL_CLASSES added
  EntityDbRemoteServer.loadDomainModel() added
  EntityDbRemoteServer.loadDefaultDomainModels() added, which loads domain model classes and jars according to the above configuration values
  deploy_server ant task now copies jminor-demos.jar to server_dir/lib
  EntityDbServer.connect() no longer takes EntityDefinition map as parameter
  EntityDbRemoteProvider changed according to the above
  ServerMonitor.loadDomainModel() added
  ServerMonitorPanel.loadDomainModel() added and added as action as well
  Clients no longer send EntityDefinition maps when connecting to the server, the EntityDefinition loading now happens on the server only, which means that the server must preload domain models before clients working on that domain model can connect
  EntityDbRemoteServer.getEntityDefinitions() added
  EntityDbServerAdmin.getEntityDefinitions() added
  ServerMonitor.domainListModel field and getEntityDefinitions() method added
  ServerMonitorPanel added a new environment tab showing a list of entities defined in the server
  dist ant task added framework.domain classes to server_monitor.jar
  EmpDeptProfiling insertEmployee scenario fixed
  EntityTableModel summary models no longer update on evtSelectionChangedAdjusting, performance killer
  common.model.RandomItemModel, BoundedRandomItemModel and tests and and common.ui.RandomItemPanel added
  ProfilingModel.scenarioShareModel field added
  ProfilingModel.performWork() no longer abstract
  ProfilingPanel refactored and added SharePanel for usage scenario weight configuration
  build.xml joined delete_*_db and create_*_db into recreate_*_db and commented out tasks and properties related to Derby Db
  ServerMonitorPanel added a button to reset the statistics and a server shutdown confirmation dialog
  UsageScenario.getDefaultWeight() added
  EntityRepository.putAll() removed, unused
  EntityDb.getProperties() removed
  EntityDbProvider.getDescription() added
  RandomItemPanel UI changed, decrease button moved to the east side
  RandomItemModel.getWeightRatio() added and tested
  BoundedRandomItemModel no longer truncates the total weight to module # of items
  RandomItemPanel refactored
  ProfilingModel now updates scenario chart while inactive
  ProfilingModel.getThinkTime(), think() and delayLogin() added
  EmpDeptProfiling added loginLogout usage scenario
  common.model.LoadTestModel refactored from ProfilingModel
  ProfilingPanel renamed to LoadTestPanel and moved to common.ui
  LoadTestModel.relentless and working fields removed
  LoadTestPanel showFrame() no longer called in constructor
  ProfilingModel renamed to EntityLoadTestModel and moved to framework.tools.testing
  EmpDeptProfiling, PetstoreProfiling and SchemaBrowserProfiling renamed to ...LoadTest
  Configuration.PROFILING_* renamed to LOAD_TEST_*, values changed accordingly
  Demo load and unit testing classes moved to demos.xxx.testing
  Renamed jminor_profiling.policy to jminor_load_test.policy
  build.xml run_rmi_server, added demo classes to classpath and specified the default domain model classes for loading
  EntityLoadTestModelTest added
  EntityLoadTestModel.selectRandomRows() bugs fixed
  LoadTestModel getter/setter/changeEvent added for loginDelayFactor field
  LoadTestModel.getUsageScenario() added
  LoadTestModel.UsageScenario.successfulRunCount and unsuccessfulRunCount fields added plus getters as well as getTotalRunCount() which returns the sum of the two
  LoadTestModel added value checks to setters
  RandomItemModel some minor changes/refactorings
  LoadTestModel/Panel application used instead of client
  Entity.getModifiedState() renamed to stateModified() for consistency
  RandomItemPanel.createWeightSpinnerModel() added
  RandomItemPanel is now JSpinner based
  LoadTestModel.collectChartData field plus event and getter added
  LoadTestPanel refactored
  LoadTestModel now collects memory usage data
  LoadTestPanel displays memory usage data chart
  EntityDbServerAdmin.getAllocatedMemory(), getMaxMemory() and getUsedMemory() added
  ServerMonitor now collects memory usage and connection count data
  ServerMonitorPanel displays memory usage and connection count data charts
  Util.getAllocatedMemory(), getUsedMemory(), getMaxMemory() and getFreeMemory() added
  LoadTestModel, some minor field/method name changes
  LoadTestModel.scenarioRandomModel field renamed to scenarioChooser
  UiUtil.createMemoryUsageField() added
  MonitorPanel displays memory usage
  DbConnectionPool.Counter added
  LoadTestPanel UI improved
  EntityDbConnection.getDeleteSQL() bug fixed, now it always includes the 'from' keyword (MySQL doesnt like it when its missing)
  EntityDbConnection.selectRowCount(), now uses 'alias' for subquery alias when selectQuery is available (MySQL requires it)
  Database.getCheckConnectionQuery() added
  AbstractDatabase implements the above returning null
  PostgreSQLDatabase and OracleDatabase override the above
  EntityDefinition, added (subquery) 'as' alias for subquery properties when initializing the select properties, for PostgreSQL
  AbstractDatabase now has default implementations for supportsIsValid(), shutdownEmbedded(), getAuthenticationInfo() and getErrorMessage()
  EntityDbRemoteServer does not check for SID anymore
  SQLServerDatabase no longer throws error if SID is missing
  User.UNIT_TEST_USER added, parses jminor.unittest.username and jminor.unittest.password from system properties, scott/tiger default
  Unit tests now running on H2, HSQL, Derby, MySQL, PostgreSQL, Oracle and SQL Server, fuck yeah
  DbConnectionPoolTest.loadTest() added
  DbConnectionPool now silently disconnects connections checked into a closed connection pool instead of throwing an exception
  ConnectionPoolInstanceMonitor refactored and moved to common.db.pool.monitor, home sweet home
  User moved from common.db to common.model
  EntityDbUtil removed, code moved to common.db.SQLUtil
  EntityDbUtil.getInsertProperties() and getUpdateProperties() moved to EntityDbConnection
  common.db.criteria.CriteriaValueProvider interface added
  Criteria.asString(), added CriteriaValueProvider parameter
  CriteriaValueProvider moved and renamed to Criteria.ValueProvider
  Criteria.ValueProvider.getSQLStringValue() renamed to getSQLString()
  ConnectionPoolMonitor renamed to PoolMonitor
  ConnectionPoolMonitorPanel renamed to PoolMonitorPanel
  ConnectionPoolInstanceMonitor renamed to ConnectionPoolMonitor
  ConnectionPoolInstanceMonitorPanel renamed to ConnectionPoolMonitorPanel
0.5.3
  ValueMapModel refactored from Entity and Entity.Key
  Entity.StringProvider moved to common.model
  ChangeValueMap aded
  ValueMapModelTest added
  LoadTestModel.updateTimer and updateInterval fields added
  EntityListModelTest added
  PropertyEditPanel.InputManager renamed to InputValueProvider and moved to common.ui.input (along with descendants)
  ValueListProvider added to common.model
  PropertyValueListProvider added
  EntityUiUtil.addLookupDialog() moved to UiUtil
  ValueMap, ChangeValueMap, ValueMapModel, ValueProvider and StringProvider generified
  Entity changed accordingly
  Entity.properties cache field added
  RandomItemModel generified
  LoadTestModel changed accordingly
  BoundedRandomItemModel generified
  ValueListProvider generified
  PropertyValueListProvider changed accordingly
  AbstractPropertyLink generified
  InputValueProvider generified
  InputValueProvider descendant unit tests added
  RandomItemPanel generified
  EntityLoadTestModelTest now shows a LoadTestPanel frame
  ClientMonitor finished, HostMonitor improved
  EntityDbRemoteServerAdmin getClients() overloaded
  EntityPanel.getInputManager() renamed to getInputProvider()
  PropertyEditPanel.EntityInputProvider moved up to client.ui
  DbConnectionProvider.destroyConnection() added
  Entity.setAs() no longer checks if eventPropertyValueChanged() returns null since it wont, ever
  DbConnection.commit()/rollback() throw IllegalStateException in case a transaction is open
  InputValueProvider renamed to AbstractInputProvider
  EntityInputProvider refactored into EntityComboProvider and EntityLookupProvider, tests added
  PropertyEditPanel renamed to InputProviderPanel and moved to common.ui.input
  EntityTableColumnPanel renamed to AbstractTableColumnSyncPanel and moved to common.ui
  InputProviderPanel now implements InputProvider
  SelectCriteria renamed to EntitySelectCriteria
  CriteriaUtil renamed to EntityCriteriaUtil
  DateUtil.getThreadLocalDateFormat() added and used throughout common.db.dbms
  EntityDbConnectionTest added three exception tests
  EntityDbProviderFactoryTest added
  EntityDbServer renamed to RemoteServer and moved to common.server
  AbstractRemoteServer added
  EntityDbRemoteServer now extends AbstractRemoteServer
  Entity.initializeEntity() renamed to initialize()
  EntityUtil.getJSONEntity() renamed to getJSONObject()
  EntityDb.disconnect() removed, EntityDbProvider responsible for disconnecting
  AbstractFilteredTableModel refactored from EntityTableModel, added to common.ui.table
  AbstractFilteredTableModel.tableColumnModel field renamed to columnModel
  EntityTableSearchModel.tableColumnModel field renamed to columnModel
0.5.4
  Chinook demo added
  EntityTestUnit bug fixed which prevented testInsert/Update/Delete being run for writable entities, duhh
  EntityUtil.randomize() added
  EntityResultPacker now retrieves dates for date properties and timestamp for timestamp properties
  ChangeValueMap.clearOriginalValues() added
  ValueMapModel.equals() improved
  Launch files added for chinook demo
  ChangeValueMap.revertAll() added
  Entity.getOriginalCopy() now uses the above
  Entity.Key.setValue() renamed to setAs() and changed so that original values are also set
  IdSource.isAutoGenerated() added
  Entity overrides revertAll() and revertValue() delegating to the primary key when appropriate
  BorderlessTabbedPaneUI replaced with UiUtil.getBorderlessTabbedPaneUI()
  Entity.getOriginalCopy() bug fixed
  Entity.setValue() no longer accepts values for denormalized properties, these get their values via their respective parent properties
  Property.isDenormalized() added
  TransientProperty.linkedPropertyIDs field added
  EntityDefinition.transientPropertyChangeLinks field added
  EntityRepository.hasLinkedTransientProperties() and getLinkedTransientPropertyIDs() added
  ValueMapModel.notifyValueChange() added
  Entity overrides the above to implement the transient property linkage
  ValueMapModel renamed to ChangeValueMapModel
  Entity.getValue(Property) removed
  Entity.setValue(Property, Object) removed
  Chinook demo now uses IDENTITY for primary key columns, domain model changed accordingly
  EntityApplicationPanel, call to new Messages() to initialize OptionPane messages moved from static initializer to start of startApplication()
  EntityLookupField.defaultBackgroundColor field added
  EntityEditModel.performNullValidation() bug fixed, if action was unknown no validation was performed
  EntityLookupField.searchHint field added, along with related functionality
  ChangeValueMapModel.setValue() bug fixed, it overwrote the original value each time making it last value
  EntityEditPanel.controls field added
  EntityEditPanel.setControl() added
  EntityEditPanel.selectControl() added
  NullValidationException added
  RangeValidationException added
  EntityPanel now handles ValidationExceptions gracefully, shows a message and puts focus on the control
  UiUtil.showInDialog() dialogs now close on escape
  EntityLookupField now cancels search text edit on escape
  PropertySearchModel.bindLookupModelEvents() bug fixed, it did not handle an empty entity lookup model correctly by setting selected item to null
  UiUtil.addKeyEvent() added, used throughout
  Static imports used for domain classes in demo entity panels
  EntityUtilTest.testJSON() was failing because JSON did not guarantee the order of items returned when parsing, entity equality tested instead
  Chinook demo, removed duplicates from ddl.sql
  BeanPropertyLink renamed to the more appropriate AbstractBeanPropertyLink
  Entity.setAs() pushed up to ChangeValueMap
  ChangeValueMap.copyValue() added
  ChangeValueMap.getValueKeys() and getOriginalValueKeys() added
  ChangeValueMapEditModel refactored from EntityEditModel
  EntityEditModel.clear() pushed up to ChangeValueMapEditModel
  ChangeValueMapEditModel.setMap() renamed to setValueMap()
  Entity overrides ChangeValueMap.clear() and clears the primary key as well
  ChangeValueMapModel.setAs() bug fixed, it did not notify a value change
  ChangeValueMap.removeValueListener() added
  ValueMap.getValues() added
  IdSource moved from common.db to common.model
  EntityUtil.getValueChangeEvent() renamed to createValueChangeEvent() and moved to Entity
  EntityTablePanel.showEntityMenu() added, CTR-click or CTR-V for value tree
  UiUtil.addKeyEvent() overloaded
  Entity.loaded boolean field added
  EntityResultPacker sets the loaded entity attribute
  Entity.foreignKeyValues field added, stores entities referenced via foreign keys
  Entity.setValue(), getValue() and others takes the above into account
  EntitySelectCriteria.foreignKeyFetchDepth and maxFetchDepth fields added
  EntityDbConnection.setForeignKeyValues() uses the above fields to decide when to stop loading foreign key references
  EntityTablePanel.showEntityMenu() and createEntityMenu() added
  Property.ForeignKeyProperty.lazyLoading field removed
  ChangeValueMapEditModel.name field removed
  EntityEditModel.entityID field added
  ChangeValueMapEditModel takes the initial map as parameter
  ChangeValueMapEditModel.defaultValueMap field + getter/setter added
  EntityTablePanel.createEntityMenu() renamed to populateEntityMenu() and moved to EntityUiUtil
  Entity.Proxy.valueAsString() now takes Property.format into account
  EntityUtil no longer export whole entity object graph when exporting JSON
  Entity.isLoaded(fkPropertyID) added
  Entity.removeValue() overridden
  EntityPanel.initializePanel() now refreshes only table model if refresh on init, combo box models seem to be refreshed on creation
  Entity.Proxy.getValue() removed, getTransientValue() added
  EntityDbConnection.setForeignKeyValues() no longer initializes fk values with an empty entity
  CallLogger refactored from EntityDbRemoteAdapter.MethodLogger
  DbConnection.MethodLogger added
  ServerLogEntry renamed to LogEntry and moved to common.model
  LogEntry.subLog field added
  EntityRbRemoteAdapter logs calls to the connection pool
  LogEntry.toString() overloaded with indentation parameter to handle sub logs
  EntityDbRemoteAdapter adds the DbConnection log as a sub log
  DbConnectionPool logs average check out time
  ClientInstanceMonitorPanel changed according to the above
  ClientMonitorPanel and ClientTypeMonitorPanel now use split panes
  DbConnection cache functionality removed
  Configuration.DEFAULT_FOREIGN_KEY_FETCH_DEPTH added
  Property.ForeignKeyProperty uses the above
  EntitySelectCriteria can now override the max fk fetch depth on fk basis
  Fixed fetch depth issue
  EntityTablePanel.showEntityMenu now takes scrolling into account
  Entity.getRawValue() removed
  DatePropertyLink.isTimestamp field added
  EntityUiUtil.populateEntityMenu() and co. moved to EntityTablePanel to resolve an ugly dep. cycle
  ChangeValueMapEditModel.defaultValueMap field removed
  Entity.getDefaultEntity() renamed to getDefaultValueMap(), overriding
  ChangeValueMapModel.getOriginalValueKeys() bug fixed, did not check for null
  ChangeValueMapModel renamed to ChangeValueMapImpl
  ChangeValueMapModel refactored from EntityModel
  ChangeValueMapPanel refactored from EntityPanel
  ChangeValueMapEditPanel refactored from EntityEditPanel
  AbstractFilteredTablePanel refactored from EntityTablePanel
  AbstractFilteredTableModel moved from common.model.table to common.model
  TableSorter moved from common.model.table to common.model
  EntityDefinition.rowColoring field added
  EntityRepository.isRowColoring() added
  ValueMap now extends ValueProvider and ValueListProvider
  ValueMap and associates moved to common.model.valuemap
  Entity overrides getValues(), returns values from pk and fk as well
  AbstractEntityPropertyLink renamed to AbstractValueMapLink and moved to common.ui.valuemap
  Descendants of above moved if possible
  ValidationException and descendants moved to common.ui.valuemap.exception
  Renamed classes/methods in common.ui.control
  EntityPanel added overloaded initializeEditPanel() and initializeTablePanel() methods, finalized the overridden ones
  EntityEditModel.validate() overloaded, finalized the overridden one
  EntityTablePanel.isRowColoring() added
  EntityEditModel.getDefaultValueMap() finalized, getDefaultEntity() added
  Minor javadoc improvements in common.model.valuemap and common.ui.valuemap
  Property now inherits updatable, readOnly and nullable from its parent property
  Type removed, replaced with Class
  Entity.Key singleIntegerKey field added
  Entity.setValue(Property, Object) added
  ValueMap.setValue() overloaded with initialization parameter
  Property.propertyType renamed to valueClass
  Entity.class references changed to ValueMap.class
  Entity.setValue() now accepts values for Property.DenormalizedProperty
  ValueMap.isNull(value) added
  ValueMap.setValue() unoverloaded, initialize parameter removed (for now)
  Null value checking simplified
  Property initializes a default format for time and numerical properties
  Entity.getFormattedValue() added
  Property.valueClass changed to int and renamed to type, uses java.sql.Types values
  Entity.setValue() overloaded with a validateType parameter
  Property.Event renamed to ValueChangeEvent and moved to common.model.valuemap
  Property.Listener renamed to ValueChangeListener and moved to common.model.valuemap
  ChangeValueMap... classes renamed to ValueChangeMap...
  CallLogger renamed to MethodLogger
  AbstractValueMapLink.isModelPropertyValueNull() renamed to isModelValueNull()
  Configuration.LIMIT_FOREIGN_KEY_FETCH_DEPTH added
  EntityDbConnection.limitForeignKeyFetchDepth field added, initialized according to the above
  Entity.Key and Entity.foreignKeyValues maps override getMapTypeID()
  common.ui.valuemap.ComboBoxValueLink refactored from framework.client.ui.property.ComboBoxValueLink
  EntityUiUtil.EntityComboBoxValueLink class added to deal with framework specific stuff
  AbstractValueMapLink descendants generified
  Property.DerivedProperty added, takes over some of the transient property functionality
  Empty string no longer equals null
  EntityResultPacker returns null for empty strings
  Entity.valueNull(value) removed
  Entity.isNull(value) no longer overridden
  Entity.Key.isNull(value) no longer overridden
  AbstractValueMapLink.isNull() removed
  TextValueLink.valueFromText() now returns null for empty strings, test changed accordingly
  TextBeanValueLink.getUIValue() now returns null in case of an empty string
  ValueChangeMapEditModel.isNull(key, value) removed
  Criteria.isValueNull(key, value) removed
  TextInputProvider.getValue() now returns null if the text is empty
  ValueMap.isNull(value) removed
  ForeignKeyProperty now maps reference properties to referenced propertyIDs in case of multi column relations
  Entity.Key.isSingleIntegerKey() removed, field kept
  Entity.getReferencedPrimaryKey() refactored
  ValueChangeEvent.isNewValueNull(), isOldValueNull(), isNewValueEqual() and isOldValueEqual() added
  Util.getInt()/getLong() now removes grouping char before parsing
  Entity.valueEquals(propertyID, value) added
  EntityTableModel.convertColumnIndexToView() moved up to AbstractFilteredTableModel
  AbstractFilteredTableModel.columnIndexCache added, reset on column move, remove and add
  Property.getTypeClass() added
  EntityLookupModel.setSelectedEntities() now simply returns if the state does not change (only applies when no entities are selected)
  TableSorter no longer defines a empty string as null
  TableSorter.columnComparators field and setColumnComparator() removed for now
  Entity.Proxy.getTableValue() removed, derived properties fit the bill where needed
  ValueMap.initializeValue() added
  Entity.initializeValue() added
  EntityResultPacker uses the above
  EntityDbConnection uses the above
  DbConnectionPool.creatingConnection added
  ValueChangeMapImpl.setValue() refactored, updateModifiedState() added
  ValueChangeMapEditModel.isNullable() overloaded
  EntityEditModel.isPropertyNullable() removed (replaced by the above)
  Entity.initializeValue() now propagates denormalized values
  Entity.propagateReferenceValues(), initialization parameter added
  Entity.getFormattedDateValue() removed, getFormattedValue() handles it
  Entity.Proxy.getValueAsString() changed to getFormattedValue()
  Entity.isValueNull() added
  PropertyValueListProvider, added getters
  Database.addConnectionProperties() added
  DbConnection.execute(List<String>) added
  EntityDbConnection.execute() renamed to executeStatements to avoid overriding the above
  EntitySelectCriteria.setFetchDepthForAll() added
  EntityDbConnection.checkIfModified() now uses 0 foreign key fetch depth
  EntityDbConnection.checkIfModified() now only checks properties found in the current selected entity, to prevent denormalized property confusion due to the above fetch depth issue (which means no denorm. values are set)
  FindBugs run
  Entity.loaded field removed
  EntityResultPacker now sets denormalized values
  Entity.initializeValue() does not propagate denormalized values anymore
  ClientMonitor/Panel renamed to ClientUserMonitor/Panel, UserMonitor and UserInstanceMonitor (and panels) removed
  Entity.Key.equals() improved
  Entity.Key.INTEGER_NULL_VALUE added
  ValueChangeMap.getInstance(), getCopy() and getOriginalCopy() added
  ValueChangeMapImpl implements the above
  Entity and Entity.Key override the above when necessary
  Renamed a few tests in common.model.valuemap
  ValueChangeMapEditModel.evtValueMapChanged renamed to evtValueMapSet
  Entity.getCopy() override removed
  Entity.getReferencedPrimaryKey() now returns null in case of null references instead of a Key with .isNull() = true
  Entity.Key.equals improved
  EntityResultPacker.getValue() now uses switch instead of if/else
  Property.hashCode() result pre-cached
  EntityDbRemoteServer.loadDomainModel() now uses URI instead of URL
  Util.getURI()/getURIs() added
  ValueListProvider renamed to ValueCollectionProvider, returns Collection
  ValueChangeMapImpl.getValues() and getValueKeys() return unmodifiableCollection instead of creating new lists
  AbstractSearchModel moved to common.model
  AbstractSearchPanel moved to common.ui
  EntityDefinition now serves Entity.Proxy's purpose, proxy removed
  ValueMapChangeEditModel.getPropertyChangeEvent() and getPropertySetEvent() renamed to getValueChangeEvent() and getValueSetEvent()
  Entity.Proxy removal undoood
  common.model.checkbox.TristateState, TristateButtonModel added
  common.ui.checkbox.TristateCheckBox added
  TristateValueLink added
  EntityUiUtil.createTristateCheckBox() added
  LookupValueLink moved to EntityUiUtil
  EntityEditPanel.createTristateCheckBox() added
  TristateCheckBox used in petstore's ItemPanel
  ValueChangeMapEditPanel.getControlKeys() added
  UiUtil.selectPropertyValue() renamed to selectValue()
  EntityUtil.getSortedProperties() added
  EntityPanel, ALT-CTR-C shows select control dialog
  ValueChangeMapPanel generified
  AbstractFilteredTablePanel generified
  UiUtil.selectValue() overloaded with dialogTitle parameter
  Property now gets assigned the default formats in case it is date or timestamp
  EntityUiUtil.EntityFieldPanel added
  EntityEditPanel.createEntityFieldPanel() returns the above, set the text field as the property control
  EntityUiUtil.createCheckBox() checks if property is boolean and createTristateCheckBox() checks if it is nullable
  EntityTestUnit.createReferenceEntity(entityID) added
  ValueChangeMapEditPanel.setControl() renamed to setComponent(), as well as other instances
  ValueChangeMapImpl.stateModified() changed, now returns a new state on each invocation
  ValueChangeMapImpl.stModified field removed
  ValueChangeMapImpl.setAs() now starts by setting the original values so the modified state is correct on each subsequent set value
  ValueChangeMap.clearOriginalValues() removed
  ItemComboBoxModel.Item moved to common.model
  ItemComboBoxModel sorts items by caption and adds the null item at top
  Property.ValueListProperty added
  Entity.setValue() now validates value list property values
  EntityTableModel.getValueAt() now returns the caption value for value list properties
  ValueListInputProvider added to common.ui.input
  BooleanProperty hash comparison removed
  BooleanProperty.nullValue removed
  Configuration.SQL_BOOLEAN_VALUE_NULL removed
  EntityCriteriaUtil.getBooleanSQLString() improved, now handles null true/false values
  EntityModel.setLinkedDetailModels() no longer fires change event even if no changes are made
  ValueChangeMapEditModel.clear() removed, added to EntityEditModel
  ValueChangeMapEditPanel.getComponent(key) added
  PropertySummaryModel.Sum now uses long for integer sums, preventing overflow
  EntityPanel.getSelectComponentProperties() now excludes disabled components
0.5.5
  Criteria.getValues() added
  Criteria.getTypes() added
  DbConnection.connected field removed
  EntityUtil.hashKeysByEntityID() added
  PropertyCriteria.getForeignKeyCriteriaValues() and getMultipleColumnForeignKeyCriteriaValues() added
  EntityDbPreparedConnection added
  Configuration.USE_PREPARED_CONNECTIONS added
  EntityKeyCriteria now extends CriteriaSet and delegates to PropertyCriteria
  Criteria generified
  Criteria.getTypes() removed
  Criteria.getValueKeys() added
  EntityCriteria.getTypes() renamed to getValueProperties()
  EntityDbPreparedConnection.setStatementValue() now handles the specific case of Property.BooleanProperty
  EntityUtil.getRandomValue() now handles value list properties correctly
  Entity.Key.isCompositeKey() added
  Entity.Key.hashCode() improved
  Entity.addInsertProperties() and addUpdateProperties() added
  EntityDbPreparedConnection setParameterValues() call moved into executePreparedSelect/Update()
  EntityDbPreparedConnection refactored
  EntityDbRemoteAdapter.appendEntityCriteria() added, takes prepared statement usage into account when logging
  Property.ForeignKeyProperty.isMultipleColumnReference() renamed to isCompositeReference()
  JMinorServerMonitorTruststore added
  PropertyCriteria refactored
  EntityDbPreparedConnection merged into EntityDbConnection
  Criteria.asString() removed Database and ValueProvider parameters
  EntityDbConnection code cleanup/refactoring
  Database.getSQLDateString() removed
  Entity.Key single value constructor optimized for integer values
  Entity.Key.setAs() now sets the hashCode value instead of simply setting the hash code dirty flag
  FilteredComboBoxModel now contains the nullValueString, sort comparator guarantees it stays at the top
  ItemComboBoxModel sort comparator keeps null items at the top
  Property.hasDescription() added
  EntityUiUtil now only adds tool tips to components if description is provided
  EntityLookupField adds the lookup properties as default tool tip
  EntityKeyCriteria now always uses original key values
  EntityDataUtil added
  EntityDb.disconnect() added
  EntityDbRemoteAdapter.server field added, used when disconnecting
  Entity.Key overrides clear() to handle hash code caching
  DateFormats.getDateFormat() overloaded with lenient parameter
  Configuration.getDefaultDate/TimestampFormat() returns non-lenient formats
  EntityDataUtil.copyEntities() copyPrimaryKeys parameter added
  MethodLogger.parameterArrayToString() renamed to argumentArrayToString() and implemented, appendArgumentAsString() added for overriding, no longer abstract
  EntityUtil.getPropertyValues() overloaded
  PropertyValueListProvider renamed to PropertyValueProvider, getValueProvider() added
  EntityDbConnection insert improved a bit when it comes to queried/autogen keys
  EntityPanel.updateSelectedEntities(property) and getInputProvider() moved to EntityTablePanel
  EntityEditModel.getValueProvider() added
  EntityUtil.getUpdateProperties() added
  EntityPanel.createStaticEntityPanel() removed
  EntityTabelPanel.createStaticEntityTablePanel() added
  EntityPanel.viewSelectionDependencies() moved to EntityTablePanel
  EntityPanel.exportSelected() moved to EntityTablePanel
  EntityTablePanel.hiddenColumns and associated stuff moved all the way down to AbstractFilteredTableModel/Panel
  ValueChangeMapEditPanel.defaultFocusComponent renamed to initialFocusComponent (along with related methods)
  PropertyValueProviderTest added
  common.db.DbUtil added, with createEmbeddedDatabase()
  EntityEditModel.getEntityNullState() renamed to stateEntityNull()
  EntityKeyCriteria bug fixed, it didn't use the original key values
  EntityTableModel constructor now takes a EntityEditModel as parameter
  EntityPanel, refactored all controls into EntityEditPanel and EntityTablePanel
  EntityEditModel constructor takes stActive as parameter
  EntityEditModel.isEntityNull() renamed to the more apt isEntityNew()
  EntityEditModel.isEntityNew() also checks the original key values
  EntityPanel.stActive and activeStateGroup moved to EntityEditModel
  ValueMap.saveValue() and saveAll() added, implemented in ValueChangeMapImpl and overridden in Entity
  ValueChangeMapModel.removeOriginalValue() now notifies a value change
  ValueChangeMapModel.mapTypeID field added
  AbstractFilteredTableModel.mapTypeID field added
  EntityModel.handleInsert/Update/Delete() added
  ValueChangeMapModel no longer implements Refreshable
  EntityTablePanel.getSelectColumnsControl() moved up to superclass
  EntityEditModel.evtRefreshStarted added
  EntityEditPanel uses the above to set the wait cursor during update
  ConnectionPoolSettings.set() added
  DbConnectionPool cleanupInterval is now editable
  Database.createConnection() added
  DbConnection constructor overloaded with Connection parameter
  EntityDbConnection constructor overloaded with Connection parameter
  DbConnection.poolRetryCount field added
  LogEntry.exitMessage field added
  EntityDbRemoteAdapter logs pool retry count
  ReportResult, ReportWrapper and Jasper reports impl added, quite experimental
  EntityTablePanel.initializeViewImageAction() added
  UiUtil.getBrowseAction() added
  ControlSet.hasName() and addAll() added
  EntityTablePanel.getPopupControls(), if additionalPopupControls has a name it is added as a submenu, else all items added sequentially
  EntityPanel.handleException() added, delegates to edit panel
  Configuration.getReportPath() added
  EntityDb.fillReport() generic using wrappers now
  framework.plugins.jasperreports.* added
  Entity.getProperty() now throws exception if the property was not found
  build.xml/.properties added -plugins.jar and related stuff
  Added jminor-plugins.jar to demo run files
  ConnectionPoolMonitor moved back to framework.server.monitor to remove common -> JFreeChart dependency
  EntityComboBoxModel.createForeignKeyFilterComboBoxModel(), returned model selects the item referenced by the selected item
  AbstractFilteredTablePanel.txtSearch, initializeSearchField() added
  AbstractFilteredTableModel.findNextItemIndex() and getSearchCriteria() added
  EntityTableModel overrides above method
  EntityTablePanel.initializeSouthPanel() now adds search field
  SearchFieldHint added
  ALT removed from shortcut key combos
  DocumentAdapter added
  EntityTablePanel overrides initializeSearchField()
  EntityPanel.setupKeyboardActions(), search panel is now toggled instead of simply shown
  PropertyComboBoxModel sets the null value string if property is nullable
  PropertyComboBoxModel.isNullValueItemSelected() renamed to isNullValueSelected()
  Methods now return the linked state instead of the actual state (which could then be modified)
  FilteredComboBoxModel.emptyStringIsNull removed, nullValueString functionality improved
  AbstractFilteredTableModel.findNextItemIndex() renamed to findNextItemCoordinate(), now returns Point
  AbstractFilteredTableModel.getSearchValueAt() added
  EntityTableModel overrides getSearchValueAt()
  AbstractFilteredTablePanel.scrollToCoordinate() added
  Configuration.USE_LOOKUP_FIELD_SEARCH_HINT removed
  EntityLookupField.searchHintEnabled removed
  ValueMap.ToString<T, V>, removed V type parameter
  Plugin api doc generation added to build.xml
  EntityTablePanel.getConfirmDeleteMessages() added
  Entity.getEntityValue() renamed to getForeignKeyValue()
  LogEntry.isValid() renamed to isComplete()
  LogEntry.message renamed to entryMessage (since we have exitMessage as well)
  EntityModel.handleDelete() no longer deals with the table model
  EntityTableModel.handleDelete() added
  EntityTableModel.bindEventsInternal() now binds handleDelete() to editModel.eventAfterDelete()
  EntityTablePanel.delete() added
  EntityTablePanel.setupControls() now checks if update is allowed, and delete control is now based on EntityTablePanel.delete()
  EntityApplicationModel.login()/logout() added
  EntityApplicationPanel.login()/logout() added
  Refreshable.clear() added
  EntityApplicationModel.refreshAll() renamed to refresh(), now implements Refreshable
  EntityEditModel.clear() renamed to clearValues(), clear() now part of Refreshable implementation
  EntityTableModel.filterByReference() renamed to searchByForeignKeyValues()
  EntityTableModel.queryFilteredByMaster field renamed to isDetailModel
  AbstractFilteredTableModel.SelectionModel.stMultipleSelection field added
  AbstractFilteredTableModel.SelectionModel.minSelectedIndex renamed to selectedIndex
  AbstractFilteredTableModel.getSelectionCount() added
  EntityModel.getDetailModel(entityID) removed
  EntityModel.includeTableModel field moved to superclass
  EntityTableModel.showAllWhenNotFiltered renamed to queryCriteriaRequired
  Sonar/CheckStyle run, with some minor modifications
  Database.validate() and required() added
  Added braces to all control statements
  EntityPanelProvider generified, which does enlarge the dependency cycle in ui, needs to be resolved somehow
  Util.rejectNullValue() added, used throughout
  DomainClassGenerator improved
  EntityDefinition.caption field added
  EntityPanel(model) constructor added, uses the above
  EmpDept demo uses the above
  Item is now serializable
  EntityDbRemoteAdapter now handles db logging correctly when pool is disabled
  EntityDbConnection.delete() now uses a single statement per entityID
  EntityDbRemoteProvider.setTruststore() added
  Util.closeSilently() added
  EntityComboBoxModel, createForeignKeyFilterComboBoxModel() now links the model to the refresh event
  Entity.isModified() changed, writablePropertiesModified() added
  Util.HashKeyProvider added
  Util.map() refactored from the EntityUtil.hashBy... methods
  common.model.Serializer/Deserializer added
  EntityJSONParser moved to plugins
  JSON and JasperReports dependencies removed from demo run files where applicable
  Util.onClasspath() added
  Configuration.ENTITY_SERIALIZER_CLASS, ENTITY_DESERIALIZER_CLASS added
  Configuration.entitySerializerAvailable()/entityDeserializerAvailable()
  EntityTablePanel.initializeViewImageAction() and co. moved to UiUtil/EntityUiUtil
  UiUtil.showImage() overloaded with acceptedFileTypes parameter
  Util.rejectNullValue() added to various methods, relevant code fixed accordingly
  Sonar run, code cleanup
  LogEntry.setExitTime() now returns the LogEntry instead of delta
  LogEntry.toString() no longer appends new line characters
  EntityDbConnection.executePrepared... uses LogEntry for debug output
  EntityTestUnit.initializeReferenceEntities() improved, needs some additional testing
  Code inspection/sonar run
  ValueChangeMapModel/Panel removed
  EntityModel.addDetailModel(s)() added
  EntityModel.initializeDetailModels() remove
  EntityModel constructor overloaded with EntityEditModel/EntityTableModel parameters
  EntityModel.initializeTableModel/EditModel() removed
  EntityPanel.addDetailPanel(s)() added
  EntityPanel.initializeDetailPanels() and getDetailPanelProviders() removed
  EntityTableSearchModel constructor now takes Collection<Property> instead of TableColumnModel
  EntityTableSearchModel.columnModel field removed, properties field added
  EntityTableSearchPanel columnModel parameter added to constructor
  AbstractFilteredTableModel constructor now takes a TableColumnModel as parameter
  AbstractFilteredTableModel.initializeColumnModel() remove
  AbstractFilteredTableModel.mapTypeID field removed
  EntityTableColumnModel added
  EntityTableModel.entityID field added
  EntityTableModel queryConfigurationAllowed removed from constructor, added setter
  EntityPanel buttonPlacement removed from constructor
  EntityPanel.controlPanelConstraints field added
  EntityEditPanel.getControlPanel() renamed to createControlPanel()
  EntityPanel refreshOnInit removed from constructor, added setter
  EntityTableModel.deleteSelected() and update() added, used in EntityTablePanel
  EntityModel.refreshDetailModelsAfterDelete() keeps the selected entity in combo box models
  FilteredComboBoxModel.containsItem() added
  FilteredComboBoxModel.isVisible() added
  ValueMap.getMapTypeID() removed
  EntityTableModel.fetchCount field added
  EntityPanel.addDetailPanel(s)(EntityPanelProvider) removed
  Entity, replaced ? : with if else
  ValueMapImpl refactored out of ValueChangeMapImpl
  Entity.primaryKey field removed
  Entity.entityID field added
  Entity.foreignKeyValues field removed
  Entity, removed lots and lots of overridden stuff due to the above changes
  Entity.Key now extends ValueMapImpl instead of ValueChangeMapImpl
  RegexpFilterCriteria added
  AbstractFilteredTableModel/Panel added regular expression search
  EntityComboBoxModel replaced overloaded constructor with setters
  EntityLookupModel replaced overloaded constructor with setters
  EntityLookupField replaced overloaded constructor with setters
  EntityTableModel replaced overloaded constructor with setters
  Major refactoring of framework.client.model
  EntitySelectCriteria.selectForUpdate field added
  EntityDbConnection.checkIfModified() renamed to lockAndCheckForUpdate(), now selects for update, with nowait if supported by the dbms
  Database.supportsNowait() added
  EntityApplicationPanel.initializeMainApplicationModels() removed
  EntityApplicationPanel.addMainApplicationModel(s)() added
  framework.db.criteria refactored
  EntityApplicationPanel.initializeMain/SupportEntityPanelProviders() removed, addMain... and addSupport... added
  AbstractValueLink now uses SwingUtilities.invokeLater() when applicable
  EntityApplicationPanel.showStartupDialog() renamed to createStartupDialog()
  EntityApplicationPanel.startApplication() refactored, uses SwingUtilities.invokeLater()/SwingWorker
  FilteredComboBoxModel sets the selected item on filtering
  Property.Audit... properties added
  EntityDb.fill(Jdbc)Report(), removed report parameters parameter
  JasperReportsWrapper.reportParameters field added
  Replaced List with Collection in a few places
  EntityApplicationModel(User) constructor removed
  EntityApplicationModel.initializeDbProvider() moved to EntityApplicationPanel
  EntityApplicationPanel.getLookAndFeelClassName() added, called during startApplication()
  EntityApplicationPanel.getSupportTableControlSet() now uses SwingUtilities.invokeLater()
  SwingUtilities.invokeLater() usages added
  EntityApplicationPanel.startApplication() refactored some more
  EntityApplicationPanel.startApplication() now uses SwingUtilities.invokeLater()
  EntityPanelProvider.entityID, editPanelClass and tablePanelClass fields added
  EntityPanel.refreshOnInit field removed
  EntityPanelProvider.refreshOnInit field added
  Configuration.AUTO_CREATE_ENTITY_MODELS added
  EntityModel.getDetailModel() now creates a default entity model depending on the above configuration parameter
  EntityPanel.createInstance() moved to EntityPanelProvider
  EntityApplet added
  EmpDeptApplet added
  TextInputPanel.button field added
  EntityUiUtil.createText/DateInputPanel now adds focus transfer to the panel button
  Chinook demo application changed according to the latest changes
  Configuration.SEARCH_PANELS_VISIBLE added
  EntityPanelProvider refactored
  EntityModel.fillReport() removed
  EntityPanel.viewReport() removed
  EmpDept demo application changed to reflect bootstrapping changes
  EntityPanel.getToggleEdit/DetailPanelControl() is now public
  EntityTablePanel.southPanel field added
  EntityTablePanel.initializePopupMenu() and initializeToolbar() added
  EntityPanelProvider takes advantage of the above changes
  EntityApplicationPanel.startApplication() refactored
  EntityDbProvider.isConnected() added
  FilteredComboBoxModel interface added
  DefaultFilteredComboBoxModel added
  FilteredModel added
  FilteredTableModel and FilteredComboBoxModel extends the above
  Renamed a few tests in client.model
  MaximumMatch handles null items
  FilteredComboBoxModel and descendants generified
  common.model.valuemap.ValueStringProvider interface added
  ValueMap implements the above
  StringProvider now leverages the above paradigm
  DefaultEntityComboBoxModel.dataInitialized moved to DefaultFilteredComboBoxModel as clear, interfaces changed accordingly
  AbstractSearchModel.autoEnable field added plus functionality
  TableSorter removed, functionality moved to FilteredTableModel/Panel
  DefaultFilteredComboBoxModel.getContents() renamed to initializeContents()
  FilteredComboBoxModel.isVisible() moved to FilteredModel
  FilteredComboBoxModel.setContents() added
  FilteredModel hidden replaced with filtered
  EntityPanel CTR-I is now used to select input component instead of CTR-C which conflicted a bit with the default copy function
  Util.rejectNullValue() version taking only the value as parameter removed
  AbstractEntityDbProvider added
0.5.6
  AbstractFilteredTableModel/DefaultFilteredComboBoxModel/DefaultEntityComboBoxModel improved/refactored filtering
  FilteredComboBoxModel.addItem() added
  DefaultFilteredComboBoxModel.sortContents field removed
  FilteredModel.getAllItems(includeHidden) removed
  EntityRepository.has/getLinkedDerivedPropertyIDs() renamed to has/getLinkePropertyIDs()
  Removed a few Util.rejectNullValue() calls from private methods
  ConnectionPoolSettings removed
  ConnectionPoolState is now an interface with DbConnectionPoolState as the implementation
  ConnectionPoolStatistics is now an interface with DbConnectionPoolStatistics as the implementation
  EntityDbServerAdmin.getEntityDefinitions() now returns a Collection instead of a Map
  ServerMonitor now sorts the entity definition list
  EntityModel.selectionFiltersDetail field removed
  EntityTableModel.setSortingStatus() renamed to setSortingDirective()
  EntityDataProvider interface added
  EntityTableSearchPanel is now an interface
  EntityTableSearchSimplePanel added
  EntityTableSearchAdvancedPanel added
  DatabaseStatistics is now an interface
  DbStatistics added as an implementation of the above
  KeyListeners now dispatch the event to their parent if not consumed
  EntityDbRemoteServerAdmin added shutdown hook, server security policy updated accordingly
  Bugs fixed in EntityDbProvider classes
  AbstractRemoteServer.shuttingDown field added, used to prevent shutdown hook from repeating the shutdown sequence
  RemoteServer connectionKey is now a UUID
  connectionKey renamed to clientID throughout
  ServerMonitorPanel, moved connection timeout control to ClientUserMonitorPanel
  AbstractDatabase.require() moved to Util
  JasperReportsWrapper.toString() implemented, returns report name and parameters, if any
  EntityPanel.getPrintControls() removed
  Util.rejectNullValue() now returns the value if it isn't null
  Removed redundant Util.rejectNullValue() calls
  Entity and Entity.Key are now an interfaces
  EntityImpl and EntityImpl.KeyImpl added
  Entities factory class added
  DbConnection is now an interface
  DbConnectionImpl added
  DbConnectionPool renamed to ConnectionPoolImpl
  PoolableConnection added, DbConnection implements it, ConnectionPool uses it
  Column interface added to common.db
  Property is now an interface
  PropertyImpl added, package protected
  Properties factory class added
  Major refactoring of PropertySearchModel and co
  Finished the interfacing of client.model
  EntityDefinition is now an interface
  EntityDefinitionImpl added
  Entities.define() added
  Collections.size() == 0 replaced with isEmpty() throughout
  Finalized a bunch of classes and methods
  More of the same
0.5.7
0.5.8
  Distribution jars are now package-sealed by default
  ValueChangeMapEditModel.clearValues() removed, setValueMap(null) serves that purpose
  ValueChangeMapEditPanel.clearModelValues() added for clear action
  AbstractValueChangeMapEditModel, added default implementations for abstract methods, renamed to DefaultValueChangeMapEditModel
  ForeignKeySearchModel.initialize() removed
  AbstractInputProvider overgenerified?
  More finalization/inheritance work
  Coberture coverage added to build.xml
  ValueMapImplTest added
  EntityDbConnection.insert() minor optimization change
  EntityImpl.handleSetAs() did not call super
  DefaultEntityEditModel.update() now sets the active entity after update
  PropertyFilterModel, most of it pushed up into SearchModel
  AbstractSearchModel renamed to DefaultSearchModel
  AbstractFilteredTableModel now contains the column search models, filterCriteria implemented accordingly
  PropertyFilterPanel stuff moved to AbstractSearchPanel
  AbstractFilteredTablePanel now contains the column search panels
  DateBeanValueLink and TimestampBeanValueLink added
  ValueMap.getValueCount() removed
  Field and parameter finalization (automatic)
  common.model.valuemap improved unit tests
  common.model improved unit tests
  common.ui.control improved unit tests
  common.ui improved and added unit tests
  common.model.valuemap.Validator added
  DefaultValidator added
  DefaultValueChangeMapEditModel.getValidator() added
  EntityValidator added
  DefaultEntityValidator added
  EntityValidator.getDbProvider() added
  DefaultEntityValidator.dbProvider field added
  EntityPanelProvider.validatorClass added
  EntityValidator moved to client.model
  Insert/Update/DeleteListener added
  EntityTablePanel.initializeSearchPanel() and initializeSummaryPanel() removed to constructor
  DefaultFilteredComboBoxModel.setSelectedItem() now final, translateSelectionItem() and vetoSelectionChange() added
  DefaultFilteredComboBoxModel.resetContents() removed
  AbstractBeanValueLink.getSet/GetMethod() now private
  LoadTestModel.usageScenarios now final, initializeUsageScenarios() removed
  More finalization of classes, fields and methods
  LoadTestModelTest improved
  AbstractFilteredTableModelTest improved
  AbstractFilteredTableModelTest improved some more
  Added tests to common
  More finalization/refactoring
  EventObserver interface added
  Event model improved, event...() methods replaced with ...Observer() and add...Listener() methods
  Event and State now interfaces
  Events and States factory classes added
  EventObserver fleshed out
  common.model.Conjunction added
  ControlFactory renamed to Controls for consistency
  StateObserver added
  LinkedState removed
  state... methods renamed to get...State
  string.length() >/== 0 replaced with (!)string.isEmpty()
  Util.nullOrEmpty() finally added and used throughout
  common.db.dbms refactored
  State/StateObserver refactored
  EntityPanel.getTablePopupControlSet() is now private
  EntityApplicationPanel.configureApplication() removed
  TextValueLink.addValidator() removed
  TextValueLink.Validator and ValidatorImpl added
  FormattedValueLink.FormattedValidator added
  UiUtul.transferFocusOnEnter() bug fixed, key events got lost if SHIFT was not down
  AbstractFilteredTablePanel.getTableModel() renamed to getFilteredTableModel(), finalized
  AbstractFilteredTablePanel.getDateFormat() moved to SearchModel and renamed to getForma()
  AbstractSearchPanel, added input fields as constructor parameters
  AbstractSearchPanel.InputFieldProvider interface added, implemented in subclasses
  AbstractSearchPanel.searchTypeAllowed() removed, SearchType... parameter added to constructor
  SearchModel renamed to ColumnSearchModel
  SearchModel.getSearchKey() renamed to getColumnIdentifier()
  AbstractSearchPanel renamed to ColumnSearchPanel
  SearchType.getImageName() added
  DefaultEntityTableSearchModel no longer sets the search state during construction, call to bindEvents() moved to initialize()
  EntityPanel, editControlPanel initialized during setEditPanelState()
  PropertyFilterModelProvider/DefaultPropertyFilterModelProvider added
  PropertySearchModelProvider/DefaultPropertySearchModelProvider added
  PropertyComboBoxModel interface removed, FilteredComboBoxModel used instead
  DefaultPropertyComboBoxModel simplified
  EntityLookupModel.description field added
  DefaultEntityComboBoxModel.performQuery() privatized
  ValueChangeMapEditPanel.getEditModel() finalized
  EntityEditPanel.getEntityEditModel() added
  AbstractFilteredTablePanel.getFilteredTableModel() renamed to getTableModel()
  EntityTablePanel.getTableModel() renamed to getEntityTableModel()
  DefaultValueChangeMapEditModel.getDefaultValueMap() implementation removed
  DefaultValueChangeMapEditModel renamed to AbstractValueChangeMapEditModel
  EntityTablePanel.initializeUI() renamed to initializePanel(), publicized, call required after panel construction
  EntityTablePanel.panelInitialized field added, functionality mirrors EntityPanel
  EntityTablePanel.additionalPopup/ToolbarControls fields added
  DefaultEntityModel.bindTableModelEvents() functionality moved to DefaultEntityTableModel.setEditModel()
  DefaultEntityModel.updateDetailModelsByActiveEntity() privatized
0.5.9
  Entities.getSearchProperties() used to replace a couple of similar code snippets
  /** {@inheritDoc} */ added
  EntityApplicationPanel.loginRequired field added, isLoginRequired() finalized, setter added
  DomainClassGenerator improved
  EntityPanelProvider now handles null editPanelClass
  EntityImpl.writablePropertiesModified() modified
  EntityImpl.getDefaultValueMap() bug fix
  ColumnSearchModel.searchEnabled renamed to enabled
  Entities.getEntityDefinitions() no longer exposes the EntityDefinition class
  ConnectionPoolImpl overhaul
  MySQLDatabase.supportsNowait() overridden, returns false
  Entities.getSearchProperties() bug fixed
  EntityEditPanel.createPropertyPanel(propertyID) added, picks up the input component associated with the property, well duhh
  EntityEditPanel now picks a default LinkType based on the readOnly/updatable status of the underlying property
  EntityTestUnit.initializeReferenceEntities() renamed to initializeReferencedEntities(), refactored and bugfixed
  Entities.getDependencyTree() added
  EntitiesTest added
  EntityApplicationPanel.viewDependencyTree() added to View menu
  EntityDefinition.domainID added
  Entities.getDomainEntityIDs()
  Entities.getDependencyTreeModel() overloaded with a domainID parameter
  EntityTestUnit.createReferenceEntity() renamed to initializeReferenceEntity()
  EntityTestUnit.doSetUp() and doTearDown() added, empty, overridable
  EntityPanel bug fixed, activation event was bound to late, now bound during construction
  EntityEditPanel.addPropertyPanel() added, used throughout
  ConnectionPoolImpl bug fixed, creating a connection did not prevent another one from being created at the sam time
  UsageScenario.runScenario() now throws ScenarioException
  ConnectionPoolImpl bettered a bit
  ConnectionPoolStatistics.getLiveConnectionCount() renamed to getPoolSize()
  ConnectionPoolStatistics.getPoolStatistics() renamed to getFineGrainedStatistics()
  LoadTestModel, javadoc improvement
  common.* javadoc improvements
  EntityCriteriaUtil now respects the 100 max IN list items guaranteed by the JDBC standard
  Properties, EntityUtil docs added
  More javadocs added
  ValueMapImpl and ValueChangeMapImpl no longer implement Serializable
  EntityImpl and EntityImpl.KeyImpl implement writeObject and readObject (testing)
  EntityDefinitionImpl no longer implements Serializable
  EntityImpl.writeObject() and readObject() now use superclass methods to bypass validation, for the speed!
  ConnectionPoolImpl.RETRIES_BEFORE_NEW_CONNECTION added
  EntityImplTest.serialization() added
  Column moved from db to model
  RMI server now logs to {user.dir}/logs/jminor_server.log instead of {user.home}/logs/jminor.log
  LoadTestModel uses ExecutorService instead of Thread
  LoadTestModel changes rolled back, refactored a bit
  ConnectionPoolImpl improved some
  AbstractRemoteServer synchronized on connections
  Configuration now properties based, .config files added for server + monitor, Util.parseConfigurationFile() added and called by Configuration
  TextValueLink.getLink() renamed to getValueLink
  FormattedValueLink.FormattedValidator.updateValidityInfo() refactored
  DocumentAdapter.insertOrUpdate() renamed to insertOrRemoveUpdate()
  ValueLinkValidators added, fixed issue where formatted value link got both the normal validator as well as the formatted validator
  AbstractFilteredTableModel, refactored and simplified sorting
  EntityImpl.getValue() no longer returns the default value in case no value exists
  DoubleField refactored a bit
  Criteria implementations, implemented readObject/writeObject
  EntityKeyCriteria uses composition instead of inheritance
  SteppedComboBox refactored
  EntityTablePanel.createDependenciesPanel() now uses the entity caption instead of the entityID as tab title
  EntityCriteriaUtil.DefaultEntityCriteria.readObject() cast bug fixed
  ConnectionPool.get/SetMaximumCheckOutTime added, up through server admin layer
  ConnectionPoolException added
  ConnectionPoolImpl, check out time is now measured in ms instead of ns
  EntityDefinition.is/SetLargeDataset() exchanged for is/SetSmallDataset(), which property is by default false
  Entities.isLargeDataset() replaced with isSmallDataset()
  AbstractFilteredTableModel sorting functionality refactored
  AuditProperty is now readOnly by default
  EntityLookupField refactored, needs more of it!
  Javadoc berserker appeared.
  FilteredTableModel.compare() removed
  AbstractFilteredTableModel.compare() renamed to compareRows() and privatized
  FilteredTableModel.getFilterModels() removed
  FilteredTableModel get... methods taking column index as parameter now take column identifiers
  EntityDbRemoteAdapter refactored
  EntityDbRemoteServer, fixed inconsistencies in maintenance interval / timeout API
  ConnectionPoolImpl now checks if a connection is valid before returning it from the pool, lets survive db restarts please
  EntityDbRemoteAdapter does the same if connection pool is not enabled
  ServerMonitor can now set the server logging level
  Configuration now loads logging level property from Util
  EntityDbRemote no longer extends EntityDb
  EntityDbRemoteProvider proxies EntityDb
  EntityDb no longer throws Exception
  RuntimeException replaced with UnsupportedException, IllegalStateException and IllegalArgument exception where applicable
  DomainClassGenerator renamed to EntityGenerator, refactored
  EntityGeneratorTest added, needs fleshing out
  Some remote refactorings
  Entities.Proxy dismantled, Entity.*Provider added instead
  ConnectionPoolImpl refactored quite a bit
  ConnectionPool/EntityDb/EntityDbRemote.isConnectionValid() renamed to isValid()
  ConnectionPool.checkOutConnection() and checkInConnection() renamed to getConnection() and returnConnection()
  EntityDbRemoteAdapter refactored
  domain package refactored
  EntityModel.masterSelectionChanged() renamed to initialize()
  EntityTableModel.searchByForeignKeyValues() renamed to setForeignKeySearchValues()
  Refactored ConnectionPool and related classes
  Property.get/SetEntityID() added
  EntityCriteriaUtil, reduced serialization overhead
  ConnectionPoolStatistics.connectionRequestsFailed added
  ClientMonitorPanel, disconnect action added to list popup menu
  LoadTestModel/Panel, average scenario duration added
  Log4j replaced with logback
  Interfaced load test classes
  ItemRandomizer interface added
  RandomItemModel renamed to ItemRandomizerModel
  Remote load testing implemented
  Derby lib removed, with JavaDB and all that
  AbstractFilteredTableModel.isRefreshing() added
  StateObserver, activation listeners can now be added/removed
  EntityDbProvider.getConnectedState() added
  EntityDbRemoteProvider description now includes the server host name
  EntityApplicationPanel now displays a "Disconnected" message in the title
  EntityDbConnection no longer propagates dbms specific exception to the client
  LoginProxy added
  ConnectionPoolImpl new connection threshold is now configurable from pool monitor
  LoadTestModel generified
  Fixed sorting when columns have been moved around
0.6.0
  EntityComboBoxModel.getEntity(primaryKey) added
  EntityEditModel.containsComboBoxModel(Property) removed
  Javadocs and coverage improvements
  AbstractRemoteServer connection limiting added
  RemoteServer.connectionsAvailable() added
  WebStartServer added
  Configuration.SERVER_CONNECTION_LIMIT added
  EmpDeptLoadTest improved
  ConnectionPoolImplTest now uses QueryLoadTestModel
  EntityDbConnection.setForeignKeyValues() simplified
  Server logging improved
  ClientInstanceMonitor.getLoggingEnabledButtonModel() uses lazy init
  LogEntry, User and ClientInfo read/writeObject implemented
  EntityImpl.read/writeObject optimized a bit more
  CriteriaSet.read/WriteObject optimized
  LoadTestServer refactored and improved
  EntityPanelProvider.tableSearchPanelVisible field added
  DefaultEntityModel.refresh() calls editModel.refreshComboBoxModels() instead of .refresh() which automatically triggered a refresh in the table model, which isn't always the right thing to do
  java.rmi.server.randomIDs=true and java.rmi.server.useCodebaseOnly=true added to server config files
  Tentative fixing of the column movement bug
  DefaultEntityEditModel now refreshes data bound combo box models when they are created
  Property.isReference() removed, instanceof Property.ForeignKeyProperty used instead
  EntityTablePanel does not add the search panel to the search panel scroll panel on initialization anymore
  AbstractFilteredTablePanel, fixed bug causing selection to be cleared during refresh, evtSortingDone was being fired without a previous evtSortingStarted firing
  Cascade refresh functionality removed
  Removed unused images
  Refactored event bindings between DefaultEntityModel, DefaultEntityEditModel and DefaultEntityTableModel with relation to sorting and repeated detail model refreshing
  ServerUtilTest added
  RemoteServer refactorings
  EntityDefinition.isRowColoring field removed
  EntityDefinition.isRowColoring() renamed to hasBackgroundColorProvider(), renaming bubbled all the way up
  QueryLoadTestModel improved
  EntityDbRemoteTest added
  EntityModel.stActive moved to it's logical home, EntityEditPanel
  EntityTableColumnModel removed along with default implementation
  EntityEditModel insert/update/delete now return the affected entities/keys
  EntityUiUtil.NewRecordAction renamed to NewEntityAction, now uses a single EntityEditPanel instead of a whole EntityPanel
  LoginPanel.addInitialFocusHack() moved to UiUtil, action parameter added
  EntityPanelProvider.createInstance() renamed to createPanel()
  EntityPanelProvider.createEditPanel() and createTablePanel() added
  Minor improvements, mostly javadoc errors
  LoadTestModel, nanoTime() used for measurements
  MethodLogger, nanoTime() used for measurements
  EntityCriteriaUtil.PropertyCriteria refactored
  EntityTableModel.isMultipleUpdateAllowed() renamed to isBatchUpdateAllowed()
  EntityTableModel.getAllowDeleteState() renamed to getDeleteAllowedState()
  JasperReportsWrapper now only holds the report path and loads the actual report object only when requried, and caches it
  Entity.FormattedValueProvider removed
  Entity.BackgroundColorProvider.getBackgroundColor() added Property parameter
  EntityTableCellRenderer uses the above to set the background color of individual cells
  EntityTableModel.getColumnProperty() moved to FilteredTableModel, renamed to getColumnIdentifier()
  Entities.getEntityIdSource() renamed to getIdValueSource()
  EntityTableModel.getRowBackgroundColor() renamed to getPropertyBackgroundColor()
  H2Database.DATABASE_INIT_SCRIPT and DATABASE_IN_MEMORY added
  H2Database, embedded in memory implemented
  Entity.DerivedValueProvider removed
  Property.DerivedProperty.Provider added (too deep?)
  EntityValidator is now Entity.Validator
  ConnectionPoolImpl.isNewConnectionWarranted() refactored
  EntityEditModel.replaceForeignKeyValues() added
  EntityTableModel.replaceForeignKeyValues() added
  DefaultEntityModel.refreshDetailModelsAfterUpdate() now calls the above methods
  DefaultFilteredComboBoxModel.setContents() now refreshes the selected item
  DefaultEntityModelTest tests the above
  DefaultEntityTableModel.stDeleteAllowed removed, delegated to the edit model as with updateAllowed
  DefaultEntityEditModel.setComboBoxModel() removed
  DefaultEntityEditModelTest improved
  DefaultEntityTableModelTest improved a bit
  Unit tests and demo apps run via Ant now run with an in-memory database
  AbstractFilteredTableModel.setColumnVisible() now adds the column at index 0
  EntityEditPanel.isPanelInitialized field added, along with initializePanel() and isPanelInitialized()
  PropertySummaryPanel now uses JTextField instead of JLabel
  EntityLookupField transfers focus on select
  EntityTablePanel.includeSouthPanel field added
  EntityPanel.includeControlPanel and includeDetailPanelTabPane fields added
  TextValueLink.format field added
  AbstractValueLink.translateModelValue() added
  EntityCriteriaUtil.ForeignKeyCriteria nullCriteria bug fixed
  EntityDbConnection now logs the result packing time and row count
  EntityDbConnection result packer logging improved a bit
  EntityEditModel.setPersistValueOnClear() added
  EntityImpl now rounds double values before setting them if maximumFractionDigits is specified
  Operation, AbstractOperation, Procedure and Function added
  DatabaseProvider.add/Get/Function/Procedure() added
  EntityDb.executeProcedure() added
  EntityDbRemote.executeProcedure() added
  EntityDb.executeStatement() removed
  TextValueLink.format field removed
  AbstractValueLink.translateModelValue() removed
  ItemRandomizer.RandomItem.enabled property added
  EntityDbConnection update and select for update functionality improved
  Entity.getCopy() was now working, setAs() moved from ValueMap to ValueChangeMap
  DefaultEntityTableModel.getValueAt() returns valueAsString for value list and foreign key properties
  EntityImpl.getValueAsString() now returns the referenced primary key as string for non-loaded foreign key values
  Major refactoring/renaming
  EntityImpl.isModified() now checks super.isModified() before going any further
  EntityValidator moved to Entities and renamed to Validator
  Configuration.COMPACT_ENTITY_PANEL_LAYOUT is now true by default
  EntityServerMonitorPanel layout changes
  EntityImpl now returns an empty entity for non-loaded foreign key values
  EntityConnectionImpl package private now
  EntityConnections added as a factory for the above class
  DatabaseConnections added as a factory for the DatabaseConnection class
  ConnectionPoolImpl package private
  ConnectionPools added as a factory class for the above
  DatabaseConnection, moved a few methods to PoolableConnection
  EntityGenerator refactored into tools.generator.EntityGeneratorModel and tools.generator.ui.EntityGeneratorPanel
  Dependency entanglement removed from common.db and framework.domain
  AbstractFilteredTablePanel.initializeFilterPanel() is no longer abstract, class renamed to FilteredTablePanel
  FilteredTablePanel.initializeFilterPanel() removed
  AbstractFilteredTableModel now range checks selection indexes
  EntityGeneratorModel.getDocumentText() added
  EntityGeneratorModelTest fleshed out some
  EntityGeneratorModel improved
  AbstractFilteredTableModel.refresh() no longer resets the sorting state, simply sorts the model before returning
  ConnectionPoolImpl, Stack replaced with Deque
  EntityUiUtil.checkProperty() added, used throughout
  DefaultEntityModel.refreshDetailModelsAfterDelete() bug fix
  EntityUiUtil.NewEntityAction did not initialize the edit panel so it appeared empty
  EntityConnection.selectRows() removed
  AbstractFilteredTableModel refresh/sorting/selection functionality improved a bit
  EntityApplicationPanel.initializeUI() now adds the main entity models to the application model
  EntityGeneratorModel fixed maximumFractionDigits appearing on non-floating point data types
  EntityUiUtil.selectEntities() now handles when the dialog is closed via [x]
  EntityTablePanel, removed a few redundant constructors
  EntityUtil.getUpdatableProperties() did not anticipate read only foreign key properties :|
  ComboBoxValueLink now handles FilteredComboBoxModel with the null value selected correctly
  EntityUtil.Validator moved to Entities
  AbstractFilteredTableModel.removeItems() improved a bit
  EntityConnectionImpl.insert(), improved readability and removed repeated calls to entity.getPrimaryKey(), the reasons for which have long since disappeared into the mists of time
  EntityConnectionImpl.update(),improved readability a bit
  EntityConnectionImpl, some more prettyfication
  ProgressReporter added
  EntityDataUtil.batchInsert() added
  EntityConnectionImpl.translateValue() bug fixed, Timestamp got translated into Date
  EntityTablePanel.setAdditionalPopupControls() renamed to addPopupControls()
  EntityTablePanel.setAdditionalToolbarControls() renamed to addToolbarControls()
  EntityPanelProvider/DefaultEntityModel, tableModel.setEditModel() revised
  EntityImpl, some minor value setting refactoring
  EntityPanel.addDetailPanel() now sets includeDetailPanelTabPane as true and adds the detail model to the underlying model
  EntityPanelProvider.createPanel() now checks if the underlying entityModel contains models for the detail panels
  EntityModel.getDetailModel(Class) no longer tries to auto create the model, since it does not have the required info (no entityID)
  EntityPanelProvider.createPanel() bug fixed (model.getDetailModel(DefaultEntityModel.class))
  UiUtil.linkToEnabledState() now affects the focusable state as well
  EntityUiUtil.createComboBox(), removed apparently redundant transferFocusOnEnter item
  ItemComboBoxModel implements Refreshable, initializeItems() protected
  DefaultEntityComboBoxModel.performQuery() is now overridable
  ValueChangeMapImpl.removeOriginalValue(), no longer notifies value change,
  ValueChangeMapImpl.originalValues nulled when emptied
  DefaultExceptionHandler.handleException() now unwraps RuntimeException and InvocationTargetException
  EntityApplicationPanel navigation bugs fixed, needs rethinking
  EntityCriteriaUtil, small improvements
  Entities.entityInstance/keyInstance renamed to entity/key
  Entity.isNull() renamed to isPrimaryKeyNull()
  EntityModel.containsDetailModel(EntityModel) added
  UiUtil.getParentOfType() added
  Entities.define() bug fixed
  DefaultFilteredComboBoxModel.setContents() bug fixed
  ValueChangeMapEditPanel.getComponentKey() added
  EntityPanel.addDetailPanel() adds the detail model to the underlying entity model if it has not been done already
  DefaultFilteredComboBoxModel setContents(), selected item bug fixed
  EntityConnectionImpl.update() bug fixed, inserting = false, instead of the oh so wrong updating = true
  EntityPanel search panel keyboard action no longer toggles the search panel state, simple shows it and requests focus
  MasterDetailPanel added, to base the entity panel navigation on
  EntityApplicationPanel, navigation and resizing functionality moved to EntityPanel
  EntityApplicationPanel and EntityPanel implement MasterDetailPanel
  UiUtil.initializeNavigation() added, refactored from EntityApplicationPanel
  EntityTablePanel.populateForeignKeyMenu() bug fixed, assumed entity.getForeignKeyValue() return null
  EntityPanel.FocusActivationListener, bug fixed, incorrectly assumed the focus owner to always be a [J]Component
  FilteredTablePanel, ctrl+shift needed to show filter dialog
  EntityPanel, navigation now ctrl+alt based, jcombobox seems to prevent alt+arrowKey propagating further up the ancestor tree, arrgh
  Sonar based cleanup
0.6.1
  State.getStateChangeObserver() added
  AbstractFilteredTableModel, some refactoring
  DefaultColumnSearchModel, an empty string now results in a null bound value
  ItemComboBoxModel.initializeItems() renamed to setItems(), refactored a bit
  EntityApplicationModel.containsApplicationModel() added and overloaded
  DefaultColumnSearchModel, the above fix now works with collection upper/lower bounds
  MaximumMatch, reverted back to a past version, a bug must have crept in during refactoring
  UiUtil.showInDialog() now calls the close action on windowClosed() instead of windowClosing()
  EntityPanel, navigation and resizing actions added to editControlPanel as well, some minor behavioral changes
  AbstractFilteredTableModel, filterContents() now sorts the table model afterwards
  SearchFieldHint renamed to TextFieldHint, some fields/methods renamed, hintForegroundColor field added
  SearchType.getImageName() removed, getCaption() added, search type images removed
  ColumnSearchPanel, panel initialization bug fixed, stTwoSearchFields not set correctly on init
  ColumnSearchPanel/Model and related classes refactored a bit
  Global renaming, 'StateObserver get...State()' renamed to 'StateObserver get...Observer()'
  DefaultEntityTableSearchModel initializes property search models for all properties, hidden as well
  DefaultEntityTableSearchModel.simpleSearchString field added (moved from EntityTableSearchSimplePanel)
  EntityImpl.setValue() bug fixed, propagates fk values before setting the actual entity value, otherwise isValueNull(FK_PROP) tells lies during the value change event firing
  EntityTableSearchModel.hasSearchStateChanged() added
  DefaultEntityEditModel.prepareForUpdate/Insert() added
  EntityTableSearchSimplePanel and EntityTableSearchAdvancedPanel merged into EntityTableSearchPanel, interface removed
  AbstractDatabase.createConnection() now throws DatabaseException instead of SQLException, for error message localization, changes bubbled all the way up
  EntityApplicationPanel, better handling of exceptions during startup
  DefaultEntityLookupModel.getEntitySelectCriteria() ignored any additional criteria in case of a wildcard search string
  AbstractBeanValueLink.getValueClass() added
  IntBeanValueLink/DoubleBeanValueLink, usePrimitives parameter added to constructor, tests added
  Entities.define() now throws IllegalArgumentException when the entity has already been defined
  EntityConnectionServer, remote loading of domain models disabled, not that useful
  EntityConnectionServer, initializes default domain model classes in static initializer
  EntityApplicationPanel, improved startup error handling
  EntityDefinitionImpl, default entity comparator now replaces spaces with underscores before sorting with collator
  FilteredTableModel, add/removeTableModelClearedListener() added
  MasterDetailPanel, some renaming going on
  EntityPanel, fixed a bug introduced during last commit
  MasterDetailPanel, more renaming
  EntityTablePanel.bindEvents(), moved some code to FilteredTablePanel
  FilteredTablePanel.sortingEnabled, scrollToCenter() and isCellVisible() added
  JFreeChart library updated to 1.0.13
  ExceptionDialog.showExceptionDialog(), event dispatch thread related bug fixed
  Util.collateSansSpaces() added, Util.collate(List) uses it by default
  FilteredTablePanel.selectTableColumns(), added 'Show all columns' button
  DoubleField, IntField, fixed a bug, fields displayed sci-notation for large numbers, format added
  DoubleValueLink, IntValueLink fixed according to the above
  Util.collateSansSpaces() overloaded for list
  EntityTablePanel, initialization refactored, initializeTable moved from constructor to initializePanel()
  Util.countLines() added
  LoginPanel, layout changes
  Util.countLines() improved
  FilteredTableModel.removeItems(from, to) added
  DateFormats.FULL_COMPACT_TIMESTAMP added
  EntityImpl.getValue() now longer handles fraction digits for doubles (perf. reasons)
  EntityImpl.getDoubleValue() now handles the fraction digits if necessary
  EntityEditPanel constructor now accepts null controlKeys parameter
  EntityTablePanel.setupControls() now protected
  Configuration.DEFAULT_SPLIT_PANE_DIVIDER_SIZE added
  AbstractTableColumnSyncPanel.SyncColumnModelListener.columnAdded() now initializes a column panel if none exists, such as when the column is hidden before the search panel is initialized
  FilteredTablePanel.scrollToSelectedItem field added
  AbstractFilteredTableModel.removeItems(from, to) now fires a tableRowDeleted event
  Util.LINE_SEPARATOR added, used throughout
  UiUtil.getFileDataFlavor() added
  UiUtil.isFileDataFlavor() added
  EntityImpl.getDoubleValue() bug fixed, it did not handle null values correctly
  DoubleValueLink and IntValueLink, bug fixed, ThreadLocal format objects were instance variables
  EntityEditPanel.createDateInputPanel() now uses the property date format by default, instead of the default date format
  DefaultEntityEditModel.initializeEntityComboBoxModel() no longer refreshes the combo box model
  EntityUiUtil.createEntityComboBox() now refreshes the combo box model
  EntityApplicationPanel, some minor refactoring
  ValueChangeEvent.getNew/OldValue() generified
  FilteredComboBoxModel.getSelectedValue() added
  EntityComboBoxModel.getSelectedEntity() removed, the above covers it quite nicely
  ItemComboBoxModel now extends DefaultFilteredComboBoxModel instead of DefaultComboBoxModel
  ComboBoxValueLink slightly modified to accommodate the above
  DefaultFilteredComboBoxModel.isNullValueSelected() now regards an empty string to be null
  Entity.clearPrimaryKeyValues() added
  EntityTablePanel, added column info tooltips to entity popup menu
  EntityTableModel.removeItemsOnDelete field added
  EntityEditPanel.createControlPanel() and createControlToolBar() now return null if no controls are defined
  ValueLinkValidators, some refactoring
  EntityTableModel.getSelectionDependencies() removed
  EntityEditPanel, controlKeys constructor parameter handled better
  DatabaseConnectionImpl, EntityConnectionImpl, some refactoring
  EntityGeneratorModel, setColumnHasDefaultValue() moved above setNullable() since the latter returns Property instead of Property.ColumnProperty
  Sonar based fixes
  Item, removed unnecessary type parameter
  Sonar based cleanup
  PropertiesTest added
  EntityTestUnit.initializeReferencedEntities() now deals with self referencing entities correctly
  EntityConnectionImpl, some refactoring/renaming, exception handling/throwing for insert/update and delete improved
  EntityTablePanel, now performs it's own error handling, instead of throwing
  ComboBoxValueLink, now updates model via itemListener on both state changes, ItemEvent.SELECTED and ItemEvent.DESELECTED
  Minor mostly cosmetic doc/code changes
  Entity.ToString added
  Entities.StringProvider added, implements the above, org.jminor.common.model.valuemap.StringProvider removed, test code moved accordingly, demos updated
  EntityImpl.isValueNull() now relies on the result of isLoaded() in case of foreign key properties, tested
  Some javadoc updates, using (perhaps overusing?) {@link ...} where applicable
  AbstractFilteredTableModel now uses Util.collateSansSpaces() when sorting
  Util.getSpaceAwareCollator() added, used where applicable and tested
  Entity.Comparator removed
  Some javadoc improvements
  EntityEditPanel now handles a null controlKeys constructor argument
  EntityEditModel, contains/initialise/create/getEntityComboBoxModel() functionality replicated for EntityLookupModels, plus some related changes
  EntityEditModel, removed superfluous method introduced in the above
  DefaultPropertySummaryModelTest, fixed locale sensitive tests
  EntityPanelProvider.getCaption() no longer sets the caption if it is null
  EntityCriteriaUtil.getValues()/getValueKeys() now return Collections.emptyList() instead of new ArrayList() for null criteria
  EntityApplicationPanel.initializeUI(), EntityPanelProvider caption used by default, entityPanel.getCaption() used only if the other is not available
  Some minor doc improvements
  Added the option of using a non-default rmi registry port, via Configuration.REGISTRY_PORT_NUMBER
  Fixed a bug in the custom registry port functionality
  Moved the web server instance from the server admin class to the server class itself
  EntityPanel.includeComponentSelectionProperty() moved to ValueChangeMapEditPanel, and renamed to includeComponentSelectionKey()
  EntityPanel.getSelectComponentProperties() moved to ValueChangeMapEditPanel, and renamed to getSelectComponentKeys()
  DefaultEntityLookupModel now trims the search strings
  EntityLookupPanel, added multiple value configuration to settings panel
  EntityModelProvider/DefaultEntityModelProvider refactored from EntityPanelProvider
  AbstractDatabase, removed null check of parameters where, added to getURL() of subclasses
  jminor-db.jar added to dist ant target
  EntitySelectCriteria.getGroupByClause() added
  EntityConnection takes EntitySelectCriteria.getGroupByClause() into account
  AbstractRemoteServer.getServerVersion() added
  EntityConnectionServerAdmin.getServerVersion() added
  ServerMonitorPanel, added server version info to environment tab
  Databases.QueryCounter no longer uses a Timer to refresh queries per second, it is updated on demand instead
  Minor Sonar based cleanup
0.6.2
  Minor javadoc improvements
  Util.unwrapAndLog() now takes Throwable causes into account
  ClientUserMonitorPanel, connection timeout spinner now editable
  UiUtil.showImage() now handles urls as well as file paths
  Util.map() now uses and returns a LinkedHashMap, respecting the iteration order of the given collection
  ColumnSearchPanel.initializeSimpleSearchPanel(), bug fixed, corrected order of search fields so that lower bound appears before upper bound
  EntityApplicationPanel.getSupportTableControlSet() and showEntityPanelDialog() now use the default entity caption if the panel provider does not provide one
  AbstractFunction now correctly implements DatabaseConnection.Function instead of DatabaseConnection.Procedure
  EntityTablePanel.layoutPanel() added, overridable
  UiUtil.addAcceptSingleFileDragAndDrop() now requests focus for the text field after drop is accepted
  ColumnSearchPanel, no longer uses UiUtil.getPreferredTextFieldHeight() to determine it's own preferred size
  NavigableImagePanel, previousPanelSize initialized during construction, seemed to cause NullPointerException on Windows
  EntityUiUtil.createEntityLookupField() and EntityEditPanel.createEntityLookupField() overloaded with enabledState parameter
  EntityEditModel.add/removeEntityListener() added
  DefaultEntityEditModel implements the above by delegating to the underlying ValueChangeMapEditModel.add/RemoveValueMapSetListener()
  EntityConnectionImpl.setForeignKeyValues(), bug fixed, foreign key property values were not initialized if all selected entities had a null value for that property
  AbstractBeanValueLinkTest added
  EntitySelectCriteria.groupByClause() moved to EntityDefinition, since the group by clause is static for a given entity
  EntityConnectionImpl changed according to the above
  EntityConnectionImpl, query debug logging no longer depends on the method logger being enabled
  PropertySummaryPanel, no longer uses UiUtil.getPreferredTextFieldHeight() to set the field size
  DefaultEntityEditModel.createEntityLookupModel(), bug fixed, no search properties exception contained the wrong entityID
  EntityImpl.setAs(), bug fixed, referencedPrimaryKeysCache was not reset, test added
  EntityTableSearchMode.setSearchState() renamed to rememberCurrentSearchState()
  Some javadoc improvements
  JCalendar build dependency removed, UiUtil.getDateFromUser() now uses JCalendar if available on classpath
  TextFieldPlus.lowerCase field added
  UiUtil.makeLowerCase(TextFieldPlus) added for consistency
  UiUtil, added javadoc
  EntityConnectionImpl.delete() now uses EntityCriteriaUtil.criteria() instead of selectCriteria() when constructing the where condition
  EntityCriteriaUtil.ForeignKeyCriteria now throws an IllegalArgumentException if values of types other than Entity or Entity.Key are used, tests added
  EntityImplTest, added a few tests
  Entity.getForeignKeyValue(), now throws IllegalArgumentException instead of RuntimeException
  EntityDefinitionImpl constructor throws IllegalArgumentException if no primary key property is specified, tests added
  EntityConnectionServerAdminImpl, added logging of service calls
  LOG.debug("{} bla bla", value) used instead of LOG.debug(value + " bla bla") where applicable
  EntityEditPanel.getControlToolBar() renamed to createControlToolBar() for consistency
  EntityApplicationPanel,evtSelectedEntityPanelChanged removed, add/removeSelectedPanelListener() removed, initializeActiveEntityPanel() removed, initialize() and initializeUI() refactored to accommodate changes
  DefaultEntityApplicationModel.getDependencyTreeModel(), bug fixed, Entities.getDefinitions(domainID).values() (table names) replaced with Entities.getDefinitions(domainID).keySet() (entityIDs)
  DefaultFilteredComboBoxModel.sort() added
  IntInputProvider constructor overloaded with minValue and maxValue
  DoubleInputProvider constructor overloaded with minValue and maxValue
  InputProviderPanel now handles a null caption
  EntityEditPanel.getControlPanelControlSet() renamed to initializeControlPanelControlSet(), setupControls() renamed to setupDefaultControls()
  DefaultEntityModel, simplified constructors
  DefaultEntityModelTest refactored to improve testing of the above
  EntityTablePanel.initializeRefreshToolbar() bug fixed, WHEN_ANCESTOR_OF_FOCUSED_COMPONENT used instead of WHEN_IN_FOCUSED_WINDOW, which resulted in the detail panel being refreshed instead
  EntityDefinitionImpl.checkForPrimaryKey() now includes the entityID in the exception
  EntityApplicationPanel.getParentWindow() added
  EntityEditModel.insert(), update(), delete() no longer throw CancelException
  EntityEditPanel, no longer handles the above exception
  DefaultEntityModel.initialize() only sets the relevant values in the edit model if the edit model entity is new, so as to not change a persistent entity
  EntityUiUtil.createComboBox() sets transfer focus on enter on both the editor as well as the combobox itself, thereby handling both editable and non-editable
  DefaultEntityComboBoxModel.linkForeignKeyComboBoxModel() now throws an exception if the foreign key combobox model is not of the required type
  EntityUtil.getDistinctPropertyValues() overloaded with includeNullValue parameter
  DefaultEntityComboBoxModel.linkForeignKeyComboBoxModel() made an instance function on EntityComboBoxModel
  EntityTableModel.getPropertyColumnIndex(propertyID) added
  DefaultFilteredComboBoxModel, constructor overloaded with Comparator parameter
  ItemComboBoxModel, constructor overloaded with Comparator parameter
  EntityUiUtil.createValueListComboBox() overloaded with sortItems parameter
  EntityEditPanel.createValueListComboBox() overloaded with sortItems parameter
  FilteredComboBoxModel.is/setFilterSelectedItem() added
  PropertySearchPanel redundant tool tips removed from input fields
  FilteredTablePanel.selectTableColumns(), bug fixed
  AbstractValueLink constructor overloaded with enabledObserver parameter, all the way up through AbstractBeanValueLink, ToggleBeanValueLink and Controls
  UiUtil.showImage() now sets the wait cursor while the image is being loaded and rendered
  InputProviderPanel.isEditAccepted() renamed to isInputAccepted()
  EntityPanel.setActiveDetailPanel() uses SwingUtilities.invokeLater() when setting the linked detail model, selected tab now shown before table model is refreshed
  groupingColumn and aggregateColumn attributes added to Property.ColumnProperty, groupByClause automatically set in EntityDefinitionImpl based on those, also used to exclude a search model for aggregate columns in DefaultEntityTableSearchModel, some spelling errors fixed
  RemoteEntityConnectionImpl now initializes the database connection on construction, so that wrong username or password is handled immediately, in case of connection pool it checks the username and password manually
  Configuration.SERVER_CONNECTION_POOLING_INITIAL now takes a comma separated list of username:password combinations
  Configuration.SERVER_CONNECTION_TIMEOUT added, used int EntityConnectionServer
0.6.3
  ForeignKeySearchModel.getSearchEntities() added
  DefaultForeignKeySearchModel.getSearchEntities() implemented
  DefaultForeignKeySearchModelTest added
  DefaultForeignKeySearchModelTest improved
  DefaultForeignKeySearchModel.getSearchEntities() bug fixed
  ConnectionPoolImplTest, added trying to return a connection with an open transaction to the pool
  DefaultEntityTableModel constructor now throws IllegalArgumentException if searchModel is null or the search model entityID does not match the one supplied as parameter
  DefaultEntityTableModelTest updated accordingly
  AbstractFilteredTableModel, null check added for columnModel parameter
  AbstractFilteredTableModel updated accordingly
  logback.xml no longer included in dist jars
  Util.createRandomString() could not create strings of a fixed length, test added
  EntityLookupModel.setAdditionalLookupCriteria() no longer has the side effect of resetting the selected values, documented, tested
  EntityUiUtil.createNewEntityButton() added for EntityLookupField and EntityComboBox
  IntValueLink and DoubleValueLink now take a format via the constructor
  EntityUiUtil.createTextField() now uses the format associated with the property when instantiating IntValueLink or DoubleValueLink
  PropertyImpl, number format by default has grouping off
  FilteredTableModel.getSingleSelectionObserver() added
  AbstractFilteredTableModel.getSingleSelectionObserver() implemented, tested
  TextValueLink.format field added, with a default non-formatting format, removed from IntValueLink, DoubleValueLink and FormattedValueLink, propagated via constructor
  IntValueLink and DoubleValueLink format parameter narrowed to NumberFormat
  TextValueLink.getValueAsText(), no longer overridden in subclasses, finalized
  Property.setFormat() now throws IllegalArgumentException if the format does not fit the property, tested
  Util.getNonGroupingNumberFormat() added, used where applicable
  UiUtil.transferFocusOnEnter() now uses keyReleased instead of keyPressed
  UiUtil.transferFocusOnEnter() now uses key bindings instead of key listener
  UiUtil.TransferFocusAction added
  UiUtil.addKeyEvent() now uses onKeyRelease as default, instead of onKeyPressed
  EntityLookupModel.getSearchStringRepresentsSelectedObserver() added
  ForeignKeySearchPanel no longer uses EntityLookupField.setEnterAction()
  EntityLookupField.enterAction field removed
  EntityLookupField.transferFocusOnEnter() improved, using key bindings, instead of enterAction
  EntityModelProvider.addDetailModelProvider() added
  DefaultEntityModelProvider.detailModelProviders added
  DefaultEntityModelProvider.equals() and hashCode() added for good measure
  DefaultEntityModelProviderTest added
  EntityTableModel.detailModel attribute removed along with associated crap
  EntityModel.addDetailModel() has the side effect that the table model of the added detail model has it's setQueryCriteriaRequired() called with true
  DefaultEntityModelProvider.initializeTableModel() calls setQueryCriteriaRequired() on the initialized table model if it is a detail model
  Ill-thought changes reverted
  Configuration.AUTO_CREATE_ENTITY_MODELS removed
  DefaultEntityModel.getDetailModel() and DefaultEntityApplicationModel.getMainApplicationModel() no longer create a default model if none exists
  Tests and demos updated to accommodate the above change
  Configuration.USE_NUMBER_FORMAT_GROUPING removed
  EntityPanelProvider.register() removed, didn't pan out
  EntityPanel.addDetailPanel() no longer adds the detail panel model as detail model
  EntityPanelProvider.addDetailPanelProvider() now calls addDetailModelProvider()
  AbstractFilteredTableModel.addItems() overloaded with index parameter, tested
  Some javadoc improvements
  EntityConnectionServer, static configuration now instance based, supplied via constructor parameters
  EntityConnectionServerAdminImpl, static configuration now instance based
  SSL truststore specified in server run config, for shutdown command
  SSL truststore deployed into server config path
  EntityConnectionServerAdminImpl responds to shutdown command
  Configuration, port settings now integer based
  Configuration.SERVER_DB_PORT removed
  run_server.sh and run_server.bat now pass a single argument to the process
  EntityConnectionServerAdminImpl, startup/shutdown functionality refactored
  EntityPanelProvider.createPanel() bug fixed, when creating detail panels it did not use the detail models available in the model, but created new ones
  EntityModel.addDetailModel() no longer calls setQueryCriteriaRequired(true) on the detail table model
  EntityModelProvider.initializeModel renamed to createModel, making it consistent with EntityPanelProvider
  EntityConnectionServer.isLoggingOn, setLoggingOn renamed to isLoggingEnabled, setLoggingEnabled
  Some unit test cleanup
  EntityPanel.containsDetailPanel(entityID) added
  EntityPanelProviderTest added
  EntityModelProvider.containsDetailModelProvider() added
  EntityConnectionServerAdminImpl, shutdown bug fixed, db sid and hostname switched
  EntityApplicationPanel, server/db connection disconnected on startup error
  ServerUtil.getServer(), exception thrown if no server is found now contains server port and registryPort
  Configuration.SERVER_PORT no longer has a default value, required on the server side but not on the client side
  AbstractRemoteServer now supports a LoginProxy instance per clientTypeID
  AbstractRemoteServerTest added
0.6.4
  ClientInfo.databaseUser field added, by default same as user
  RemoteEntityConnectionImpl uses ClientInfo.databaseUser where applicable
  EntityConnectionServerTest.testLoginProxy() added
  LoginProxy.close() added
  AbstractRemoteServer.shutdown() calls close() on all registered LoginProxy instances, ignoring exceptions
  ServerException.LoginException, message constructor parameter added
  EntityApplicationPanel.startApplicationInternal(), now uses getClass().getName() for clientTypeID supplied to the connection provider
  LoginProxy.getClientTypeID() added
  Configuration.SERVER_LOGIN_PROXY_CLASSES added
  EntityConnectionServer.loadLoginProxies() added and called on startup
  EmpDeptLoginProxy added as a LoginProxy example
  jminor.server.loginProxyClasses, added EmpDeptLoginProxy to demo server launch files
  jminor.server.domain.jars property removed from server launch files
  EntityConnectionServerTest now tests with EmpDeptLoginProxy
  EntityTableModel, methods use Collection instead of a List as parameter/return value where applicable
  EntityLookupModel.get/setSelectedEntities(), Collection used instead of List
  DefaultEntityLookupModel.selectedEntities is now a Collection instead of a List
  EntityUtil, methods use Collection instead of a List as parameter/return value where applicable
  FilteredTableModel.setSelectedItems() and setSelectedItemIndexes() take Collection instead of List
  ForeignKeyProperty.isUpdatable() added, returns true if and only if all component properties are updatable
  EntityLookupField no longer sets lookupAction as actionListener on the field, conflicts with focus transferal, uses keyEvent on ENTER instead
  EntityLookupField.defaultBackgroundColor renamed to validBackgroundColor
  EntityLookupField.invalidBackgroundColor added
  UiUtil.transferFocusOnEnter() now uses onKeyRelease = false, otherwise it gets called on actionPerformed on associated dialogs and such
  TextValueLink.NullFormat bug fixed, parseObject() did not update the parse position as specified in the method contract
  H2 database library updated to 1.3.161, chinook dml character encoding fixed, removed problematic comments from ddl
  TextInputProvider constructor overloaded with a JTextComponent parameter
  EntityApplicationModel, renamed references to mainApplicationModels to entityModels throughout
  EntityApplicationPanel, renamed references to mainApplicationPanels to entityPanels throughout
  EntityEditPanel.clearAfterInsert field added, with getter and setter
  DefaultEntityModel.getActiveEntities() now returns the edit model entity in case the table model selection is empty
  DefaultEntityEditModel.insert() now sets the primary key in the underlying entity according to the inserted value
  Events.EventObserverImpl bug fixed, listeners is now an ArrayList instead of HashSet, chaotic iteration order no longer a problem
  EntityLookupField was still doing lookup on actionPerformed, removed
  EntityLookupField, actions linked to keyEvents now enabled/disabled according to the lookup model state
  EntityTablePanel, bug fixed, delete action now based on inputMap/actionMap instead of keyListener, now respects the enabled state of the delete action
  UiUtil.addKeyEvent() uses JComponent.WHEN_FOCUSED instead of JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT as default condition
  Calls to UiUtil.addKeyEvent() changed according to the above
  UiUtil.showInDialog() bug fixed, dispose action did not work since its name was null
  UiUtil.addKeyEvent() now throws IllegalArgumentException if the action name is null
  EntityLookupProvider now creates a EntityLookupField with the lookup action activated on keyPressed, so as to not interfere with the default button on the dialog containing the field
  UiUtil.createFormattedField(SimpleDateFormat, Date) renamed to createFormattedDateField
  DefaultEntityModel now uses SwingUtilities.invokeLater() when initializing detail models if on the event dispatch thread, allowing the UI to update before querying data
  Database.getSequenceSQL() and getAutoIncrementValueSQL() documentation now specifies which exceptions should be thrown
  Database implementations now respect the above requirements, tested
  EntityDefinitionImpl.setIdSource() no longer automatically sets the idValueSource as tableName + "_seq" for AUTO_INCREMENT and SEQUENCE
  EntityUiUtil.lookupEntities() added
  EntityUiUtil.selectEntities() now returns Collection instead of List
  EntityUiUtil.selectEntities() now takes JComponent instead of Window as dialogParent
  EntityTablePanel, selected table column resizing via ALT-LEFT, ALT-RIGHT added
  Minor cleanup of action names in UiUtil and some associated panels
  EntityApplicationPanel, removed Close button from support panel dialog, ESC still closes the window, as well as the close window decorator
  Removed parameters from calls to UiUtil.addKeyEvent() made redundant by sensible default values
  FilteredTablePanel, searchField KeyAdapter no longer explicitly dispatches unhandled event to parent
  UiUtil.DialogDisposeAction renamed to DisposeWindowAction, changed accordingly, no longer takes action name as constructor parameter
  FilteredTablePanel, searchField ignores key events with modifiers
  MaximumMatch, ignores key events with modifiers
  UiUtil.lookupValue() now restricts dialog width to a somewhat arbitrary 500 pixels
  Property.has/set/getParentProperty() renamed to is/set/getForeignKeyProperty()
  PropertyImpl.parentProperty field renamed to foreignKeyProperty
  Property.is/set/getForeignKeyProperty() moved to Property.ColumnProperty, where it belongs
  DefaultEntityTableSearchModel refactored, no longer implements EntityDataProvider, connectionProvider field removed
  DefaultPropertySearchModelProvider refactored
  DatabaseConnectionImpl, Connection based constructor now retrieves username from the underlying connection meta data instead of using .toString(), tested
  DefaultEntityComboBoxModel.getEntity(Entity.Key) bug fixed, did not handle the null element
  DefaultFilteredComboBoxModel.getVisibleItems() bug fixed, threw index out of bounds exception when the model contained only the null value item, did not return the last value in the list otherwise
  DefaultFilteredComboBoxModelTest test model now has the nullValueString set, changed accordingly
  Events, minor refactoring
  PoolableConnectionProvider.createConnection() no longer takes User as parameter
  PoolableConnectionProvider.getUser() added
  ConnectionPoolImpl.user field removed, constructor changed accordingly, getUser() delegates to the connectionProvider, see above
  ConnectionPools.createPool() no longer takes a User argument
  minor changes to example build file
  Inspection run, minor things, exceptions not thrown, final and such
  DatabaseConnectionImpl.commit() and rollback() now throw exceptions as per method contract instead of ignoring them
  TextFieldPlus removed
  SizedDocument added, serves the purpose of the class removed above
  IntField and DoubleField refactored to accommodate the above
  RegexFilterCriteria refactored a bit
  FilteredTableModel.getColumnIdentifier() spelling fixed, getColumnIdentifier()
  cobertura.dir property moved from build.properties to user.properties
  CriteriaSet, criteriaList instantiated inline
  EntityPanel, javadoc improvements
  ResultPacker, added doc for type parameter
  Entities.getDefinitions() now uses a LinkedHashMap for a defined iteration order
  EntityDefinitionImpl.ENTITY_DEFINITIONS is now a LinkedHashMap for a defined iteration order
  DefaultEntityApplicationModelTest.getDependencyTreeModel() now uses preorderEnumeration when going through dependency tree
  Sonar run
  DefaultEntityModel.refreshDetailModelsAfterDelete() now throws DatabaseException instead of RuntimeException
  ConnectionPoolImpl.returnConnection() now throws IllegalStateException instead of RuntimeException in case a transaction is open
  MethodControl constructor now throws IllegalArgumentException instead of RuntimeException
  Util.countLines() now throws IOException instead of wrapping it in a RuntimeException
  Util.writeFile() now throws IOException instead of wrapping it in a RuntimeException
  UiUtil.showImage() now throws FileNotFoundException instead of RuntimeException when the image file can not be found
  Ignored exceptions now named ignored
  ConnectionPoolMonitor/Panel, renamed some fields and methods
  ServerMonitor/Panel, renamed some methods
  ValueMapImpl.hashCode(), minor refactoring
  ValueChangeMapImpl.setAs() bug fixed, setAs(this) simply cleared the map, test added
  DefaultEntityModel.bindEvents() revoked usage of invokeLater() when initializing the detail models (see changelog line 2599)
  Util.parseConfigurationFile() overloaded with a filename parameter
  Util.ADDITIONAL_CONFIGURATION_FILES property added
  Util.parseConfigurationFile() uses the above to discover additional configuration files to parse
  Util.parseConfigurationFile() now searches under user.dir/filename if the file is not found on the classpath
  UtilTest.parseConfigurationFile() added
  DefaultEntityComboBoxModel.foreignKeyFilterCriteria now includes items which have null for the relevant foreign key value
  DefaultEntityComboBoxModelTest, refactored a bit due to the above
  Images, unused field removed
  Util.getGetMethod(), getSetMethod() added, (refactored from AbstractBeanValueLink)
  AbstractBeanValueLinks uses the above
  EntityUtil.EntityBeanMapper added, tested
  @Override annotation added on interface implementations
  Sonar run
  EntityUtilTest, minor improvements in toBean() and toEntity() tests
  WebStartServerTest added
  webserver.jar library updated
  WebStartServer, changed according to updated library version, removed main
  ServerUtil, added logging
  PropertyImpl, minor refactoring
  Unit test cleanup and refactoring
  WebStartServerTest, gives the server a moment to start
0.6.5
  TextInputPanel, added null check to constructor
  DateInputPanel, enabledState now linked to input field as well as button
  Some minor unit test improvements/refactorings
  DefaultApplicationModel, constructor performs null check on connectionProvider
  EntityApplicationModel.login(user) throws IllegalArgumentException if user is null
  EntityImpl.KeyImpl, added entityID to a couple of exceptions
  EntityUtil.EntityBeanMapper.toBeans() and toEntities() added
  EntityTablePanel.setTablePopupMenu() handles a null controlSet parameter
  EntityTablePanel.getPopupControls() documented
  ServerMonitor.connectServer() error messages improved
  DateUtil refactored, floors time fields in all returned dates, floorFields() and floorTimeFields() added, used throughout, tested
  SearchType bug fixed, renamed AT_LEAST and AT_MOST to LESS_THAN and GREATER_THAN respectively, these were incorrect according to the signs used
  DefaultColumnSearchModel, renamed a couple of methods mirroring the above changes
  DefaultColumnSearchModelTest.include() added
  Util.countLines() overloaded with excludePrefix
  Messages.SELECT_FILE and SELECT_DIRECTORY added
  UiUtil.selectFile() and selectDirectory() use the above
  UiUtil.selectDirectory() overloaded with dialogTitle parameter
  Messages_is_IS.properties UTF-8 encoding fixed
  ChinookLoadTest bugs fixed, relied on automatic model creation
  Entities.Validator skips ForeignKeyProperty's when performing null validation instead of skipping the component properties
  ForeignKeyPropertyImpl.setNullable() now sets the nullability of it's component properties
  Demo truststore files no longer added to demos and server monitor jar files during dist, done during deployment instead
  Deployed demo and server monitor jars now contain a logback configuration file, useful when running with webstart
  Minor changes in build.xml
  Minor chinook demo code cleanup
  ValueChangeMapEditPanel removed, functionality moved to EntityEditPanel
  EntityEditPanel.setInitialFocus() now handles the case where initialFocusComponent is not focusable
  EntityEditPanel.get/setInitialFocusComponentKey() renamed to get/setInitialFocusProperty()
  AbstractValueChangeMapEditModel removed, functionality moved to DefaultEntityEditModel
  ValueChangeMapEditModel, some methods moved down to EntityEditModel
  EntityConnectionProvider.getHostName() added, tested
  Moved user specific targets from build.xml to user_build.xml and associated properties from build.properties to user.properties
  LoadTestModel.getExceptions() now returns a copy of the exceptions list, to prevent a ConcurrentModificationException in LoadTestPanel$RefreshExceptionsAction
  DatabaseConnection.query(), queryObjects(), queryInteger(s)(), queryStrings(), readBlobField(), writeBlobField(), execute(), executeCallableStatement() removed
  DatabaseConnectionImpl.query(), queryInteger(), readBlobField(), writeBlobField(), moved to EntityConnectionImpl and privatized
  Databases.INT_PACKER moved to EntityConnectionImpl
  DatabaseConnection(Impl).executeFunction() and executeProcedure() removed
  PoolableConnection merged into DatabaseConnection, removed
  EntityConnection.getPoolableConnection() renamed to getDatabaseConnection()
  EntityRemoteConnection.getPoolableConnection() renamed to getDatabaseConnection()
  EntityConnectionImpl.executeProcedure() and executeFunction(), tests added to EntityConnectionImplTest
  ConnectionPoolImpl now initializes minimumPoolSize connections on start
  EntityTablePanel.includeUpdateSelectedProperty() added
  EntityApplicationPanel.getApplicationIdentifier() added, fixed bug, EntityApplicationPanel did not use the same string identifier when saving the default login name and when retrieving it
  EntityApplicationPanel.getUser(), applicationIdentifier parameter removed, uses the above
  FilteredTableModel.addSelectedItem() and addSelectedItems() added, tested
  FilteredTableModel.getSelectedIndexes() now returns a List instead of Collection
  AbstractEntityConnectionProvider, logger added, logs when a connection is invalidated, disconnects an invalid connection
  AbstractEntityConnectionProvider, validity time now runs every 10 seconds instead of every second
  PostgreSQLDatabase bug fixed, select currval/nextval now surround the sequence name with single quotation marks
  EntityTestUnit.connectionProvider field replaced with connection
  DefaultEntityTableModel.getPropertySummaryModel() now adds summary update event as a listener on afterInsert on the edit model, if available
  EntityModel.initialize() overloaded with Property.ForeignKeyProperty
  DefaultEntityModel.handleInitialization() signature changes, now takes Property.ForeignKeyProperty as parameter
  EntityTableModel.setForeignKeySearchValues() overloaded with Property.ForeignKeyProperty
  EntityModel.setDetailModelForeignKey() added
  EntityConnectionImpl now performs commit/rollback for select queries as well as insert/update/delete, required by postgresql transaction handling
  EntityUtil.getRandomDouble() bug fixed, + 1 removed
  EntityUiUtil.createEntityField(), field made unfocusable
  ExceptionDialog.emailErrorReport() no longer windows specific, uses Desktop.browse(), errorReportEmailAddressTo removed and lastUsedEmailAddress added
  DefaultEntityEditModel.insert() refactored, it set the primary key values after doInsert() had fired evtAfterInsert, .insertEntities() added
  EntityPanel.setEditPanelState() now calls initializeUI() at the end so the parent panel will get the focus when the edit panel dialog is hidden
  EntityTableModel.addEntities() added
  EntityTableModel.addEntitiesByPrimaryKeys() removed
  DefaultEntityModel.handleInsert()/refreshDetailModels() after insert refactored
  InsertEvent now takes a list of entities as constructor parameter instead of primary keys
  InsertEvent.getInsertedEntities() added
  EntityEditModel.insert() returns the inserted entities instead of only their primary keys
  DefaultEntityComboBox.vetoSelectionChange() no longer vetos if model is empty
  DefaultEntityModel.setMasterModel() can now only be called once
  EntityPanel.setMasterPanel() can now only be called once
  DefaultEntityModel.bindMasterModelEvents() added, called from setMasterModel()
  DefaultEntityModel.handleInsert(), handleUpdate() and handleDelete() no longer take care of the detail models, handleDelete() removed
  DefaultEntityModel.handleMasterInsert(), handleMasterUpdate() and handleMasterDelete() added
  EntityImpl.initializeValue() nulls primary key in case of primary key properties
  DefaultEntityEditModel.bindEventsInternal() stPrimaryKeyNull updated in valueSetListener instead of entitySet, valueChangeEvent fired after states are updated
  DefaultEntityModel.initialize() now only sets the value in the edit model if foreign key values are specified, that is, no longer nulls the value when initialized with an empty list
  EntityEditModel.getEntityNullObserver() renamed to getPrimaryKeyNullObserver()
  IntBeanSpinnerValueLink constructor overloaded with SpinnerNumberModel parameter
  EntityConnectionImpl synchronized public methods
  EntityConnectionImpl.getSelectSQL() now uses tableName instead of selectTableName in case of select for update
  EntityConnectionImpl.selectForUpdate() added
  EntityConnectionImpl.lockAndCheckForUpdate() uses the above since selecting from views with count(*) subqueries fails when selecting for update, so using the standard doSelectMany failed when the selectTableName for the entity was a problematic view, select for update should also use the underlying table, not selectTableName
  EntityPanel constructor uses the default entity caption if the caption parameter is null
  EntityPanelProvider uses the EntityPanel constructor which includes a caption parameter
  EntityConnectionImpl.populateStatementPropertiesAndValues() exception message improved
  EntityConnectionImplTest.insertOnlyNullValues() and updateNoModifiedValues() added
  EntityConnectionImpl.createLogMessage() no longer displays null when no sqlStatement is specified
  EntityApplicationPanel.initializeUI() no longer throws exception if no entity panel providers have been specified and only tries to initialize the selected panel if it exists
  EntityDefinition.getPrimaryKeyProperties() now returns a list of primary key properties sorted by primary key column index
  Entities.define() refactored, property related code moved to EntityDefinitionImpl.initializeProperties()
  EntityDefinitionImpl.initializeProperty() throws exception if a foreign key property references an undefined entity
  Configuration.STRICT_FOREIGN_KEYS added so the above restriction can be lifted in case of entities with circular dependencies
  AbstractEntityConnectionProvider.validateConnection() now ignores any exceptions occurring when trying to disconnect an invalid connection, NoSuchObject exception was thrown when server had already disconnected
  RemoteEntityConnectionProvider now includes special handling for isConnected(), failed if server had disconnected with NoSuchObject exception
  EntityUtil.EntityBeanMapper null argument handling added, tests added
  AbstractOperation made inner class of DatabaseConnectionImpl and renamed to OperationImpl
  FilteredComboBoxModel.set/getSortComparator() added
  DefaultFilteredComboBoxModel implements the above, tested
  EntityUtil, removed a couple of duplicate string literals
  DefaultEntityTableModel now remembers the search state only after a successful refresh
  DefaultEntityComboBoxModelTest improved
  DefaultEntityComboBoxModel.getFilteredIndexOfKey() bug fixed
  DefaultEntityModelTest improved
  JaCoCo coverage targets added to build.xml
  build.xml removed cobertura coverage targets
  Configuration.SHOW_DETAIL_PANEL_ACTIONS added
  EntityPanel changed according to the above, ways for the user to hide or popup detail panels are included only if the above value is true
  build.xml removed last cobertura remnants
  Configuration.SHOW_DETAIL_PANEL_ACTIONS renamed to Configuration.SHOW_DETAIL_PANEL_CONTROLS
  EntityPanel.showDetailPanelControls property added, setter and getter, defaults to Configuration.SHOW_DETAIL_PANEL_CONTROLS
  Configuration.SHOW_TOGGLE_EDIT_PANEL_CONTROL added
  EntityPanel changed according to the above, a way for the user to hide or popup the edit panel is included only if the above value is true
  EntityPanel.showToggleEditPanelControl property added, setter and getter, defaults to Configuration.SHOW_TOGGLE_EDIT_PANEL_CONTROL
  SearchType.getDescription() added
  Messages, added strings for the above
  ColumnSearchPanel.initializeSearchTypeCombo() adds tooltips to the search type items, using the above descriptions
  EntityLookupField now uses a customized dialog for showing the no results from criteria message, due to the enter key loop bug in windows
  EntityUiUtil.createTextField() and createDateInputPanel() no longer take DateFormat as parameter, use the property format
  EntityEditPanel.createDateInputPanel() no longer takes a DateFormat parameter
  EntityEditModel.persistValueOnClear() renamed to isValuePersistent(), .clear() does not clear the values from the edit model, so this was a misnomer
  EntityEditModel.persistValue() renamed to isValuePersistent() for consistency
  Entity.Definition.setToStringProvider() removed, duplicate of setStringProvider()
  UnitTest coverage improved
  EntityImplTest refactored
  EntityImpl.getReferencedPrimaryKey() refactored
  PropertySearchPanel refactored
  SteppedComboBox refactored
  EntityLookupField refactored
  DefaultEntityTableModel refactored
  Property.BlobProperty removed
  EntityConnection.writeBlob(), removed blobDescription parameter
  EntityConnectionImpl, RemoteEntityConnectionImpl changed according to the above
  EntityConnectionImpl.writeBlob() and readBlob() implemented correctly
  EntityConnectionImplTest, added tests for the above
  EntityConnectionImpl refactored
  EntityConnectionImpl, writeBlob() can now be executed within an open transaction
  includeantruntime="false" added to javac targets in build.xml
  EntityConnectionImpl, logging revised
  DatabaseException now copies the stack trace of the root cause, minor refactoring
  RemoteEntityConnectionImpl, logIdentifier field added, used to identify logging statements during remote calls
  resources/server/config/logback.xml modified to support log file per user@client
  RemoteEntityConnectionImpl method logging now logs the root LogEntry to the log file, not only the sublog entries
  RemoteEntityConnectionImpl uses log level ERROR to log method calls, hacky
0.6.6
  State.notifyObservers() removed
  StateImpl.notifyObservers() is no longer public
  StateObserver.addListeningAction() removed
  EventListener added, replaces ActionListener throughout
  Event.fire() parameter type changed from ActionEvent to Object
  EventListener.eventOccurred() parameter changed from ActionEvent to Object
  EventListener.eventOccurred() overloaded parameterless
  EventAdapter added
  Attribute.hasDescription() removed
  Util.initializeRegistry() and getRegistry() moved to ServerUtil
  Util.setClipboard() moved to UiUtil
  EntityPanel.checkIfInitialized() added and used
  EntityTablePanel.checkIfInitialized() added and used
  Column.columnHasDefaultValue() and isDenormalized() pushed down to Property.ColumnProperty
  framework.client.model.event package removed, InsertEvent, InsertListener, UpdateEvent, UpdateListener, DeleteEvent and DeleteListener removed
  InsertEvent, UpdateEvent and DeleteEvent made inner classes (interfaces) of EntityEditModel
  DefaultEntityEditModel.InsertEventImpl, UpdateEventImpl and DeleteEventImpl added
  FilteredTableModel.add/removeColumnHidden/ShownListener() generified
  EntityConnectionImpl.selectMany() bug fixed, no longer commits if the criteria is marked as selectForUpdate, tested
  EntityCriteria, EntitySelectCriteria, some javadoc improvements
  PropertyImpl, unused constructors removed
  ValueChangeMap.add/RemoveValueListener() parameter now ValueChangeListener
  ValueChangeMap merged up into ValueMap, removed
  ValueMap.initializeValue() removed, implementations appeared not to do anything but call setValue()
  Entity.initializeValue() removed, see above
  ValueMap.handleSetAs() removed, was overridden in EntityImpl only to copy the cached toString value from the source entity, not worth the complexity
  CriteriaProvider removed, practically unused
  ValueChangeEvent.valueOwner property removed, fixing a cyclical dependency
  EntityTableCellRenderer, minor refactoring
  EntityLookupField, duplicate code refactored into UiUtil.prepareScrollPanelDialog()
  Messages, moved static initializer with UIManager dependency to FrameworkMessages
  FrameworkMessages, removed getDefaultConfirm...() methods
  H2Database.createEmbeddedH2Database() no longer static, dynamically loads RunScript tool to get rid of compile time dependency to H2 codebase
  H2Database refactored a bit
  AbstractDatabase.getAuthenticationInfo() now allows empty passwords
  Util.nullOrEmpty() now returns true if the no arguments are provided
  H2Database, bug fixed, did not initialize properly
  EntityConnectionImpl.lockAndCheckForUpdate() now respects contract and throws an exception if a record has been deleted, tested
  EntityConnectionImpl.EntityResultPacker, minor refactoring
  Entities, minor refactoring in StringProvider classes
  LoadTestModelTest main scenario no longer uses Random
  LocalEntityConnectionProvider, now uses a proxy for logging method calls
  EntityConnectionLogger added
  ConnectionPools now manages available connection pools
  EntityConnectionServer now handles initializing connection pools
  RemoteEntityConnectionImpl, refactored a bit
  RemoteEntityConnectionImpl, synchronized public methods
  MethodLogger, minor refactoring
  LogEntry.exitTime field added, some refactoring
  EntityTableModel.setForeignKeySearchValues(entityID, values) removed
  DefaultEntityModel.detailModelForeignKeys map now contains the actual foreign key property as value, instead of the propertyID
  DefaultEntityModel.setDetailModelForeignKey() fetches (and thereby validates) the actual foreign key
  EntityConnectionImpl.BLOB_RESULT_PACKER added, BlobResultPacker class removed
  EntityLoadTestModel sets the client connection type to remote during setup
  ResultPacker.pack() javadoc improved
  ValueMapValidator renamed to Validator and made inner class of ValueMap, generics definition improved
  ValueMap.Validator, action parameter removed from validation methods
  ValueMap.Validator.INSERT, UPDATE, UNKNOWN constants removed
  DefaultValueMapValidator changed according to the above
  Entities.Validator changed according to the above, now uses the same strategy as DefaultEntityEditModel to determine if the entity being validated is new
  Entity.Validator changed according to the above
  Entities.DefaultEntityValidator changed according to the above
  ValueMap.getValues() removed, already specified in ValueCollectionProvider
  Util.get/putUserPreference() incorrect static lazy initialization fixed
  ValueChangeEvent.isModelChange removed
  DbUtil added
  DbUtilTest added
  Util.closeSilently(ResultSet) and closeSilently(Statement) moved to DbUtil
  UtilTest, added a couple of tests
  AbstractEntityConnectionProvider synchronized some public methods
  DatabaseConnectionImpl.beginTransaction() logging added
  DatabaseConnectionImpl, connection validation refactored
  AbstractFilteredTableModel, some reordering, minor refactoring
  AbstractFilteredTableModel.convertColumnIndexToView() bug fixed, columnIndexCache was not initialized, columnIndexCache never used for index 0
  EntityTableSearchModel.getPropertyFilterModelsOrdered() removed
  FilteredTablePanel, ctr+alt+click toggles filter panel
  DefaultEntityTableSearchModel, some refactoring
  PropertySearchModel.toString() added, basically just for the javadoc
  EntityTableSearchModel.getSearchableProperties() removed
  EntityTableModel.getPrimaryKeysOfSelectedEntities() removed, unused
  FilteredTableModel.clearSortingState() removed, unused
  DefaultEntityModelProviderTest improved a bit
  EntityImpl, rounding of double values moved from getDoubleValue() to setValue()
  Util.getTypeClass() moved to PropertyImpl
  Configuration.DEFAULT_MAXIMUM_FRACTION_DIGITS added, default 10
  PropertyImpl.initializeDefaultFormat() uses the above
  RemoteEntityConnectionImpl, refactored connection pooling mechanism
  ConnectionPoolImpl.setEnabled() now sets closed = false when enabling, which means a pool can be closed and re-opened
  RemoteEntityConnectionImpl.getUser() and isConnected() no longer synchronized, blocked server monitor while the connection is active
  RemoteEntityConnectionImpl.isConnected() synchronized yet again
  ServerMonitorPanel, added stats update interval spinner
  server.monitor, removed unused methods and fields, renamed some methods for consistency
  ServerMonitor, bug fixed, resetStatistics() did not clear all series
  RemoteEntityConnectionImpl, static connection pool related admin methods removed, EntityConnectionServerAdminImpl calls pool directly
  EntityImplTest, removed Chinook dependency
  Configuration.DEFAULT_HORIZONTAL_AND_VERTICAL_COMPONENT_GAP added
  EntityUiUtil.createBorderLayout(), createFlowLayout() and createGridLayout() added, used throughout
  EntityUiUtil.createBorderLayout(), createFlowLayout() and createGridLayout() moved to UiUtil
  SearchType refactored
  EntityConnectionImpl.translateValue() bug fixed
  TextValueLink, immediateUpdate field removed, unused
  ValueMap.copyValue() removed
  ValueMapImpl.copyValue() protected
  EntityImpl now overrides copyValue(), tested
  EntityImplTest refactored
  States refactored
  StateImplTest improved
  States.ReversedStateObserver removed, merged into StateObserverImpl with reversed attribute
  Tests refactored, minimizing the use of fail() within test methods
  Version removed
  WeakPropertyChangeListener removed
  RegexFilterCriteria removed
  WebStartServer removed
  DbUtil renamed to DatabaseUtil, for package consistency
  FilteredTableModel.getTableColumn() throws IllegalArgumentException instead of returning null when column is not found
  FilteredTableModel.setSelectedItemIndexes() renamed to setSelectedIndexes(), 'Item' removed from set/add selection method names
  AbstractFilteredTableModel.refreshing and filtering fields removed
  DocumentAdapter made abstract, insertOrRemoveUpdate() renamed to contentsChanged()
  TristateButtonModelTest added
  EntityGeneratorModel, refactored, now includes tables referenced via foreign keys
  EntityGeneratorModel, removed some unused methods, test coverage improved
  EntityConnectionServer.setMaintenanceInterval() bug fixed, did not restart the maintenance timer
  org.jminor.common.server.loadtest.* removed, had not been maintained for some time, never used
  EntityGeneratorModel, refactored some more
  EntityApplet removed
  EntityCriteriaUtil.getInList() no longer adds parenthesis around the whole clause, tested
  EntityGeneratorPanelTest added
  DefaultEntityApplicationModel, unused methods removed
  DefaultEntityApplicationModelTest, some tests added
  DefaultEntityTableModelTest, some tests added
  EntitiesTest, some tests added
  States.StateObserverImpl, bug fixed, reversedStateObserver was not notified on state change, tested
  EntityTablePanel.initializePanel(), bug fixed, did not enable wait cursor
  common.model.table, common.ui.table packages added, table related classes moved there
  DatabaseConnectionsTest added
  EntityCriteriaUtil.selectCriteria() takes Collection instead of List
  EntityConnectionImpl, removed a couple of unnecessary StringBuilder usages
  EntityApplicationPanel.setParentWindowTitle() added, handles both JFrame and JDialog
  RemoteEntityConnectionProviderTest improved a bit
  EntityApplicationPanel.getEntityPanel() with Class parameter removed, unused
  BooleanProperty.getSQLString() removed, unused
  EntityJSONParser improved quite a bit, refactored
  Util.nullOrEmpty() overloaded for Collections and Maps
  EntityConnectionImpl.update() refactored
  Configuration.resolveTrustStoreProperty() moved to Util and renamed to resolveTrustStore()
  EntityConnectionServerTest improved a bit, setUp()/tearDown() now use EntityConnectionServerAdminImpl.startServer/shutdownServer() respectively
  EntityConnectionImpl.PropertyResultPacker now handles null values correctly
  EntityConnectionServerTest refactored
  EntityConnectionServerAdminImpl.adminInstance privatized
  EntityConnectionImpl.PropertyResultPacker, bug introduced above fixed, null values handled correctly
  EntityApplicationPanel.initializeEntityPanels() added
  EntityLookupField, bug fixed, OKAction did not call super constructor with a name
  Configuration.getDefaultUsername() removed
  EntityApplicationPanel.getUser() uses Util.getDefaultUserName() instead of the above
  ValueLinkValidators.AbstractValidator.updateValidityInfo() renamed to validate()
  ValueMap.Validator, revalidate(), addRevalidationListener() and removeRevalidationListener() added
  ValueLinkValidators.AbstractValidator listens to re-validation events using the above
  DefaultValueMapValidatorTest added, some methods moved from ValueMapImplTest
  Some minor improvements
  Timer replaced with ScheduledExecutorService throughout, some related refactoring
  Util.DaemonThreadFactory added, tested
  TaskScheduler added, ScheduledExecutorService usages refactored to use that class
  TaskScheduler.setInterval() synchronization bug fixed
  TaskScheduler no longer started on construction, start() returns instance to facilitate startup on construction
  Events.EventObserverImpl redundant synchronization removed
  TaskSchedulerTest added
  TaskSchedulerTest improved
  ConnectionPoolMonitorPanel, fine grained statistics checkbox moved
  EntityServerMonitorPanel bug fixed, JDK_PREFERENCE_KEY was too long
  LoadTest, MethodLogger and related classed moved to common.model.tools
  ItemRandomizerPanel and LoadTest panel moved to common.ui.tools
  DefaultEntityTableModel.doRefresh() now performs the query before clearing the model, so that exceptions during refresh do not result in an empty model
  DefaultEntityTableModel.getValue() added, allows the overriding of the getValueAt() mechanism
  EntityConnectionServer, constructor now handles errors and un-exports the server
  EntityConnectionServerAdminImpl, constructor now handles errors and un-exports the server admin
  Entity.BackgroundColorProvider.getBackgroundColor() now returns Object instead of java.awt.Color to get rid of awt dependency
  Configuration.INVALID_VALUE_BACKGROUND_COLOR removed, unused
  EntityConnectionServer, domainModelClassNames, loginProxyClassNames, initialPoolUsers, webDocumentRoot, webServerPort and clientLoggingEnabled added as constructor parameters
  EntityConnectionServer.logShutdownAndReturn() added and used
  Configuration.DEFAULT_HORIZONTAL_AND_VERTICAL_COMPONENT_GAP removed
  Configuration.DEFAULT_LOOK_AND_FEEL_CLASSNAME removed, Configuration no longer depends on UiUtil
0.6.7
  Entity.KeyGenerator added, implementations added to EntityDefinitionImpl, factory methods to Entities
  IdSource removed
  EntityTableCellRenderer refactored
  TextValueLink.NullFormat moved to Util
  PropertyImpl.setFormat() no longer accepts null values
  PropertyImpl.initializeDefaultFormat() returns Util.NullFormat by default
  TristateValueLink now extends BooleanValueLink
  Database.loadDriver() removed, no longer required, jdbc.drivers system property can be used to specify the driver
  Database implementations load driver classes statically
  Database.createConnection() no longer throws ClassNotFoundException
  ivy configuration added, handles all libraries except for tjws, project 3rd party libraries updated
  ConnectionPools methods synchronized
  Renamed ivy runtime configurations
  MethodLogger refactored and improved
  LogEntry removed
  MethodLogger synchronized, enable/disable implemented
  DatabaseUtil.query() moved back to DatabaseConnection
  PropertyImpl no longer implements Serializable
  Property.PropertyValueFetcher added
  ServerLog now contains the MethodLogger entries instead of the logger itself
  ServerLog renamed ClientLog
  ConnectionPoolImpl.connectionPoolStatistics is now a LinkedList
  JasperReportsWrapper, replaced usage of deprecated method
  LoadTestModel.resetChartData() did not reset failed runs
  EntityImpl, minor optimizations, minimizing the usage of Property.getPropertyID() where possible
  Entity.setValue() overloaded with a validateType parameter, again
  EntityResultPacker calls the above method with false, no need to validate the types coming from the database
  BooleanProperty.toSQLValue() and getColumnType() moved up to ColumnProperty
  EntityConnectionImpl.setParameterValue() simplified, using the above
  PropertyImpl, value fetcher bug fixed, now handles BooleanProperty correctly
  LocalEntityConnectionProvider no longer logs calls to isConnected and isValid
  Petstore demo now uses BooleanProperty
  EntityDefinitionImpl.KeyGenerator implementations refactored
  Property.PropertyValueFetcher renamed to ValueFetcher
  Property.ColumnProperty.toSQLValue() renamed to toColumnValue()
  Property.ColumnValueConverter added
  Property.ColumnProperty.fromColumnValue() added
  Property.ColumnProperty.setColumnValueConverter() added
  BooleanProperty removed
  Previous KeyGenerator refactoring broke it, needs to lazily load the query due to remote connections
  EntitySelectCriteria.selectForUpdate field renamed to forUpdate along with accessors
  SubqueryPropertyImpl constructor overloaded with columnType parameter
  SubqueryPropertyImpl, removed unused constructor
  empdept ddl script simplified a bit
  EntityConnectionServer, added logging of unsuccessful login attempts
  EntityConnectionImpl.selectPropertyValues() now throws IllegalArgumentException if not a column based property, tested
  DoubleField.set/GetMaximumFractionDigits() added, a rather clumsy implementation
  SizedDocument.postInsert() added to accommodate the above
  EntityUiUtil.initializeTextField() uses the above
  Properties.columnProperty() method without columnType parameter removed
  RemoteEntityConnectionImpl, bug fixed, did not set method logger for non-pooled connections
  UiUtil.prepareScrollPaneDialog(), bug fixed, did not set OK button caption
  UiUtil.addKeyEvent() now removes key binding if action parameter is null
  DefaultEntityTableModel.bindEditModelEvents() renamed to bindEditModelEventsInternal()
  DefaultEntityTableModel.bindEditModelEvents() added for overriding
  EntityTablePanel, removed unused parameterless updateSelectedEntities() along with getPropertyToUpdate()
  EntityApplicationPanel.getApplicationTabPane() added
  RemoteEntityConnectionImpl, added logging of rollback of an open transaction on disconnect
  PropertyImpl no longer initializes a ValueFetcher for MirrorProperty
  Entities.DEFAULT_KEY_GENERATOR added, useful for checking if an entity is using the default one
  EntityDefinitionImpl.SequenceKeyGenerator only queries a primary key value if it is not already specified for the entity
  EntityTableCellRenderer.NumberRenderer and DateRenderer overloaded constructor with format parameter
  EntityModel.setLinkedDetailModels() replaced by addLinkedDetailModel() and removeLinkedDetailModel()
  TextBeanValueLink refactored to mirror TextValueLink
  TimestampBeanValueLink removed, DateBeanValueLink refactored to accommodate
  UiUtil.createFormattedField() now has valueContainsLiteralCharacters as true by default
  DefaultFilteredComboBoxModel, listDataListeners now a CopyOnWriteArrayList, due to a java.util.ConcurrentModificationException in OSX, null check added to add/removeListDataListener
  EntityCriteriaUtil.propertyCriteria() and foreignKeyCriteria() generified
  DefaultForeignKeySearchModel.getCriteria() modified to accommodate the above
  EntityEditPanel.requestFocusAfterInsert property added
  EntityPanelProvider uses default entity caption if none is specified
  EntityApplicationPanel.setupEntityPanelProviders() added for overriding
  DocumentSizeFilter added
  EntityUiUtil.createTextArea() uses the above when a property has a maximum length defined
  ValueListProperty generified
  ValueListInputProvider generified further
  Demos fixed according to recent framework changes
  publish target added to ant build file and publications clause to ivy config
  common.ui.valuemap merged with common.ui.control
  'Bean' removed from common.ui.control value link classnames
  AbstractValueLink.ModelValue moved to common.model.Value
  EditModelValue moved to common.model.valuemap.ValueMapValue
  AbstractValueLink renamed to ValueLink, no longer abstract, uses the Value mechanism for the ui value as well as the model value
  AbstractValueLink descendants removed
  ToggleValueLink removed
  Control.Toggle added
  createToggleControl() moved back to Controls
  Control.Toggle moved up to ToggleControl
  ValueLinks, EntityUiUtil, some generification
  EntityUiUtil, removed redundant null check
  EntityUiUtil.LookupUIValue privatized
  EntityLookupField, some minor changes
  'Bean' removed from common.ui.control.ValueLinks method names
  ValueLink privatized, made inner class of ValueLinks
  ValueLink no longer extends Action
  LinkType, ValueLinks moved from common.ui.control to common.ui
  ColumnSearchPanel.DefaultInputFieldProvider.createTextProperty() bug fixed, missing conditional
  Controls.toggle... methods moved to ValueLinks, due to cyclical dependency
  ValueLinks.toggle... methods moved back to Controls
  common.Values refactored from ValueLinks
  common.ui.UiValues refactored from ValueLinks
  LinkType deprecated
  LinkType removed
  ValueLinks refactored
  Values.ValueLink, readOnly attribute removed
  PropertyImpl.DateColumnValueConverter bug fixed, did not handle null values correctly
  Values.value() added along with Values.ValueImpl
  ValuesTest added
  UiValuesTest added, common.ui.valuemap tests ignored
  common.ui.valuemap tests removed
  UiValues.TextUiValue field textComponent replaced with document
  UiValues.TextUiValue.getText() synchronizes on document
  EntityLookupField, searchHint is enabled after the field has been linked with the model, since that removed the search hint text
  TextFieldHint.updateState() privatized, only used due to the above
  ForeignKeySearchPanel.initializeForeignKeyField() removed lookup field initialization code
  ForeignKeySearchPanel.initializeInputField() now returns null for lower bound fields
  PropertyImpl.getTypeClass() now returns byte[].class for BLOB properties
  EntityConnectionImpl.setForeignKeyValues() now calls setValue() with validateType parameter as false
  EntityImpl, PropertyImpl, some minor optimizations, using package protected fields
  ItemComboBoxModel, minor generification
  Util, removed a couple of unused methods, parseInt/Double/Long() refactored
  UiUtil.selectFile()/selectDirectory() refactored
  UiUtil.removeTransferFocusOnEnter() added, used in Chinook demo
  EntityConnection, RemoteEntityConnection, some minor javadoc improvements
  UiValues.SelectedItemUIValue no longer listens to editor document, test fixed
  UiUtil.comboBoxImmediateUpdate() added as a replacement for the above
  MaximumMatch null handling improved
  EntityEditModel.createPropertyComboBoxModel() and initializePropertyComboBoxModel(), refreshEvent and nullValueString parameters removed
  EntityEditPanel and EntityUiUtil, changed according to the above
  DefaultEntityTableModel.initializeColumnModel() now throws exception if no visible properties are defined
  EntityEditModel.initializeEntityComboBoxModel(), initializeEntityLookupModel() and initializePropertyComboBoxModel() removed
  ValueMapEditModel.getValueChangeObserver() and validate() added
  DefaultEntityEditModel implements the above
  Ant task resolve_libraries now syncs
  String.isEmpty() replaced by length() == 0 for android compatibility
  Configuration.CLIENT_SCHEDULE_CONNECTION_VALIDATION
  DatabaseUtil.closeSilently(Connection) added
  H2Database refactored
  Configuration.SHUTDOWN_EMBEDDED_DB_ON_DISCONNECT added
  LocalEntityConnectionProvider uses the above
  AbstractFilteredTableModel.initializeColumnComparator() added, overridable
  EntityJSONParser, made couple of methods public
  AbstractFilteredTableModelTest.customSorting() added
  EntityConnectionImpl.EntityResultPacker.loadEntity() error message improved
  LoginPanel improved a bit, allowing easier customization
  EntityDataUtil.batchInsert() now throws exception on non-positive integer batchSize
  PropertyImpl.prepareValue() added
  EntityConnectionImpl, minor refactoring
  EntityTableModel.get/SetReportDataSource() removed
  Criteria.getValues() now uses generics wildcard
  Criteria.asString() renamed to getWhereClause()
  EntityCriteria now extends Criteria<Property.ColumnProperty>
  EntityApplicationPanel.savePreferences() added and called when exiting
  EntityPanel.savePreferences() added
  EntityModel.savePreferences() added
  EntityTableModel.savePreferences() added
  DefaultEntityTableModel.savePreferences() implemented and applyPreferences() added and called during construction
  UiUtil.showInDialog() overloaded with closeAction parameter
  DefaultEntityTableModel, saving and applying preferences logs errors instead of throwing RuntimeException
  AbstractFilteredTableModel, column comparators initialized lazily
  Configuration.USE_CLIENT_PREFERENCES added
  DefaultEntityTableModel uses the above
  Util.removeUserPreference() added
  Util.flushUserPreferences() added, called during EntityApplicationPanel.exit()
  DefaultEntityTableModelTest.preferences() added
  Util, added some javadoc
  UiUtil.showInDialog() refactored and renamed to displayInDialog()
  AbstractFilteredTableModel.getComparable() is now abstract
  AbstractFilteredTableModelTest.findNextItemCoordinate() improved
  AbstractTableColumnSyncPanel, regression bug, this class could not be instantiated with hidden columns (allowed with preferences)
  AbstractFilteredTableModel.columns field added to help with the above
  EntityTableSearchPanel constructor simplified
  FilteredTableColumnModel refactored out of FilteredTableModel
  DefaultFilteredTableColumnModel and DefaultFilteredTableColumnModelTest added
  TableSortModel refactored out of AbstractFilteredTableModel
  DefaultTableSortModel and DefaultEntityTableSortModel added
  TableSortModel.sort() added, getRowComparator() removed
  AbstractFilteredTableModel.sorting field removed
  LoadTest.ScenarioException moved up
  Serializer.SerializeException moved up
  Deserializer.DeserializeException removed, replaced with SerializeException
  DefaultTableSortModel renamed to AbstractTableSortModel
  DefaultEntityTableModel.getQueryCriteria() removed
  DefaultEntityTableModel.getTableColumnProperties() removed
  DefaultEntityTableModelTest refactored
  PropertySummaryModel and descendants refactored
  Property, Types.TIME implemented
  Deserializer merged with Serializer
  RemoteEntityConnection code cleanup, synchronized with EntityConnection
  FrameworkMessages_is_IS.properties encoding fixed
  DateUtils.floorTime() added
  EntityUtil.getRandomDate() now returns a random date within the last year instead of a date based on current time
  EntityUiUtil.createEntityLookupFieldPanel() added
  EntityUtil.getPropertyValues() no longer returns a generified collection
  PropertySummaryModel.PropertyValueProvider.getValues() no longer returns a generified collection
  EntityUtil, minor refactoring
  TableSelectionModel refactored out of FilteredTableModel
  DefaultTableSelectionModel added
  DefaultColumnSearchModel.include(Object) now returns true if model is not enabled
  AbstractFilteredTableModel.getSearchValueAt() second parameter changed to TableColumn, some minor refactoring
  EntityUtil, testing related methods moved to EntityTestUnit
  EntityTablePanel.getInputProvider() improved, uses new TextInputProvider constructor with max length parameter
  EditModelValue replaced by factory class EditModelValues
  EntityUiUtil, javadoc improvements
  ControlProvider, javadoc improvements
  EntityPanelProvider, javadoc improved
  UiUtil, javadoc improved
  ExceptionDialog, javadoc improved
  DoubleField, javadoc improved
  LoginPanel, javadoc improved
  Configuration, javadoc improved, renamed a few properties, added constants for default numerical values
  Some javadoc improvements
  EntityEditPanel.createEntityFieldPanel() removed
  EntityUiUtil.createEntityFieldPanel() removed
  DateUtilTest, added a single test
  ExceptionDialog.close() re-added
  UiUtil.getDateFromUser() improved
  EmployeeEditPanel in empdept demo uses DateInputPanel with button
  Control.toString() implemented, returns name
  Item, single parameter constructor added
  ValueListInputProviderTest added
  TristateCheckBoxTest added
  EntityUiUtilTest added
  UiUtil.createFrame() removed
  Removed a few magic numbers
  PropertyImpl, finalization improvements
  ControlProvider, finalized some classes
  States, synchronized notifyObservers() methods
  AbstractEntityConnectionProvider, synchronized getConnectionInternal() and setConnection()
  Database.getDriverClassName() added
0.6.8
  UiUtil.selectValue() generified
  AbstractDatabase now implements getDriverClassName()
  Removed a couple of "true" and "false" hardcoded strings, replaced with Boolean.TRUE.toString() and Boolean.FALSE.toString() respectively
  EntityEditPanelTestUnit added
  EmployeeEditPanelTest added
  EntityApplicationPanelTestUnit added
  EmpDeptAppPanelTest added
  EntityApplicationPanel.startApplication() modified to allow
  EntityTestUnit.initialize() renamed to selectOrInsert(), only checks if primary key is available
  EntityTestUnit.initializeReferencedEntities() refactored
  UiUtil.displayInDialog() overloaded with a disposeOnEscape parameter
  EntityTestUnit.getRandomDouble() now rounds the result according to the property's maximum fraction digits
  AbstractDatabaseTest improved
  EntityTestUnit.getRandomString() now returns null instead of an empty string
  build.xml android jar contents fine tuned
  PropertyImpl.initializeValueFetcher() refactored
  States.StateGroupImpl, unnecessary call to Collections.synchronizedMap() on members, already properly synchronized
  EntityTablePanel.bindEvents(), bug fixed, header and table were not repainted on search state change, now listens to all individual search models
  Chinook demo, added not null constraints to some columns, unit tests failed randomly
  Property.ColumnValueConverter renamed to ValueConverter for consistency
  Property.ValueConverter and ValueFetcher moved to ColumnProperty
  EntityGeneratorModel improved
  Types.BIGINT partial support added
  ExceptionHandler.handleException() dialogParent parameter is now Window
  CancelException is now a RuntimeException descendant
  DefaultEntityEditModel, getModifiedEntities() added
  TableSelectionModel.TableModelProxy.vetoSelectionChange() added
  TableSelectionModel.TableModelProxy.getSize() renamed to getRowCount() for TableModel consistency
  FilteredTableModel extends TableSelectionModel.TableModelProxy
  DefaultTableSelectionModel uses TableModelProxy.vetoSelectionChange() to check if changes to selection should be vetoed
  AbstractFilteredTableModel.AbstractFilteredTableModelProxy removed
  ForeignKeySearchPanel constructor parameter includeToggleSearchEnabledButton added
  DefaultTableSelectionModelTest added
  EntityTestUnit.getRandomString() now returns a string of length maxLength if specified
  Configuration.SAVE_DEFAULT_USERNAME added
  UiUtil.displayInDialog() no longer available with both disposeOnEscape and closeEvent, since the latter now overrides the former
  UiUtil.chooseFileToSave() no remembers last directory used
  MethodControl now handles CancelException correctly
  DefaultExceptionHandler.unwrapException() now handles CancelException specifically
  DefaultEntityTableModel.applyColumnPreferences() bug fixed, column.setPreferredWith() now used instead of setWidth(), see javadoc
  EntityTablePanel and EntityTableSearchPanel modified to allow customizations of the latter
  Controls.toggleControl() based on a State added
  UiUtil.linkToEnabledState() modified to accept varargs
  State.StateGroup renamed to State.Group
  EventObserverImpl now uses WeakReference
  EventObserverImpl no longer uses WeakReference, forgot to think on this one
  EntityApplicationPanel.onExit() added
  EntityApplicationPanel.exit() calls the above method, allowing CancelException to propagate
  EntityApplicationPanel now generified in regard to the application model
  EntityApplicationPanel.createMenuBar() renamed to initializeMenuBar() and can be overridden
  DefaultForeignKeySearchModel no longer refreshes the combo box model on initialization
  ForeignKeySearchPanel now refreshes the underlying combo box model, if any
  EntityTableSearchPanel now lazily initializes the search panels
  FilteredTablePanel.ColumnSearchPanelProvider added, added as constructor parameter enabling lazy initialization of filter panels
  FilteredTablePanel bug fixed, reordering of columns broke filter panel display
  EntityEditModel.addEntitySetListener() now takes a generified listener, notified with the actual entity being set
  DefaultEntityModel, moved bindEvents code linking the edit model to the table model to DefaultEntityTableModel
  AbstractFilteredTableModel.setFilterCriteria() implemented
  DefaultExceptionHandler now unwraps RemoteException
  EntityTablePanel.setIncludePopupMenu() added
  EntityApplicationPanel.onExit() functionality replaced by addOnExitListener()
  FilteredTableModel.setColumns() added
  EntityTableModel.setColumns() added
  OracleDatabase.getErrorMessage() now handles multi-line error messages
  EntityLookupField now places the caret at index 0 when the selected entity has been set
  DefaultEntityEditModel.getDefaultEntity() now always returns an unmodified instance
  TableSelectionModel.TableModelProxy.addTableModelListener() added
  AbstractFilteredTableModel.removeItems() now uses removeItem(), so that it fires table row deleted, worse performance probably
  DefaultTableSelectionModel now listens to TableModelEvent.DELETE events and modifies the selection accordingly, bypassing the vetoSelectionChange functionality for obvious reasons
  DefaultEntityModel.initializeDetailModels() now protected
  EntityTestUnit no longer uses LoginPanel for getting unit test user credentials
  EntityPanel no longer explicitly sets the edit panel dialog location
  DefaultEntityTableModel now clears the selection when the associated edit model is cleared
  ValueChangeEvent.toString() added
  DefaultEntityEditModel.delete() now clears the model if the active entity was deleted
  EntityUiUtil.createTextArea() overloaded with enabledState
  Databases.getDatabaseStatistics() moved to DatabaseUtil along with associated classes
  DefaultFilteredComboBoxModel.acceptAllCriteria now static and final
  Util.NullFormat() privatized, NULL_FORMAT constant introduced
  Naming prefixes for State and Event instances removed (st, evt)
  FilteredTableModel.setColumns() moved to FilteredTableColumnModel
0.7.0 [incompatible api: server monitor can not connect to servers of earlier versions]
  Tomcat jdbc connection pool plugin added, lots of refactoring in common.db.pool and elsewhere
  EntityRESTService plugin added, some refactoring of related components
  ivy.xml reorganized and improved
  ValueMapImpl.setAs() improved, now fires value change events only after all values have been set
  EntityConnectionImpl.executeFunction/Procedure() does not check for transaction states before or after execution, leaving the responsibility in the hands of the programmer
  EntityConnectionLogger now package private, instantiated via EntityConnections.createLogger()
  DatabaseConnectionImpl.checkConnectionStatement field removed
  EntityImpl.entityInstance() changed into a constructor
  ValueMap.ToString interface removed, superfluous
  EntityPanel no longer constructs a default EntityTablePanel in case the one received via the constructor is null
  EntityTablePanel.tableDoubleClickedEvent was never fired
  DatabaseUtil.DatabaseStatistics moved back to Databases, now package protected, no need for a backwards incompatible change, barely cosmetic
  Control.doSetMnemonic() added protected
  ToggleControl overrides doSetMnemonic() in order to set the mnemonic in the associated button model as well
  Control.getMnemonic() now returns -1 in case no mnemonic is specified, instead of throwing a NullPointerException
  Configuration.DISPOSE_EDIT_DIALOG_ON_ESCAPE added, used in EntityPanel
  EntityTableCellRenderer.indicateSearch field added
  EntityTableCellRenderer.tooltipData field added
  ServerUtil.getServers() logging improved
  ServerUtil.initializeRegistry() no longer logs an error when no registry is found during startup
  Startup error message improved a bit
  EntityTableCellRenderer removed and EntityTableCellRenderers added
  EntityTableCellRenderers, renderer no longer uses hard coded search indicator colors
  EntityTableCellRenderers, rendering of boolean columns fixed with setOpaque(true) (java bug workaround)
  EntityTablePanel.initializeTableCellRenderer() now takes a Property parameter
  PropertySummaryModel.locked field added, DefaultPropertySummaryModel disables the changing of summary type if locked
  PropertySummaryPanel only displays popup menu if the model is not locked
  PropertySummaryModel.getValueProvider() added
  PropertySummaryModel.PropertyValueProvider.useValueSubset field added, implemented in DefaultPropertySummaryModel
  EntityUiUtil.initializeTextField() now sets the allowed range for numerical properties with min and max defined
  EntityEditPanel now shows the entity menu on ctrl-alt-V
  EntityEditPanel now shows the entity menu on alt-double click
  Controls.eventControl() added
  EntityUiUtil.showEntityMenu() now displays validity info
  EntityUiUtil.showEntityMenu() now displays original values
  DatabaseConnectionImpl renamed to DefaultDatabaseConnection
  EntityConnectionImpl renamed to DefaultEntityConnection
  EntityDefinition.staticData field added
  EntityLookupField.lookupEnabledState added as a hack to prevent the triggering of a lookup by closing the empty result message
  EntityTableCellRenderers.DefaultEntityTableCellRenderer made public
  EntityUiUtil.showEntityMenu() improved
  EntityTablePanel.EntityTableCellRenderer moved up to
  AbstractRemoteServer.disconnect() minor optimization
  Impl postfix exchanged for Default prefix for consistency
  Events.DefaultEventObserverImpl only fires when it has listeners
  Entity and Key implementations renamed back to Impl, for serializations sake man
  ValueMapEditModel.validate(final Collection<? extends ValueMap<K, V>> valueMaps) added
  DefaultEntityEditModel implements the above
  DefaultEntityEditModel.validate(Entity) added protected
  EntityUiUtil.populateForeignKeyMenu() improved
  EntityImpl.getValue() now returns null for non-loaded foreign key values while getForeignKeyValue() returns a empty entity
  EntityImpl.isValueNull() contract now respected for foreign key properties
  Entities.Validator takes advantage of the above, improved
  EntityImpl.validateValue() optimized, no longer initializes primary keys for entities during cyclical reference check
  Property.ColumnProperty.ValueConverter and ValueFetcher moved to common.db
  EntityTableCellRenderers, some factory methods made public
  EntityLookupModel.resultComparator field added
  EntityEditPanelTestUnit and EntityApplicationPanelTestUnit moved to tools.testing
  EntityConnectionServer.doConnect() bug fixed, clientInfo.getUser() used when getDatabaseUser() was required
  DefaultEntityDefinition.setSearchPropertyIDs() now handles invalid properties
  Util.FILE_SEPARATOR added
0.8.0 [incompatible api: EventListener/Observer]
  AbstractFilteredTableModel, access to visibleItems is now synchronized
  AbstractFilteredTableModel, addItems() refactored
  Property.ValueListProperty no longer generic, it gave only an illusion of type safety
  EventInfoListener split from EventListener
  EventInfoObserver split from EventObserver
  EventAdapter removed
  ValueChangeListener removed
  ValueChangeEvent replaced with ValueChange interface and ValueChanges factory class
  EventInfoObserver merged into EventObserver
  MaximumMatch, showPopupOnMatch parameter added, default false
  UiUtil.displayInDialog() overloaded
  DefaultEntityEditModel bug fixed, update() called validator.validate() directly, instead of going through it's own overridable validate()
  State.getStateChangeObserver() renamed to getChangeObserver()
  Value.getChangeEvent() renamed to getChangeObserver()
  Java 7 syntax update
  Java 7 try with resources
  EntityConnectionServerTest, web server now uses port 8181 to prevent conflicts with server running on the same machine
  Value.getChangeObserver() generified
  UiValues refactored
  FilteredComboBoxModel generified further with java 7
  FilteredComboBoxModel nullValueString replaced with T nullValue
  EntityUtil.createToStringEntity() added
0.8.1
  FilteredComboBoxModel.setContents() signature modified slightly
  ItemComboBoxModel refactored
  DefaultPropertyComboBox generified
  EntityUiUtil.selectEntities() improved/bug fixed, now uses EntityPanel so keyboard shortcuts are enabled
  UiUtil.getDateFromUser() bug fixed, now returns null on cancel
  DefaultEntityComboBoxModel.translateSelectionItem() bug fixed, JComboBox uses getEditor().getValue() when setting the selected value in the model
  DefaultFilteredComboBoxModel.setContents() refactored to minimize the number of calls to fireContentsChanged()
  Events, bug fixed, listeners now LinkedHashMap for consistent iteration order
  Configuration.CENTER_APPLICATION_DIALOGS added, used when showing the edit panel dialog in EntityPanel
0.8.2
  TableSelectionModel.TableModelProxy.vetoSelectionChange() changed to allowSelectionChange()
  Some unit test improvements
  Configuration.ALLOW_REDEFINE_ENTITY added, used in Entities, default false
  EntityTableModel.addEntitiesOnInsert attribute added, implemented and used in DefaultEntityTableModel
  EntityTableModel.removeItemsOnDelete attribute renamed to removeEntitiesOnDelete
  Recent ToggleControl changes undone, buggy stuff
  DateInputPanel, bug fixed, did not handle UiUtil.getDateFromUser() returning null on cancel
  MaximumMatch, enabled normalization of strings before matching
  ControlsTest.tristateToggleControl() fixed
0.8.3
  UiUtil.displayInDialog(), modality functionality improved, well, changed at least
  EntityEditPanel, SAVE control code added, used by default instead of INSERT (which actually performed a save)
  Configuration.WARN_ABOUT_UNSAVED_DATA added, default false, used in EntityApplicationPanel.exit()
  EntityApplicationModel.containsUnsavedData() added to accommodate the above
  Code cleanup, some generification, RuntimeException replaced by IllegalArgumentException where applicable
  Some generification of Events
  FilteredTableColumnModel.containsColumn() added
  DefaultEntityTableModel, loading of property preferences for previously non-existing properties no longer crashes the application
  DefaultEntityTableModel, removed org.json.JSONException from signatures to remove a direct dependency to JSON
  UiUtil.linkToEnabledState() overloaded with includeFocusable parameter
0.8.4
  Usages of ValueChange re-generified throughout
  EntityPanel.disposeEditDialogOnEscape attribute added, defaults to the value of Configuration.DISPOSE_EDIT_DIALOG_ON_ESCAPE
  EntityUiUtil.showEntityMenu() improved, now indicates the modified state of properties along with the original value
  DefaultEntityApplicationModelTest.containsUnsavedData() added
  EntityTablePanel, key event to show entity values menu is now CTRL-ALT-V, like in EntityEditPanel
  EntityPanel.setEditPanelState() bug fixed, now simply returns when the state being set is the same as the current state, instead of making a mess of it
  EntityPanel, bug introduced by the change above fixed
  EntityUtil.createToStringEntity() simplified
  Removed a bunch of redundant /** {@inheritDoc} */
  Removed redundant throws CancelException since it is unchecked, left in javadoc though
  EntityLoadTestModel constructor fixed to remove possible heap pollution
  EntityPanel, yet another edit panel state initialization bug fixed
  EntityPanel, editControlPanel made final and initialized during construction
  H2Database, in memory database initialization improved
  ValueLinkValidators, validBackgroundColor parameter removed, now uses the UI default
  ValueLinkValidators, bug fix, the above change did not consider the enabled/disabled state of the component
  AbstractEntityConnectionProvider.scheduleValidityCheck attribute added, constructor overloaded
  DefaultEntityConnection, bug fixed, setForeignKeyValues() incorrectly handled the case when the referenced entity was not available (deleted or filtered out of an underlying view), it simply set the reference to null, whereas now it populates it with an empty entity wrapping the referenced primary key
0.8.5
  CriteriaSet constructor refactored to avoid unchecked array creation warnings
  UiUtil.createFormattedField() now uses a MaskFormatter extension which preserves selection and caret position on focus gained
  DefaultEntityConnection.update() bug fixed, did not handle null values in the where condition, "x = null" used instead of the correct "x is null", solved by using EntityCriteria which handles this case correctly
  EntityUtil.hashBy...() functions return value made more specific in order to convey the fact that they respect the iteration order of the collection
  ValueLinks.dateValueLink(), dateValue(), integerValue() and doubleValue(), immediateUpdate parameter added
  EntityUiUtil.createTextField() now also propagates the immediateUpdate parameter in case of date, int and double based values, see above
  DefaultEntityTableModel.DefaultEntityTableSortModel.initializeColumnComparator() now uses the comparator associated with the underlying entity for columns based on foreign key properties
  UiValues.TextUiValue fires change event on focus lost only if the focus event isn't temporary
  FilteredTablePanelTest, some additions
  FilteredTablePanel, minor refactoring to accommodate the above
  UiUtilTest, some additions
  DefaultEntityConnection.selectRowCount() bug fixed, did not work correctly for entities defined with a select query
  DefaultEntityConnectionTest.rowCount() improved due to the above
  UtilTest, some additions
  Unit test coverage improved
  Javadoc improvements
  AbstractFilteredTableModel.filterContents() bug fixed, it now resets the filtering if filterCriteria is set to null
  Unit test coverage improved
  UiUtil.selectFilesOrDirectories() added
  UiUtil.selectFilesOrDirectories() bug fixed
  Util.getGetMethod() and getSetMethod() overloaded with Class parameter
  Util.unwrapAndLog(), fixed possible heap pollution
  DefaultRemoteEntityConnection, removed redundant throws clauses
  EntityUtil.EntityBeanMapper improved, exceptions thrown earlier in case of invalid methods
  EntityImpl, minor refactoring
  FilteredTableColumnModel.getFilterModel() renamed to getColumnFilterModel()
  EntityEditModel.refreshEntity() added, tested
  EntityCriteriaUtil, some refactoring of getConditionString()
  Code cleanup
0.8.6
  Demo deployment updated according to latest java security requirements
  EntityJSONParserTest.entity() improved, no longer depends on the order of values (failed in Java 8)
  DefaultEntityComboBoxModel no longer overrides vetoSelectionChange() with a final method
  DefaultFilteredComboBoxModel.vetoSelectionChange() renamed to allowSelectionChange() for consistency
  LoginProxy.doLogout() added
  EntityConnectionProviders.createConnectionProvider() overloaded with clientID parameter
  Configuration.SERVER_CLIENT_CONNECTION_TIMEOUT added, used in EntityConnectionServer
  EntityConnectionServerAdminImpl, minor refactoring
  Configuration bug fixed, now initializes SERVER_CLIENT_CONNECTION_TIMEOUT correctly
  AbstractTableSearchModel.initializeColumnComparator(), bug fixed, should use lexical comparator for Object types
  UiUtil.runWithProgressBar() added
  DefaultDatabaseConnection.disconnect() now uses isValid() instead of !con.isClosed() to check if connection is alive
  EntityUtil.getPropertyValues() re-generified
  EntityUtilTest.isPrimaryKeyModified() added
  Configuration.CLIENT_SCHEDULE_CONNECTION_VALIDATION renamed to CONNECTION_SCHEDULE_VALIDATION, constant changed
  LocalEntityConnectionProvider constructor overloaded with a scheduleValidityCheck parameter
  RemoteEntityConnectionProvider, some refactoring due to the above
  DefaultDatabaseConnection.disconnect(), isValid() call moved within try clause
  DefaultDatabaseConnection.isValid() now uses a hardcoded (1 sec) timeout during validity check instead of 0 (meaning no timeout)
  ServerException.LoginException is no longer final
  ServerException.AuthenticationException added
  EntityConnectionServerTest, no longer uses the default server/registry ports
  MaximumMatch, bug fixed, equalStartLength() did not normalize the strings before matching
  DefaultDatabaseConnection.disconnect() change reverted, calling isValid() is an overkill (especially with a query) when we are about to discard the connection, so we're back to !con.isClosed()
  Entities.Validator no longer validates read-only values
  DefaultDenormalizedViewProperty bug fixed, is now read-only, along with MirrorProperty
  EntityTableCellRenderers refactored
  DefaultDatabaseConnection constructor overloaded with validityCheckTimeout parameter, added to factory classes as well
  Configuration.CONNECTION_VALIDITY_CHECK_TIMEOUT added, default 0 seconds (no timeout)
  DatabaseUtil.validateWithQuery() now guards against databases that have not implemented setQueryTimeout()
  DefaultDatabaseConnection constructor throws exception if the connection parameter is closed
  Configuration.USE_OPTIMISTIC_LOCKING default value changed to true
  DefaultEntityConnection.lockAndCheckForUpdate() bug fixed, now excludes Types.BLOB properties from the modified check
  ColumnSearchPanel.initializeSearchTypeComboBox() bug fixed, SearchType was read-only due to incorrect type parameter in a call to ValueLinks.selectedItemValueLink()
  ItemComboBoxModel, some refactoring
0.8.7
  EntityTableCellRenderer.BooleanRenderer bug fixed (from last refactoring), BooleanRenderer is now aligned in center
  EntityTableSearchModel.addSearchStateListener(), removeSearchStateListener() and isSearchEnabled() added
  DefaultEntityTableModel.getOrderByClause() added
  Sonar run
  Entity, redundant getFormattedValue() removed
  EntityImpl, bug fixed, setValue() set the primary key to null to early, before validation had been performed
  Configuration.SERVER_MONITOR_UPDATE_RATE added
  EntityApplicationPanel.getFrameTitle() signature change, now takes a EntityConnectionProvider parameter instead of User
  EntityTablePanel.getRefreshControl() and getClearControl() made public
0.8.8 [incompatible api: Property]
  Property.PrimaryKeyProperty removed
  Property.ColumnProperty, get/setPrimaryKeyIndex() and isPrimaryKeyProperty() added
0.8.9
  EntityCriteriaUtil, possible heap pollution due to generic vararg parameters fixed
  EntityImpl.KeyImpl no longer relies on Integer.MAX_VALUE to a represent null value
  EntityLookupModel.setToStringProvider() added
  DefaultEntityDefinition.checkForPrimaryKey() renamed to checkPrimaryKey(), now checks if the same index is used twice
  DefaultEntityEditModel, minor refactoring
  EntityCriteriaUtil, bugs fixed, methods overloaded with a "Collection values" parameter removed, all other methods now handle a Collection parameter
  EntityCriteriaUtil, bug fixed, ForeignKeyCriteria refactored
0.9.0
  DefaultEntityConnection no longer extends DefaultDatabaseConnection, composition used instead
  DefaultEntityConnection now synchronizes on it's internal connection instead of itself
  DatabaseConnection.Procedure and Function generified to accommodate the above inheritance change
  HostMonitor bug fixed, now removes admin server name prefix before checking if the server is already open
  Sonar run
  LoginPanel, refactored, static methods removed
  Sonar run, magic numbers
  EntityConnectionServer, some refactoring
  Util.resolveTrustStore() renamed to resolveTrustStoreFromClasspath()
  EntityDataUtilTest added
  Unit test coverage improved
  Configuration.REGISTRY_PORT_NUMBER renamed to Configuration.REGISTRY_PORT
  HostMonitor bug fixed, only listed servers named RemoteServer.SERVER_ADMIN_PREFIX + Configuration.SERVER_NAME_PREFIX
  DefaultFilteredComboBoxModel.getAllItems() no longer includes the null value
  EntityUtil.setNull() added
  DefaultEntityModel bug fixed, no longer creates an edit model if the supplied table model contains one
  FilteredComboBoxModel.isSelectionEmpty() added, implemented in DefaultFilteredComboBoxModel, tested
  UiUtil.getDateFromUser() dialog using JCalendar now responds to enter (OK) and escape (Cancel) keys
  UiUtil.runWithProgressBar() refactored and overloaded with a cancelAction, now quits silently on CancelException
  DefaultRemoteEntityConnection now synchronizes on it's internal connection proxy instead of itself
  AbstractRemoteServer, connections synchronization improved
  AbstractRemoteServer, disconnect() reduced synchronization time
  AbstractRemoteServer, connect() getLoginProxy() moved out of synchronized block
  AbstractRemoteServer, EntityConnectionServer added logging for connect/disconnect
  DefaultRemoteEntityConnection.isLocalConnectionValid() added
  EntityConnectionServer, maintenance thread now keeps local connections alive via isLocalConnectionValid() along with disconnecting idle ones
  EntityServerMonitorTest added some tests
  UiUtil.runWithProgressBar() overloaded with a northPanel parameter
  DefaultExceptionHandlerTest added
  EntityUiUtilTest improved
  EntityUiUtil.createTristateCheckBox() bug fixed
  EntityUiUtilTest fixed broken tests
  DefaultEntityConnection, redundant synchronized instance removed
  MethodLogger, minor refactoring
  Sonar run, some minor improvements
  MethodLogger serialization bug introduced during refactoring fixed
  final keyword added to catch clauses, quite the overkill but gets rid of annoying warnings in IntelliJ 13
  EntityTableModel.getTableDataAsDelimitedString() added
  Databases.setInsertHint(), getInsertHint() added, used in DefaultEntityConnection.insert()
  EntityGeneratorModel no longer uses Properties.primaryKeyProperty() but rather Properties.columnProperty() along with a call to setPrimaryKeyIndex()
  DefaultEntityEditModel.getModifiedObserver() no longer final
  Entity.getModifiedState() renamed to getModifiedObserver() for consistency
0.9.1
  Entity.isNull() only returns null if all primary key values are null, so primary keys can now contain null values
  Util.collate() problematic wildcard removed
  logback and slf4j latest versions used
  logback-core added as compile time dependency
  EntityPanelProvider.equals() improved, now takes the underlying EntityModel class into account
  EntityEditModel.getEntityNewObserver() added
  DefaultEntityEditModel.isEntityNew() is no longer final
  EntityEditPanel, update and delete actions enabled states now depend on the entityNewObserver provided by the underlying edit model
  EntityPanel, bug fixed, navigation was broken when it came to detail panels, always selected first available panel
  EntityPanel, navigation and panel state constants changed to enums
  EntityEditPanel, confirm type constants changed to enum
  EntityApplicationPanel, now saves preferences for support panels on dialog close
  EntityEditModel.UpdateEvent now contains the updated entities mapped to their respective original primary keys
  DefaultEntityTableModel, uses the above information to refresh the relevant rows after an update has been performed
  EntityPanel.setActiveDetailPanel() bug fixed, introduced in the navigation bug fix above, selecting a detail panel by tab did not work anymore
  DefaultEntityEditModel.delete() bug fixed, now uses getEntity().getOriginalCopy() so that any non-persistent changes to the primary key do not interfere with the delete
  ServerMonitor, connection history tab added
  ServerMonitor, the above improved a bit
  FilteredTablePanel.SortableHeaderRenderer bug fixed, now aligns the text correctly when sorting icon is visible
  ServerMonitor, ClientInstanceMonitorPanel, log JTextArea no longer editable
  EntityUtil.hashByPropertyValue() map key generified
0.9.2 [incompatible api: EntityCriteria, EntityDefinition, RemoteServer]
  EntityCriteria, added support for limit/offset
  EntityDefinition, added having clause
  ClientUserMonitor now logs errors occurring during the refresh of user history
  build.xml, bug fixed, jminor-server-monitor.jar target did not include EntityConnectionServerAdminImpl_Stub.class
  build.xml, removed redundant domain package from jminor-server-monitor.jar
  build.xml, minor changes to deploy_server_monitor and deploy_generator targets
  ClientUserMonitor refactoring
  FilteredTableModel.sortContents() added, implemented in AbstractFilteredTableModel
  DefaultEntityConnection refactored, redundant select during update removed
  DefaultDatabaseConnection no longer validates connections received via constructor parameter
  build.xml, bug fixed, jminor-client.jar target did not include DefaultRemoteEntityConnection.class
  EntityLoadTestModel disables connection validation
  TomcatConnectionPoolProvider now sets testOnBorrow to true since JMinor no longer validates connections coming from a connection pool
  TableSortModel.getColumnClass() added
  AbstractTableSortModel.getColumnClass() removed
  AbstractFilteredTableModel now overrides getColumnClass(), delegating to the sort model
  DefaultEntityTableModel.getColumnClass() removed
  FilteredTablePanel now contains a base panel which contains the JScrollPane containing the JTable
  EntityTablePanel.layoutPanel() simplified
  ClientUserMonitor and ClientUserMonitorPanel refactoring
  DefaultEntityConnection.getSelectSQL() refactored
  Copyright updated
  ClientUserMonitor bug fixed, user history table model did not sort correctly by 'last seen'
  EntityServerMonitorPanel now displays startup errors instead of simply exiting
  DefaultDatabaseConnection is no longer extended, made final
  DatabaseConnection.query() removed
  DatabaseConnection.getMethodLogger() added
  DefaultDatabaseConnection.query() moved to DatabaseUtil
  UiUtil.setPreferredWidth() added, tested
  EntityTestUnit.initializeReferencedEntities() now short circuits the initialization of circular references
  World demo application added
  build.xml deploy_demos refactored, renamed to deploy_demo_apps
  MaximumMatch, now selects first item when the user backspaces beyond the first character
  Version added
  Util.getVersion() and getVersionAndBuildNumber() renamed with String suffix
  Util.getVersion() added
  RemoteServer.getServerVersion() now returns a Version object instead of a String
  DefaultEntityLookupModel now includes configuration settings for each lookup property
  DefaultEntityConnection.executePreparedSelect(), minor refactoring of parameters
  RemoteEntityConnectionProvider constructor overloaded with scheduleValidityCheck parameter, for consistency
  AbstractEntityConnectionProvider implements isConnectionValid() and disconnect(), abstract doDisconnect() added
  RemoteEntityConnectionProvider and LocalEntityConnectionProvider refactored due to the above
  EntityConnectionProvider.getHostName() renamed to getServerHostName()
  RemoteServer.ServerInfo added
  RemoteServer.getServerInfo() added, getServerName(), getServerPort(), getServerVersion() and getServerPort() removed
  AbstractRemoteServer implements the above
  ServerMonitor modified according to the above changes
  AbstractEntityConnectionProvider.disconnect() now synchronized
  RemoteServer.connect(clientInfo) removed
  Sonar run, some minor refactoring
  Refactoring to reduce cyclomatic complexity
  EntityEditModel.isLookupAllowed(property) added
  DefaultEntityEditModel, property debug output refactored
  ColumnSearchPanel and PropertySearchPanel refactored to reduce cyclomatic complexity
  ValueLinks, removed superfluous generics
  EntityLookupField.initializeUI(), bug fixed, now handles the case when no search properties are defined for the underlying entity
  ClientUserMonitor, ClientMonitor, user and client type lists sorted
  ConnectionInfo and ClientUtil added
  ClientInfo is now an interface, implemented in ServerUtil.DefaultClientInfo
  RemoteServer.connect() now takes a ConnectionInfo as parameter
  Some refactoring due to the above
  Util.getVersionString() bug fixed, cut patch number from version
  EntityConnectionServer constructor error handling improved
  RemoteServer renamed to Server
  EntityTablePanel.initializeUI() bug fixed, NullPointerException when summary panel was not available
  EntityLookupField.SettingsPanel.initializeUI() bug fixed, CardLayout used
  EntityDataUtil moved to from tools to db
  EntityDataUtil renamed to EntityConnectionUtil
  EntityApplicationPanel.startApplications() bug fixed, did not handle exceptions originating from initializeConnectionProvider()
  FilteredTablePanel.selectTableColumns(), added select all/none buttons
  FilteredTablePanel, moved column resizing functionality from EntityTablePanel
  FilteredTablePanel, SHIFT-CTR-[left/right arrow] moves the column
  EntityEditModel.containsUnsavedData(), addConfirmEntitySetAllowedObserver() and removeConfirmEntitySetAllowedObserver()
  EntityEditPanel now warns if entity is about to be set when it contains unsaved data
0.9.3
  States.DefaultStateObserver, lazy initialization of Events
  States.DefaultAggregateState refactored to accommodate correct event firing, see StatesTest.aggregateStateEvents()
  Unit test usage of clumsy collection counting method replaced by using AtomicInteger instead
  JasperReports library updated to 6.0.0
  iText pdf library added to client runtime classpath for pdf export
  EntityImpl.KeyImpl renamed to DefaultKey for consistency
  EntityImpl renamed to DefaultEntity for consistency
  Property.setColumnName() added
  build.xml run_rmi_registry target removed
  EntityConnectionServerAdminImpl renamed to DefaultEntityConnectionServerAdmin for consistency
  build.xml updated according to the above
  distribution jars restructured, jminor-db-provider.jar split from jminor-client.jar and jminor-db.jar, jminor-server.jar no longer contains db, depends on jminor-db.jar instead, no more jar redundancies
  framework.db.local and framework.db.remote added, substantial refactoring involved
  distribution jars restructured further, jminor-db-provider.jar removed, jminor-db-core.jar, jminor-db-local.jar and jminor-db-remote.jar added
  DefaultEntityConnection renamed to LocalEntityConnection
  EntityConnections renamed to LocalEntityConnections
  distribution jars restructure even more, jminor-common.jar split into jminor-common-model.jar and jminor-common-ui.jar
  DatabaseConnection.setConnection() added
  LocalEntityConnections.setConnection() removed
  jminor-client-bundle.jar added to distribution
  resources/publish added, contains module definitions for publishing artifacts
  jminor-client-bundle added as publishing artifact
  UiUtil.selectValues() added
  Values, some minor changes in terminology
  Value.getChangeObserver() renamed to getObserver()
  EntityConnectionServer only runs connection maintenance when connections exist
  EntityConnectionServer.AuxiliaryServer moved to common.server.Server
  EntityRestServer no longer depends on framework server
  Util.getVersion() now caches the version object
  Util.VERSION is now final
  DefaultColumnProperty.setColumnName() bug fixed, did not set the value
  DefaultColumnProperty primitive value fetchers now only call ResultSet.wasNull() if the actual value warrants it
  DefaultDatabaseConnection, LocalEntityConnection, DatabaseUtil, DefaultRemoteEntityConnection, logAccess() and logExit() now return right away if the method logger is not enabled
  MethodLogger always clears log on enabled state change
  LocalEntityConnection bug fixed, select for update did not use selectTableName
  DefaultEntity.validateType() now validates entity types, added a couple of related tests
  Values.DefaultValue bug fixed, did not propagate the value when firing a change event
  DefaultEntityDefinition.QueriedKeyGenerator bug fixed, caching of key query was problematic when working with different underlying databases
  ClientMonitorPanel, can now disconnect multiple clients at a time
  EntityLookupField.performLookup() bug fixed, did not handle null search string value
  EntityLookupField.performLookup() bug fixed, did not update colors after lookup
  EntityLookupField, constructor bug fixed, searchHint was initialized to early, must be done after the call to linkToModel() for the hint to show up right away
  EntityPanel.activatePanel() bug fixed, initial focus always went to the table instead of the edit panel when using keyboard navigation
  User, cached hashCode removed, unnecessary optimization
  EntityLookupField, constructor bug fixed, searchHint initialization moved further back
  EntityUtil.getModifiedProperty() and getModifiedExceptionMessage() added
  LocalEntityConnection.lockAndCheckForUpdate() and EntityEditPanel.handleException() now use the above
  DefaultEntityEditModel.getDefaultEntity() bug fixed, did not handle transient properties
  Configuration.FILTER_ON_MASTER_INSERT added
  EntityModel.get/setFilterOnMasterInsert() added
  DefaultEntityModel implements the above, tested
  Editing of long values implemented, LongField added along with LongInputProvider
  MaximumMatch bug fixed, no longer disregards key events if modifiers are present (CTRL-BACKSPACE beyond first character now works correctly)
  EntityUiUtil.createEntityField() improved
  DefaultEntityEditModel bug fixed, setEntity() was used during update() and delete(), which triggered isSetEntityAllowed(), doSetEntity() added for internal use
  IntelliJ analyzis run, Arrays.asList() with single items replaced with Collections.singletonList()
  EntityUtil.getModifiedExceptionMessage() bug fixed, did not handle deleted entities
  EntityUtil.getModifiedExceptionMessage() bug fixed, did not show the original value
  DefaultEntityEditModel.insert() nows sets the inserted entity instead of just the primary key values
  DefaultEntityEditModel.insert(List<Entities>) bug fixed, did not return silently on receiving an empty list, fired afterInsertEvent
  DefaultEntityEditModel, protected methods for firing before and after insert/update/delete events added
  ControlProvider.ButtonControlIterator now uses JLabel for separator
  AutoCompletion added, MaximumMatch now extends CompletionDocument
  Sonar/IntelliJ analysis
  EntityEditPanel now sets the actual DateInputPanel as the property component
  DefaultEntityEditModel, DefaultInsertEvent, DefaultUpdateEvent and DefaultDeleteEvent now protected instead of private
  EntityEditModel, before insert, update and delete listeners now provide the same info as after listeners
  DefaultEntityEditModel.doDelete() now returns the deleted entities, after delete event now contains the actual entities returned by doDelete()
  Sonar run
  EntityUtil.getModifiedExceptionMessage() entity caption added to error message for clarification
  DefaultEntityComboBoxModel, foreign key filter model is now strict, no longer shows all items if foreign key value is null or no filter values are specified
  Reduced unit test dependencies on demos
  Unit test dependencies on demos removed, build.xml updated accordingly
  Ant build bootstrapped correctly, no need for util libraries anymore (ivy, jacoco-ant etc.)
  Stubs removed from dist jars
  Project cleanup, keystore and truststore removed, added to ant build
0.9.4
  EntityConnection.selectAll() removed
  EntityCriteria.getWhereClause(includeWhereKeyword) removed
  EntityCriteriaUtil.PropertyCriteria.getValueCount() inefficiency removed
  DefaultKey.equals(), some minor optimizations
  Logback dependency updated from 1.1.2 to 1.1.3
  jcommon library added to build.core configuration, does not compile on java > 7 without it
  EntityConnectionServer now handles Throwable on startup and exits gracefully
  Entity.Definition.hasLinkedProperties() added
  DefualtEntity.handleValueChangedEventInitialized() skips linking values if no linked properties exist
  DefaultProperty.isDouble() result is cached, very frequently used
  DefaultValueMap, minor refactoring
  DefaultEntityEditModel.prepareNewValue() removed
  DefaultEntityComboBoxModel.translateSelectionItem() finalized
  Configuration.PROPERTY_DEBUG_OUTPUT removed
  DefaultEntityEditModel no longer provides property debug output
  EntityTablePanel.initialize() and setupControls() removed (setupControlsInternal then renamed to setupControls)
  Fixed a couple of Sonar issues
  SteppedComboBox unused constructor removed
  run_entity_generator target added to build.xml
  EntityGeneratorModel, bug fixed, multiple entity definition output was wrong
  EntityUiUtil.selectEntities() moved to EntityTablePanel, createLookupFieldPanel() removed, initializeViewImageAction() moved to EntityTablePanel, renamed getViewImageControl(), createNewEntityAction() moved to EntityEditPanel, createEntityComboBoxPanel() and createEntityLookupFieldPanel() removed and createEastButtonPanel() made public
  EntityEditPanel.createNewEntityAction() renamed to createEditPanelAction()
  ConnectionPools, removed illegal depenedency on Configuration, functionality moved to EntityConnectionServer
  FrameworkMessages, Messages cleanup of unused strings
  Column.getSelectIndex() moved to Property.ColumnProperty
  Minor cleanup, removed unused methods
  Mess fixed, parameterless constructors re-added to Database implementations
  AbstractTableColumnSyncPanel constructor now takes FilteredTableColumnModel as parameter
  Javadoc errors and warnings fixed
  DefaultEntityConnectionServerAdmin no longer sets the RMISecurityManager (deprecated)
  ivy.xml, redundant transitive="false" removed from dependencies
  EntityConnectionServer.startWebServer() now waits for Jetty startup to complete before returning
  EntityConnectionServerTest.testREST() added
  Database.isAuthenticationException(SQLException) added, implemented for H2 and Oracle
  AuthenticationException added
  AbstractDatabase.createConnection() throws AuthenticationException when possible
  EntityUtil.isEntityNew() added
  EntityRESTService now uses the above
  EntityConnectionServer.doConnect() now handles AuthenticationException
  Ivy configuration build.tests added, configurations improved, build configured accordingly
  PostreSQLDatabase.isAuthenticationException() implemented
  Removed references to chinook entity definitions from unit tests
  Fixed a few Sonar issues
  Minor performance optimization in EntityResultPacker
  Server client logging no longer on by default
  Server.AuxiliaryServer.start() and stop() renamed to startServer() and stopServer()
  EntityRESTServer updated according with the above
  DefaultEntityConnectionServerAdmin.main() restart option added
  ServerUtil.getServer() error handling and logging improved
  ClientUserMonitor, user history improved a bit
  Jetty dependency updated to 9.3.2.v20150730 and Jersey to 1.19
  HttpClient library updated to 4.5
  EntityConnectionServerTest and EmpDeptRESTLoadTest updated according to HttpClient update (deprecations)
  Tomcat jdbc dependency updated to 8.0.24
  Unit tests refactored and improved a bit
  ExceptionDialog moved to UiUtil and privatized
  DateInputPanel bug fixed, focus listener only added when button was present
  EntityDefinition.getResultPacker() and Property.ColumnProperty.getResultPacker() added
  H2Database.runScript() updated according to H2 api changes
  H2Database, in memory database initialization moved from static initializer to constructor
  TextInputPanel now JTextField based
  HostMonitor and HostMonitorPanel, improved server discovery
  EntityConnectionServerAdmin.restart() added
  ServerMonitor, ServerMonitorPanel, restart action added
  DefaultEntityConnectionServerAdmin.adminInstance removed
  DefaultEntityConnectionServerAdmin.startServer() refactored
  NavigableImagePanel moved to framework.plugins.imagepanel
  H2Database bug fixed, no longer tries to initialize a file based embedded database if the database file exists
  H2Database, database url bug fixed
  EntityApplicationPanel.getUser() now handles null or empty framCaption
  EntityConnectionUtil.copyEntities() bug fixed, did not clear primary key values correctly before insert
  IncrementKeyGenerator now behaves like the SequenceGenerator, skips the id generation if a value is present
  EntityConnection.selectPropertyValues() replaced by selectValues()
0.9.5 [incompatible api: CriteriaSet, SimpleCriteria]
  CriteriaSet changed to an interface, CriteriaUtil.DefaultCriteriaSet added, SimpleCriteria moved to CriteriaUtil.StringCriteria, factory methods added to CriteriaUtil
  EntityConnectionProviders.createConnectionProvider() renamed to connectionProvider()
  EntityConnectionProviders.connectionProvider(EntityConnection) added
  EntityTablePanel.createStaticEntityTablePanel(), resulting panel is now read-only and without popup menu and south panel
  CriteriaUtil.DefaultStringCriteria.writeObject() and readObject() implemented, tested
  UiUtil, component returned from configuration methods
  PropertySummaryModel moved to common.table package and renamed ColumnSummaryModel, implementation as well
  EntityTableModel.SummaryValueProvider moved to AbstractFilteredTableModel.DefaultColumnValueProvider
  EntityTablePanel.summaryPanel moved to FilteredTablePanel
  H2Database.initializeDatabase() bug fixed, only tries to initialize an embedded database if it is required
0.9.6
  common.swing.model and common.swing.ui packages added, common.ui and common.model refactored accordingly
  org.jminor.framework.client package remaned to swing
  org.jminor.framework.swing moved to org.jminor.swing.framework and org.jminor.common.swing moved to org.jminor.swing.common
  Refactoring in order to move usages of Configuration out of core classes
  Source directory structure improved, now follows maven/gradle best practices
  Plugin and demo sources moved, unit test dependencies fixed, build file refactored
  Reorganized demo sql scripts and reports
  EntityUtil.hash... renamed to map...
  LocalEntityConnection.delete(keys) improved
  JasperReportsWrapper now tries to load reports from classpath if the file is not found in the file system
  Demos split up into separate directories
  Plugins split up into separate directories
  Demos now built into their own build directories
  EntityCriteriaUtil.getWhereClause() now caches the result
  DefaultEntity.DefaultKey.setHashCode() removed awkward if condition
  NextReports plugin added
  NextReports plugin improved
  Plugins are now indipendent modules
  Demos are now independent modules
  SwingMessages added, initialized in LoginPanel, this feels like a hack
  Build file improvements
0.9.7
  REST plugin jersey dependencies updated, jersey bundle 2.22
  SwingConfiguration extracted from Configuration
  EntityTestUnit moved from framework.tools.testing to framework.testing
  PropertySearchModel, EntityTableSearchModel and related classes and methods renamed to PropertyCriteriaModel and EntityTableCriteriaModel
  ColumnCriteriaModel, redundant setUpper/LowerBound() methods removed
  Build files restructured
  Project structure improved, core added
  JavaFX module added
  DefaultEntityModel, setting the foreign key value functionality moved from initialize() to handleInitialization(), which can be overridden
  H2Database.initializeDatabase() bug fixed, did not work with Windows paths, since \ is an escape character in the INIT clause
  ColumnCriteriaPanel and PropertyCriteriaPanel bug fixed, value binding failed due to the above removal of "redundant" methods from ColumnCriteriaModel
  ColumnCriteriaModel, DefaultColumnCriteriaModel, upperBound and lowerBound are now based on Value
  AbstractServer.DefaultServerInfo bug fixed, getServerVersion() returned client framework version, not the version of the remote server, this change seems to be serialization safe
  JavaFX functionality added along with a small demo
  DefaultValueMapEditModel refactored from DefaultEntityEditModel
  ColumnCriteriaModel and DefaultColumnCriteriaModel moved from org.jminor.swing.common.model.table to org.jminor.common.table, due to no swing dependencies
  TaskScheduler now synchronizes on a lock object instead of this
  Events, DefaultEvent and DefaultObserver now synchronize on a lock object instead of this
  States, DefaultState, DefaultAggregateState, DefaultStateObserver and DefaultGroup now synchronize on a lock object instead of this
  ValueChange, removed some unused methods
  EntityConnectionServerAdmin, DefaultRemoteEntityConnection, warningThreshold removed
  DefaultFilteredComboBoxModel.addItem() now respects the sorting order
  EntityEditModel.createEntityComboBoxModel() renamed to createForeignKeyComboBoxModel(), createPropertyComboBoxModel() renamed to createComboBoxModel(), getPropertyComboBoxModel() renamed to getComboBoxModel() and getEntityComboBoxModel() renamed to getForeignKeyComboBoxModel()
  EntityEditModel.createEntityLookupField() renamed to createForeignKeyLookupField()
  EntityEditPanel.createEntityLookupField() renamed to createForeignKeyLookupField(), createEntityComboBox() renamed to createForeignKeyComboBox(), createEntityField() renamed to createForeignKeyField()
  ClientUserMonitor, user history no longer displays a single user as multiple based on case difference in usernames
  EntityEditPanel.afterInsertFocusPropertyID and afterInsertFocusComponent added
  EntityComboBoxModel.strictForeignKeyFiltering property added and tested
  Util.getInt() and getLong() now remove both dots and commas before parsing
  IntField, LongField and DoubleField no longer use a ThreadLocal for the NumberFormat
  ValueLinks, numerical value links ignore the NumberFormat if the field is editable (very problematic otherwise)
  IntField, LongField and Double field, removed constructor overloaded with min and max
0.9.8
  IntField, DoubleField, LongField and relevant classes refactored and improved, NumberField disables grouping, must be turned on explicitly
  UiValues, numerical value methods no longer take a format parameter, the text field does all the formatting
  EntityUiUtil now supplies cloned format instances to NumberField descendants
  LocalEntityConnection now logs RecordModifiedExceptions correctly
  IntField, columns paramater was not used
  DefaultEntityComboBoxModel.translateSelectionItem() no longer throws exception if item is not found, now returns null instead
  DefaultEntityTableModel.getPreferencesKey() renamed to getUserPreferencesKey() and made protected
  AbstractEntityConnectionProvider.isConnectionValid() now returns false in case internal connection validity checking throws an exception and validateConnection() sets the internal connection to null in case it is invalid
  DatabaseConnection, EntityConnection and RemoteEntityConnection.isValid() removed and merged with isConnected()
  DefaultRemoteEntityConnection.isLocalConnectionValid() removed, EntityConnectionServer uses isConnected() instead
  MethodLogger.Entry.toString() now displays microseconds instead of milliseconds for method time
  LocalEntityConnection.prepareStatement() added
  EntityTestUnit.initializeReferenceEntity() may now return null, handled in setReferenceEntity()
  Copyright bumped to 2016
  ClientValidator added, AbstractServer and EntityConnectionServer modified to use it
  DatabaseConnection.getConnection() overloaded with a validate parameter
  DefaultRemoteEntityConnection, methodLogger only used if enabled, no longer uses methodLogger to determine last usage time
  AbstractConnectionPool now handles the collection of fine grained pool statistics
  DefaultValueMap, protected constructor added with values and originalValues maps as parameters
  DefaultEntity, constructors refactored to use the above
  EntityResultPacker.pack() improved using the above constructor
  DatabaseConnection.getConnection(validate) removed, getConnection() no longer performes any validation
  ClientValidator renamed to ConnectionValidator
  ChinookLoadTest, insertDeleteAlbum scenario added
  EntityLoadTestModel.selectRandomItem(EntityComboBoxModel) added
  LocalEntityConnection, now logs setForeignKeyValues() with methodLogger
  ClientInstanceMonitor, ClientInstanceMonitorPanel, crappy tree view of client log added
  DefaultEntity, minor optimization in the way DefaultEntity.DefaultKey objects are instantiated
  EntityTableModel.InsertAction enum added
  EntityTableModel.setAddEntitiesOnInsert() replaced with setInsertAction()
  DateUtil.getFirst/LastDayOfYear() renamed to getFirst/LastDayOfCurrentYear(), getFirst/LastDayOfYear(year) added
  MethodLogger, removed redundant and unused fields, is now final and no longer serializable, ArgumentStringProvider added and implemented
  EntityConnectionServerAdmin.performGC() removed
0.9.9
  Major renaming of methods, ValueMap, Entity now conform to Map method names, get() and put() instead of getValue() and setValue() etc
  ValueMap.getValueChangeObserver() renamed to getValueObserver()
  ValueMapEditModel.getValueChangeObserver() renamed to getValueObserver()
  Entity.set() renamed to put()
  EntityTableModel, renamed getEntitiesByPrimaryKeys() to getEntitiesByKey(), setSelectedByPrimaryKeys() to setSelectedByKey() and getEntityByPrimaryKey() to getEntityByKey(), getEntitiesByPropertyValues() to getEntitiesByPropertyValue()
  Plugin and demo JMinor dependencies now based on the current version in build.properties, ivysettings.xml added, artifactory settings in build.properties
  build.xml, deploy_server and deploy_server_monitor targets improved, no longer create duplicate jminor library jars
  EntityRESTService, minor parameter name change
  LocalEntityConnection.setForeignKeyValues() renamed to setForeignKeys()
  RemoteEntityConnectionProvider.RemoteEntityConnectionHandler.invoke() synchronized
  EntityConnectionServerAdmin, ServerMonitor, added monitoring of GC events and thread count
  Entity.getInt() renamed to getInteger(), getChar() renamed to getCharacter(), for consistency
  EntityUtil, renamed a few methods in accordance with recent changes
  Properties.booleaProperty(propertyID, columnType) added
  InputProviderPanel, ESC key now works like clicking the cancel button
  InpurProviderPanel generified and improved a bit
  NumberField bug fixed, field did not accept the minus sign
  SizedDocument no longer allows use of setDocumentFilter(), setDocumentFilterInternal() added for subclasses
  SizedDocument now uses DocumentCase enum for controlling case conversion
  EntityConnectionProvider.ConnectionWrapper removed along with EntityConnectionProviders.connectionProvider(EntityConnection)
  Entity.Definition.setTableName() added
  DefaultEntityApplicationModel.loadDomainModel() now throws ClassNotFoundException
  EntityConnection.Type enum added along with EntityConnection.getType() and EntityConnectionProvider.getConnectionType()
  DefaultEntityConnectionServerAdmin, error handling on startup improved
  LocalEntityConnection.getSelectSQL() improved, no need to check if queries created by the framework contain the where keyword
  Entity.Definition.setSelectQuery(), added containsWhereClause parameter
  Entities.selectQueryContainsWhereClause() added
  LocalEntityConnection.containsWhereClause() removed, now uses the above
  DefaultEntityLookupModel, added parameter validation
  DefaultEntityDefinition.initializeSelectColumnsString() bug fixed, did not use getColumnName() when constructing query
0.9.10
  Entity.Data and Property.Data annotations added for database specific entity information, such as table and column names
  Refactoring due the above
  Entity.Definition.setSelectQuery(selectQuery) added as deprecated for backwards compatibility
  Demo deployment process improved
  UiUtil.chooseFileToSave() renamed to selectFileToSave() for consistency
  States.AggregateStateListener bug fixed, incorrect new value reported, test added
  EntityUtil.getEntity() refactored from DefaultEntityEditModel.getDefaultEntity()
  EntityUtil.mapToOriginalPrimaryKey() moved from DefaultEntityEditModel
  DefaultEntityEditModel.createForeignKeyComboBoxModel() bug fixed, incorrect entityID for null value entity
  SearchType.Values enum added
  DefaultColumnCriteriaModel refactored
  Entity.getForeignKey(Property.ForeignKeyProperty) added
  DefaultEntityEditModel.getDefaultValue() now returns an empty entity for non loaded foreign key values where the referenced primary key is available
  DefaultColumnCriteriaModel, enabled boolean variable replaced with a State
  ColumnSummaryModel moved to org.jminor.common.model.table
  DefaultEntityLookupModel no longer throws exception if created with no lookup properties, but throws IllegalStateException in performQuery() instead
  DefaultEntityDefinition.initializeForeignKeyProperty() improved foreign key validation, reference property count checked
  Util.rejectNullOrEmpty(String) added
  DefultEntityDefinition constructor now rejects both null and empty entityID and tableName values