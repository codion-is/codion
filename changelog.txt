0.4.9
  Improved default about dialog text and layout
  Some javadoc improvements
  Added tests to org.jminor.common.ui.control, TestBeanPropertyLink and TestMethodControl
  Added test to org.jminor.framework.client.ui.property, TestEntityPropertyLink
  Refactored and lessened package dependencies
  Moved getValueClass() from Type to Property (smaller dep. cycle in org.jminor.framework.model)
  Fixed and renamed checkout target in build.xml, minor code cleanup
  Added a couple logos, used in demos f.x.
  Profiling.selectRandomRows() added
  EntityDbConnection does not add EntityRepository info if it's already initialized
  Property.BooleanProperty.toBoolean() improved
  Navigation now selects correct detail model
  Removed CTR from resizing key combination
  Improved FrameworkUiUtil.showInDialog()
  Re-enabled EntityTestUnit.testUpdate(), added abstract modifyEntity() to accomodate
  Removed redundant entityID parameter from IEntityDb.selectMany(String entityID, List<EntityKey>)
  Completed the unit tests for EmpDept demo
  ControlIterator renamed to IControlIterator for consistency
  Fixed EmpDept test so they run on Oracle (oh the irony) (2 digit deptno values)
  Updated TipsAndTricks.txt
  Added FrameworkSettings.transferTextFieldFocusOnEnter
  Added UiUtil.transferFocusOnEnter(JTextField)
  TextFieldPlus, IntField, and FrameworkUiUtil changed according to the above
  South toolbar is now focusable
  Search sensitive refresh button now only visible when the search panel is visible
  Tentative fix of ToggleBeanPropertyLink
  Navigation is now CTR based with resizing enabled by adding SHIFT
  Added action listener to toolbar update button, showing the update popup menu (wrong position though)
  EntityPanel.prepareUI() now transfers focus to the table (not 100%, header seems to get focus) if the edit panel is hidden
  Added jminor-srctest.jar to dist
  We now throw intelligible exceptions on initialization if required system properties are not found
  EntityComboBoxModels are now provided automatically by the EntityModel if none has already been provided, changed demos to reflect this
  Moved all db connection type/host/sid/port property constants from FrameworkConstants to Constants
  Cleaned up DbUtil.getDatabaseUrl()
  Renamed a few constants in DbUtil
  Added boolean parameter propagateReferenceValues to Entity.doSetValue, selectMany->initializeValue from 7.1% to 0.4%
  FilteredComboBoxModel no longer sets the selected value to null if it does not exist after filtering
  Refactored and cleaned up Entity.doSetValue/setValue and EntityKey.setValue
  EntityDbConnection now initializes all reference property values, instead of leaving out the null references, which messes up originalValue
  propertyName replaced with propertyID throughout
  Removed unused methods from IEntityDb, restructured it and IEntityDbRemote a bit
  Privatized DbConnection.revalidate()
  Added EntityModel.allowInsert/Update/Delete, for overriding. Fx. used when initializing the EntityPanel, also prevents actual insert/update/delete
  IEntityDb.getDependentEntities now returns a Map instead of a HashMap
  Fixed Entity.propertyValuesEqual(), it now uses the entity recieved as parameter as base for the comparison
  EntityRepository.initialize now throws an exception if two properties have the same propertyID
  EntityPanel.handleSave uses tableModel.getSelectionModel().isSelectionEmpty() instead of EntityModel.isActiveEntityNull, which does not really work for non-trivial primary keys
  EntitModel.setValue does not update stEntityActive anymore, problematic when editing primary key values and thereby activating the state
  TextBeanPropertyLink now correctly disables the textComponent if LinkType is LinkType.READ_ONLY
  Removed entity history functionality, not mature enough and not really required
  Added EntityModel.containsDetailModel()
  Refactored EntityRepository
  Moved getEntityDependencies from EntityDbConnection to EntityRepository
  Fixed getEntityDependencies, by adding somewhat of a hack to EntityCriteria.isKeyCriteria()
  Removed AbstractEntityTestUnit and refactored EntityTestUnit
  Removed EntityDbConnection.getEntityCacheSize(), unused
  Removed DbConnection.getAutoIncrementValue()
  Fixed EntityTestFixture and EntityTestUnit, now initializing referenced entities is simpler and problem free
  Constants removed along with all its evil machinations (INT_NULL_VALUE...), changes throughout to accommodate
  Wait cursor now active during EntityPanel.initialize()
  Navigating through uninitialized panels now works as expected, that is, the panels are initialized and shown on demand (events were not bound until the panel was initialized)
  Some javadoc added in EntityPanel
  EntityComboBoxModel contents are now sorted by default
  Moved validateValue() and getValueClass() from Property to EntityUtil, lessening dependencies
  Refactored classes in org.jminor.framework.model and ...client.ui, lessening cyclical dependencies
  Table column header is now bold when search is enabled
  Fixed a couple bugs introduced during the refactoring, see above
  Renamed a couple events and methods in EntityTableModel
  Removed EntityPanel.usePreferredSize property
  Some restructuring/reordering/refactoring in EntityPanel, EntityTablePanel and EntityApplicationPanel
  Some more refactoring/restructuring/renaming
  Replaced the old EntityTestUnit and EntityTestFixture with org.jminor.framework.testing.EntityTestUnit
  ToggleBeanPropertyLink fixed at last
  Profiling renamed to ProfilingModel
  Fixed bug in UiUtil.makeUpperCase, null values were not handled correctly
  Fixed bug in EntityTableSearchPanel, it did not resize correctly on advanced toggle when the leftmost panel was not a search panel
  Added a condition in EntityPanel.handleSave, which prevents a save/update confirmation if updating is not allowed
  Simplified the strict editing functionality a bit, State -> boolean
  Removed a redundant variable, useDividers, from FrameworkSettings
  PostgreSQL table status query disabled since the function greatest is missing
  FrameworkSettings now Map based, useQueryRange now defaults to false
  Fixed a serious bug in Entity.getReferencedKey, where key values were cached on entityID instead of Property, fu**ing up the case where a table referenced the same table more than once
  Fixed a bug in Entity.doSetValue, it did not propogate the reference values when the new value was null, since it simply checked if the new value was an instance of Entity
  Some test case cleanup
  OPS$ removed from EntityApplicationPanel.getUserName(), now it uses the DEFAULT_USERNAME_PREFIX settings parameter
  EntityApplicationPanel.getFrameTitle() added
  Restructured EntityApplicationPanel along with minor access modifier modifications
  EntityApplicationPanel.loginRequired() added
  EntityTableCellRenderer boolean renderer now indicates row selected status
  EntityRepository.getEntityProperty() changed to getEntityProperties() since an entity can reference another via more than one property
  Property.DenormalizedViewProperty, ownerEntityID changed to a more logical referencePropertyID
  Entity.getDenormalizedValue changed according to the above
  EntityTablePanel.initializeTableCellRenderer() added
  EntityTablePanel.allowQueryConfiguration renamed to queryConfigurationAllowed, added getter
  Moved code from EntityPanel.initializeEntityTablePanel to EntityPanel.initialize, since it prevented simple overriding of said method
  A parameter to limit the number of records retrieved, recordCount, added to EntityCriteria, DbConnection and relevant EntityDbConnection code
  Removed whereClause caching in EntityCriteria, it was the source of a subtle bug, where the criteria got cached with the where keyword during server logging but used without it
  EntityPanel.setDetailPanelState() now hides all child detail panels if the state is changing from DIALOG
  Entity.isValueNull() fixed, it returned a false positive for Property.NonDbProperty values, since it only relied on Entity.getRawValue() which circumvents the EntityProxy, which handles NonDbProperties
  EntityPanel.initialize(), moved model refresh to top, otherwise the combo box models would be empty, thus preventing correct initial selection
  AbstractEntityPropertyLink, caption removed from constructor, sent property.propertyID forward as action name, removed from subclass constructors also
  EntityModel.modelCaption shortened to caption
  EntityCriteria.orderByClause added, EntityDbConnection.selectMany() changed accordingly
  IEntityDb.selectMany(EntityCriteria criteria, boolean order) removed
  Added getEntityDb() as a shorthand for getDbConnectionProvider().getEntityDb() to EntityModel and EntityTableModel
  EntityPanel.initialize(), moved model refresh back to bottom since most EntityComboBoxModels are created during UI initialization
  SmartRefresh/forceRefresh functionality removed
  TableStatus deprecated
  IEntityDb.getTableStatus() removed
  EntityCriteria.isRangeCriteria and tableHasAuditColumns properties removed
  EntityTableModel.recordCount added in place of TableStatus
  EntityRepository.createDateColumns added
  EntityTablePanel.toggleSearchPanel added, moving code from EntityPanel
  EntityComboBoxModel.setEntityCriteria() added, getEntitiesFromDb() changed accordingly
  Fixed bug preventing correct double click behavior if edit panel was null, detail panel was not shown
  FrameworkSettings.FILTER_QUERY_BY_MASTER property added, default false
  Fixed bug, resulting in a automatically created entity combobox while refreshing detail models after update and delete
  Added space bar as a selection trigger in a comboboxless PropertySearchPanel
  Property.EntityProperty is now hidden if caption is null
  EntityTablePanel, redundant private field tableControls removed
  EntityPanel, removed redundant getDefaultFocusComponent, isActive methods
  EntityPanel, getSelectedDetailPanel() now throws IllegalArgumentException if no detail panels are available
  Update selected entities popup menu now contains the properyID as caption for properties without captions
  Some minor changes, error handling/messages and javadoc
  EntityComboBoxMOdel.setEntityCriteria() no longer initiates a refresh, must be done seperately
  DbConnection.endTransaction() now calls DbConnection.commit/rollback, instead of connection.commit/rollback, results in correct logging
  DbConnection.setTransactionOpen() removed
  EntityPanel.prepareUI(), bindModelEvents(), default focus fixed, now the focus is only put on the defaultFocusComponent on panel activation if the focus owner is not a child component
  SteppedComboBox now uses dynamic popup sizing if the popupWidth property is <= 0, using the getDisplayWidth property from the UI
  PropertySearchModel, EntityComboBox now selects correct item on initialization
  EntityModel.getEntityComboBoxModel no longer creates a model if none exists
  EntityModel.createEntityComboBoxModel added
  FrameworkUiUtil.createEntityComboBox() changed accordingly
  EntityModel.getDefaultValue() renamed to getDefaultEntity
  Some javadocking
  EntityModel.createPropertyComboBox() added and createEntityComboBox protected
  EntityPanel.getInputManager, added List<Entity> toUpdate parameter
  EntityTableModel.searchStateOnRefresh changed from a hash based long to a String due to brokenness
  Property.hashCode removed
  AbstractSearchModel.toString() removed
  PropertySearchModel.hashCode() removed
  EntitySearchField added
  SearchFieldPropertyLink added
  EntityPropertyEditor changed, IEntityDbProvider instance variable removed, takes EntityModel as parameter and uses EntityModel.createEntityComboBoxModel when instantiating a combo box
  EntityModel.createEntityComboBoxModel made public, added nullValueItem and sortContents parameters
  EntityPanel.updateSelectedEntities changed to accomodate the above
  EntityRepository.propertyDescriptions map added, along with set/getPropertyDescription
  FrameworkUiUtil now adds EntityRepository.getPropertyDescription() as a tooltip on generated property components
  ControlSet added some null checks during additions to prevent adding null controls/actions
  EntityTablePanel.isPropertyColumnVisible() and setPropertyColumnVisible() added
  EntityPanel.selectTableColumns() added
  EntityPanel added "Select columns" action to table popup menu, added to FrameworkMessages
  EntityTableModel.clear() added
  EntityTablePanel added Clear action to popup menu
  PropertySearchModel.toString() added missing SearchType to result
  EntityTablePanel.setPropertyColumnVisible() now automatically disables searching on hidden columns
  EntitySearchField added double click as an OK trigger
  EntitySearchField.additionalSearchCriteria added
  EntityBindingFactory.createEntitySearchFieldPanel added
  FrameworkUiUtil.createEntitySearchFieldPanel added
  AbstractSearchModel.stLocked added, introducing the ability to lock search models in a certain state
  AbstractSearchPanel changed according to the above, linking components to the locked state
  PropertySearchModel.initialize fixed to prevent a property setting roundtrip back to the ui
  AbstractPropertySearchModel.stSearchEnabled privatized due to locking mechanism
  EntityModel.stAllowInsert/Delete/Update, .isAllowInsert/Delete/Update, .setAllowInsert/Delete/Update added
  EntityKey improved setValue error handling and reporting
  IntTextPropertyLink fixed valueFromText(), parsing the - sign to -1
  FilteredComboBoxModel.removeItem(), fireContentsChanged() called instead of resetContents(), thus preventing full refresh after removing an item
  UiUtil.selectDirectory() now uses user.home property in case no start directory is specified (instead of C://)
  UiUtil.selectDirectory() added dialogTitle parameter
  EntityTablePanel renamed a few fields
  EntityTablePanel added Copy cell action to JTable popup menu
  EntityUtil.getUpdateSQL() now throws an exception if no updatable properties have been modified, instead of returning a malformed SQL query
  EntitySearchField constructor now takes a String propertyID instead of Property as parameter
  PropertyCriteria now handles LIKE and NOT LIKE as IN and NOT IN when more than one value is specified
  EntityTableModel some refactoring, javadoc improvements and additions
  EntityModel javadoc improvements and additions
  AbstractSearchModel.caseInsensitive added
  PropertyFilterModel changed according to the above
  PropertySearchModel changed according to the above
  EntityRepository.initialize now correctly identifies multiple properties with same id
  EntitySearchField developed further, case sensetivity and wildcards
  EntityTableModel.simpleSearchString removed
  EntityTableModel.stSimpleSearch added
  EntityTablePanel.initializeSimpleSearchPanel improved
  FrameworkUiUtil changes to accomodate the above
  EntityTableSearchModel created, EntityTableModel, EntityTablePanel, EntityCriteriaPanel and EntityTableSearchPanel changed accordingly
  Property.EntityProperty.isLookup property added
  EntityTableModel.includeSearchComboBoxModel() removed, see above item
  EntityTableModel.propertyFilterModels moved to EntityTableSearchModel
  NotEquals60x16.gif changed
  EntitySearchModel.setExactSearchValue() now returns a boolean indicating whether the search state changed
  EntityTableModel.filterByReference() now only triggers a refresh if the search state changed
  EntityPanel.setupControls() now uses the setControl() method
  Control improved error reporting
  Util.formatLat/Lon improved
  Removed > 40 instances of generic Exception catch clauses
  EntityTableCellRenderer date renderers now accept String values as input
  EntityTablePanel.setTableCellRenderer() added
  Util.putUserPreference() and getUserPreference() added
  EntityApplicationPanel sets the last successfull login name as the default username for the currently logged on OS user
  FrameworkSettings.getDefaultUser() now returns the username found in the OS users preferences, if any
  Added preferences editing permission to jminor_client.policy
  EntityUtil.getModifiedEntities() added
  EntityDbConnection.update() does not throw an exception any more if it recieves an empty list
  DbConnection.queryObjects() added
  TestDbConnection added
  IEntityDb/EntityDbConnection.selectRows() added
  Fixed a bug in Entity, where the toString cache was not cleared on property change
  Moved EntityProxy handling from EntityRepository to static EntityProxy methods, to remove a circular class dependecy
  Added some javadocs
  Fixed a bug in EntityPanel.createStaticEntityPanel() where getAllEntitiesFromDb() was not being overridden due to changes in signature
  EntityApplicationModel.loadDbModel renamed to loadDomainModel
  FrameworkSettings.PERSIST_ENTITY_PANELS added
  EntityApplicationPanel changed according to the above
  EntitySearchField modified to be able to handle multiple entities
  SearchFieldPropertyLink modified to accommodate the above
  PropertySearchPanel now uses a EntitySearchField when a ComboBoxModel is not available in the PropertySearchModel, the field searches by every string property found in the entity
  EntityCriteriaPanel fixed so that text fields in PropertySearchPanels are no longer tiny
  EntityRepository.setPropertyDescription() fixed, it now mappes the description to entityID and propertyID instead of only propertyID, which isn't unique
  EntityRepository.setEntitySearchProperties/getEntitySearchProperties added, to hold default search by properties for entities
  EntitySearchField now sets its selected entity value as null on enter when it contains no text, instead of returning a search result containing all underlying records
  TestState and TestAggregateState added
  Property.NonDbProperty renamed to TransientProperty
  Some javadoc additions and changes
  TestDbConnection improved
  EntityModel.getDefaultEntity() fixed, now it doesn't set the value of Property.DenormalizedProperty, since that is set via its parent property
  EntityPanel.getUpdateProperties() no longer includes Property.DenormalizedProperty
  EntityModel.evtActiveEntityChanging added, fired before the active entity changes
  PropertySearchModel.toString(Object obj) fixed, now it uses entity.getPrimaryKey().toString() instead of entity.toString(), which resulted in a non-unique EntityTableSearchModel.searchState values
  EntityModel.lastDeleted/updated... fields removed
  InsertEvent, UpdateEvent and DeleteEvent added to accomodate the above change
  EntityModel.isEntityModified renamed to isActiveEntityModified and changed so that is returnes the isActive result of the state returned by getActiveEntityModifiedState
  UiUtil.selectFile() added
  Some javadoc additions and changes
  PropertySearchModel.toString() fixed, now adds the current search type to the result
  EntityModel.masterSelectionChanged changed, now when no entity is selected the master reference property value is set to null in linked detail models
  PropertySearchModel.toString() fixed again, now adds the current search type to the result only when the search is enabled
  Entity.setAs() fixed, now copies the toString cache as well
  EntityApplicationPanel.getRootEntityPanelInfo renamed to getMainEntityPanelInfo
  EntityApplicationModel.getRootEntityModelClasses renamed to getMainEntityModelClasses
  Entity.getValueAsUserString() removed
  EntityProxy.getValueAsUserString() removed
  EntityModel, if the selected record is being updated via the table model refresh the one in the model
  DbConnection, EntityDbConnection, Property and remote interfaces updated for rudimentary BLOB handling
  EntityPropertyEditor now uses Timestamp for date properties
  FrameworkUiUtil, lookup dialog added to all text fields by default
  UiUtil.selectDirectory/File now shows the last visited directory when used
  Transfer focus on enter now works for all editable comboboxes
  EntityModel.getDefaultValue(Property property) now returns null if the the combobox associated with the property has an empty string selected
  EntityComboBoxModel.setSelectedItem now translates an empty string to null
  EntitySearchField added transferFocusOnEnter property
  EntitySearchField, EntityComboBox and UiUtil.setTablePopup now show popup menus via JComponent.setComponentPopupMenu
  PropertySummaryPanel.evtStateChanged renamed to evtSummaryTypeChanged
  EntityApplicationPanel added mnemonics to main menu
  ControlSet removed mnemonic field, now it simply uses the inherited functionality of Action
  EntityPanel.showDependenciesDialog simplified
  EntityPropertyEditor mnemonics added to buttons
  UiUtil.showInDialog added mnemonic to OK button
  ExceptionDialog mnemonics added to buttons
  EntityPanel.getDefaultFocusComponent() added, for overriding
  EmpDept application i18n'ized
  EntityTablePanel.copyTableAsDelimitedString() added along with control method
  EntityPanel.selectTableColumns() moved to EntityTablePanel
  EntityModel.getAllEntities(final boolean includeFiltered) added
  FrameworkSettings.INITIAL_SEARCH_PANEL_STATE added and used in EntityPanel
  Entity.getDenormalizedViewValueAsString() added
  Util.getDelimitedString() refactored out of writeDelimitedFile
  Entity.is(final String entityID) added
  Property.getCaption() returns the caption of the parent property in case the caption is null
  EntityTableModel.initSearchModel() renamed to initializeSearchModel
  EntityRepository.getVisiblePropertyList() added
  EntityModel.resetComboBoxModelOnClear(final Property property) removed, replaced by useLastValueAsDefault()
  FrameworkSettings.RESET_COMBOBOXMODELS_ON_CLEAR replaced with PERSIST_ENTITY_REFERENCE_VALUES, with default value 'true'
  EntityModel.useLastValueAsDefault() renamed to persistValueOnClear()
  DoubleField.setDecimalSymbol() added
  DoubleTextPropertyLink and IntTextPropertyLink changed so that valueFromText now uses Util.getDouble()/getInt()
  EntityPropertyEditor text fields now include lookup functionality (CTR-space)
  IntBeanPropertyLink/DoubleBeanPropertyLink fixed, now use Util.getInt/Double
  EntityUtil.getPropertyValues() added
  EntityPropertyEditor simplified and improved
  EntityUtil.copyPropertyValue() added to lessen cyclical dependencies within the framework.model package
  Entity.isValueNull() method moved to EntityUtil to lessen cyclical dependencies within the framework.model package
  EntityPanel.EntityPanelInfo moved up to it's own class and renamed to EntityPanelProvider... and related changes
  EntityApplicationPanel.getMain/SupportEntityPanelInfo renamed to getMain/SupportEntityPanelProviders
  EntityPanel.getDetailPanelInfo renamed to getDetailPanelProviders
  AggregateState.AND/OR changed to enum
  EntityCriteria, PropertyCriteria and EntityKeyCriteria moved from framework.model to framework.db.criteria
  PropertyChangeEvent and PropertyListener moved from framework.model to common.model
  EntityDependencies deleted (and from EntityRepository), EntityDbConnection.Dependencies and .resolveEntityDependencies() added
  EntityModel strictEditing changed, hopefully improved but needs more thought/work
  AbstractPropertyLink and subclass hierarchy improved and simplified with the above in mind
  IEntityDb.selectForUpdate() now works for multiple entities
  AbstractPropertyLink.refreshUI/Model renamed to updateUI/Model
  TextPropertyLink.isDigitString() unused, removed
  AbstractPropertyLink enabledState removed from constructor, didn't have any effect whatsoever
  PropertyLink class hierarchy changed according to the above, that is, removed a lot of 'null' parameters
  JavaDoc changes and additions
  TextPropertyLink.getFormattedValue() renamed to getParsedValue()
  More JavaDoc additions and changes as well as some minor code improvements, variable names and such
  CheckBoxPropertyLink renamed to BooleanPropertyLink
  UiUtil.DateInputPanel improved and moved to its own class
  TextInputPanel created
  EntityPropertyEditor now uses TextInputPanel for text input
  FrameworkUiUtil.createDateInputField renamed to createDateInputPanel
  EntityBindingFactory.createDateInputField renamed to createDateInputPanel
  EntityBindingFactory renamed to EntityBindingPanel
  UiUtil.showInDialog button caption and mnemonic is now consistent
  TextInputPanel.getTextComponent() added
  EntityDbUtil created, moved some db related stuff from EntityUtil to this class as well as to EntityDbConnection
  TestEntityDbConnection created to accommodate the above (moved dml test case from TestEntity)
  Fixed and added copyright messages
  EntityUtil.isPrimaryKeyModified() added
  EntityModel.update() fixed so that if primary keys were involved in the update the table model is refreshed afterwards
  CompactDotDateFormat mask fixed
  EntityModel.evtLinkedDetailModelChanged now only updates the selected detail model with the active entity if it is non-null
  TestEntityDbConnection fixed, it did not initialize the required domain model
  Entity.setReferenceKeyValues() subtle bug fixed, when a EntityProperty was part of the primary key it didn't update the modified state when changed since it asked the primary key if it had a value using the EntityProperty propertyID (_ref) so it was always an initialization
  EntitySearchField renamed to EntityLookupField
  FrameworkUiUtil.createEntitySearchField() renamed to createEntityLookupField
  EntityBindingPanel.createEntitySearchField() renamed to createEntityLookupField
  ControlProvider moved from ui to ui.control, where it belongs
  ControlSet.iterate() made static and moved to ControlProvider
  UiUtil.handleException() moved to ExceptionDialog to remove a cyclical dependency
  UiUtil.getUser() moved to LoginPanel to remove a cyclical dependency
  EntityUtil.getValueString/printPropertyValues/copyPropertyValue/isValueNull/equal/validateValue/getPropertyChangeDebugString moved to Entity to remove a cyclical dependency
  EntityLookupField renamed some variables and methods from search... to lookup...
  EntityTestUnit.getReferencedEntities() removed
  EntityTestUnit.initializeDbConnection() added
  Split demo sources from test source tree to srcdemos
  ManagerComboBoxModel removed from EmpDept demo
  EntityModel.createEntityComboBoxModel(Property.EntityProperty property) added, uses "-" as the default nullValueItem and sorts the contents
  EmployeeModel override createEntityComboBoxModel() instead of initializeEntityComboBoxModels()
  EntityPropertyEditor now calls the new EntityModel.createEntityComboBoxModel() version
  FrameworkConstants.WILDCARD removed
  FrameworkSettings.WILDCARD_CHARACTER property added
  AbstractSearchModel, EntityLookupField, PropertyCriteria added wildcard property
  FrameworkConstants.JMINOR_SERVER_NAME_PREFIX removed
  FrameworkSettings.SERVER_NAME_PREFIX added
  FrameworkConstants.REMOTE_CONNECTION_PROVIDER and LOCAL_CONNECTION_PROVIDER removed
  FrameworkSettings.REMOTE_CONNECTION_PROVIDER and LOCAL_CONNECTION_PROVIDER properties added
  UiUtil.bindColumnSizesAndPanelSizes() renamed to bindColumnAndPanelSizes and simplified considerably
  UiUtil.DIMENSION_TEXT_FIELD_SQUARE added
  UiUtil.DIMENSION18x18 deprecated
  EntityTablePanel.initializeTableMouseListener() added, for overriding
  EntityPanel.initializeTableDoubleClickAction() added, for overriding
  EntityPanel.confirmUpdate() now uses the edit panel for dialog parent if one is available
  UiUtil.transferFocusOnEnter() now transfers focus backwards is shift is down
  EntityTableModel.getAllEntitiesFromDb() renamed to performQuery
  EntityTableModel.getSearchCriteria() renamed to getQueryCriteria
  State.StateGroup now uses WeakReference to prevent memory leaks
  Event.scheduleForRemoval/scheduleForAddition replaced by synchronizing calls
  Event.debug removed along with the relevant code
  org.jminor.common.model.WeakPropertyChangeListener added
  EntityPanel.initialize() now uses WeakPropertyChangeListener for focusActivation -> no memory leak
  EntityPanel.focusPropertyListener field added for the above
  EntityPanel.resizePanel(), added pixelAmount parameter
  EntityLookupField.setSelectedEntity() added
  EntityPanel.getUpdateProperties() now returns primary key properties as long as they are not auto-incremented
  EntityPropertyEditor now uses isLookup to determine if a combobox or a EntityLookupField should be used
  PropertySummaryPanel constructor now takes a maximumFractionDigits parameter
  PropertySummaryPanel now shows a decimal number avarage for integer properties
  Renamed a few e1 Exceptions to ex
  EntityTableSearchModel.setStringSearchValue() removed
  EntityTableSearchModel.setSearchState() renamed to setSearchModelState
  EntityTableSearchModel.getSearchModelState() privatized
  EntityTableSearchModel.dbProvider field removed
  UiUtil.DIMENSION18x18 removed
  EntityLookupModel added
  EntityLookupField refactored according to the above
  LookupFieldPropertyLink renamed to LookupModelPropertyLink
  EntityModel.createEntityLookupModel() added
  TestEntityLookupModel added
  PropertySearchModel.entityLookupModel field added, along with overloaded constructors, a getter and bindLookupModelEvents()
  PropertySearchPanel.dbProvider field removed (whohooo) due to the above, along with all the crap involved
  EntityCriteriaPanel, removed all traces of IEntityDbProvider
  EntityTableSearchModel now handles creating the EntityLookupModel
  EntityTableSearchPanel, removed all traces of IEntityDbProvider
  ControlProvider, inlined UiUtil.linkToEnabledState to remove a cyclical dependency
  IEntityDb.executeCallable renamed to executeStatement
  EntityDbConnection reorganized
  RemoteClient renamed to ClientInfo and moved to common.model, common.remote removed
  Added backup ant targets to project template build.xml file and backup.path property to build.properties
  Added deploy_project ant task to build.xml
  Changed default ant task to deploy_all
  readme.txt added
  EntityDbRemoteServer, EntityRepository.get().add(repository.initializeAll()) is now done in the connect() method instead of deep down inside EntityDbConnection
  EntityDbConnection, EntityRepository parameter removed from constructor
  EntityDbConnectionPool, remove EntityRepository parameter from checkOutConnection()
  EntityDbRemoteAdapter, EntityRepository parameter removed from constructor
  PropertySearchPanel now instantiates a JComboBox instead of EntityComboBox to reduce cyclic dependencies
  EntityComboBoxModel/EntityListModel.getEntitiesFromDb() renamed to performQuery
  EntityListModel.entityCriteria field + setter/getter added, used in performQuery()
  EntityLookupField constructor overloaded with an Action parameter, which is performed on enter if the text field represents the selected entities
  PropertySearchPanel uses the aforementioned EntityLookupField constructor action parameter to enable/disable the search on enter
  Event.fire() now copies the listeners list, synchronizing the fire/add/remove methods wasn't enough apparently, so it was removed
  EntityModel.masterModel field added
  EntityPanel.masterPanel field added
  EntityApplicationModel.applicationTreeModel removed
  EntityPanel.initializeResizing/Navigation moved to EntityApplicationPanel
  EntityPanel.getDetailPanels() and getLinkedDetailPanel() added
  EntityApplicationPanel shows the root tab pane regardless of the number of main application panels
  EntityApplicationPanel, some refactoring and restructuring
  Reorganized the resources structure
  Added run_demo_***, run_server_*** tasks to ant build file, restructured it a bit and renamed junit_db_*** properties to run_db_*** in build.properties
  DbConnection query logging now includes query execution time
  EntityApplicationPanel, removed setLookAndFeel command from menu
  UiUtil.setLookAndFeel() removed
  Ant build file cleanup and restructuring, merged deploy_profiling into deploy_demos
  Added create/delete db targets for empdept to ant build file as well as relevant scripts to resources/demos/empdept/scripts
  EntityDbUtil.getQueryString() now uses "is" for null values
  Added resources for creating a derby db for the unit tests
  EntityTestUnit now uses setUp() and tearDown() to connect and disconnect from the database
  PropertySearchModel.bindComboBoxEvents() reverted back to previous version since my "fix" introduced a bug resulting in only single item selection
  Fixed copyright message name for UTF-8, yet again
  TestPetstore now exends EntityTestUnit
  Unit tests now run with an embedded derby database
  Added run_derby_server and shutdown_derby_server to ant build file
  Created lib/derby for the derby jars
  Removed mysql and oracle jdbc drivers due to licensing
  EntityModel.stActive and activeStateGroup moved to EntityPanel, where they belong
  Added IntelliJ project file
  Excluded *Stub.class files from jminor-server.jar
  Added user authentication (scott/tiger) to demo db
  Database.get().getURL() and onDisconnect() now takes a connectionProperties parameter for derby user authentication
  FrameworkSettings.AUTHENTICATION_REQUIRED property added and used in EntityApplicationPanel.loginRequired()
  IdSource constant ID_ prefix removed
  Entity.equal() renamed to isEqual
  FrameworkSettings.FILTER_QUERY_BY_MASTER property value is now true by default
  Default usernames are now saved in preferences per application
  UiUtil.selectAllOnFocusGained(JTextComponent) added
  FrameworkSettings.USE_NUMBER_FORMAT_GROUPING property added, default true
  Refactored EntityTableModel.EntityJRDataSource out of EntityTableModel which no longer implements JRDataSource hence no more reportPrintIterator and currentReportRecord fields
  EntityTableModel.initReportIterator() renamed to initializeReportIterator and made protected
  Removed a few probably ill-placed synchronized keywords, they simply gave the false illusion of thread-secure stuff
  EntityPanel constructor now takes an EntityModel parameter
  EntityPanel.setModel() removed
  UiUtil.showInDialog() improved button caption and mnemonic
  EntityTableModel constructor parameters reordered
  EntityLookupModel, EntityComboBoxModel, EntityListModel and EntityModel constructor parameters reordered for consistency
  EntityPanel.compactPanel field renamed to compactLayout
  EntityPanel.initialize(), moved some code to initializeUI() and bindEvents()
  EntityTablePanel.initializeSummaryPanel() now uses the underlying JTable column model when initializing summary panels
  Database.get().DERBY_LONG_DATE_FORMAT added
  FrameworkUiUtil.IEntityExceptionHandler and DefaultEntityExceptionHandler added
  FrameworkUiUtil.exceptionHandler static field added plus getter/setter
  EntityApplicationModel.instantiateMainApplicationModel() added, for overriding
  EntityApplicationPanel.startApplication() refactored along with prepareFrame()
  EntityPanel now accepts DIALOG as the initial detail panel state
  EntityPanel focus grabbing on activation improved
  EntityApplicationPanel.loginRequired() renamed to isLoginRequired()
  EntityApplicationPanel.startApplication() refactored further
  EntityApplicationPanel.model field renamed to applicationModel
  ProfilingModel.selectRandomRow() now takes a EntityTableModel as parameter
  ProfilingPanel/ProfilingModel refactored
  SchemaBrowser domain model now uses resource bundle
  DbConnection.endTransaction(boolean rollback) is now endTransaction(boolean commit)
  IEntityDb.endTransaction(boolean rollback) is now endTransaction(boolean commit)
  No /bin folder in demos/server deployment, run files fixed
  ServerMonitor, added option to shutdown the selected server, leaves the server monitor in a bad state
  EntityPanel focus grabbing on activation reverted somewhat, so that it does not try to grab default focus when a child component already has the focus, the table for example
  EntityApplicationPanel, navigation modifier key changed from CTR to ALT, resizing from SHIFT-CTR to SHIFT_ALT
  Removed the query range explanation from the TipsAndTricks.txt file, since it is rarely used
  EntityPanel, pressing ALT-CTRL-T toggles the focus between the table and input panels.
  Petstore client, some getDetailSplitPaneResizeWeight() adjustments
  FrameworkMessages, Suppert tables mnemonic changed from S to P, S conflicted with the edit panel save action
  EntityPanel, direct references to model replaced by getModel() throughout
  EntityTablePanel, direct references to tableModel replace by getTableModel() throughout, as well as for entityTable/getJTable()
  @override annotation added where applicable
  EntityTableModel, some reordering of fields
  QueryRange removed with all its ugly effects
  FrameworkSettings.USE_SMART_REFRESH removed, unused
  EntityPanel, keyboard actions added, ALT-CTRL-T focuses the table, ALT-CTRL-W the edit panel and ALT-CTRL-S the search panel
  EntityTablePanel, ALT-CTRL-T shows the popup menu instead of SHIFT-SPACE
  EntityTablePanel.addJTablePopupMenu() added (removed from UiUtil)
  PropertyCriteria.getMultiReferenceCriteriaString(), bug fixed, searchType NOT_LIKE did not trigger "not in" condition
  EntityTablePanel, a tentative searchPanel/summaryPanel scrollbar fix, added 15 pixel label buffer to each panel, somewhat hacky but seems to work
  UiUtil.getDateFromUser() simplified and refactored
  PropertyFilterPanel, removed unused/inactive key listener from date input field for getting date from use via dialog
  FrameworkUiUtil.getDateChooserPanel() doesn't use todays date as default value if initialValue is not provided
  FrameworkSettings.DEFAULT_SHORT/LONG_DATE_FORMAT properties added
  EntityTableCellRenderer uses the above
  EntityLookupField now transfers focus on enter correctly
  TestEntityDbConnection, TestEntity, EntityDbUtil, null value properties not included in insert statements
  UiUtil.moveCaretToStartOnFocusGained added
  UiUtil, createFormattedField, text field moves cursor to start on focus gained
  Database.get().DATABASE_HOST_PROPERTY used for Derby embedded instead of SID
  DbConnection.execute() uses executeUpdate()
  EntityPanel.confirmUpdate() now uses the EntityPanel for dialogOwner instead of the editPanel
  EntityModel.updateDetailModelsAfterInsertOrUpdate split in two
  EntityModel now sets the appropriate property value in detail models as the newly inserted record
  Util.getFirst/LastDayOfYear/Quarter added
  H2 database support added
  Database.get().isEmbedded() added
  Fixed some server side issues with sid being a required property
  Added jcalendar library to server monitor
  Added server security policy entries for embedded databases
  Added run_server_localhost_derby_embedded.bat
  UiUtil.moveCaretToEndOnFocusGained() added
  Util.addAcceptSingleFileDragAndDrop(JTextComponent) added
  ItemComboBoxModel.getIndexOfItem() added
  BooleanComboBoxModel.setSelectedItem(boolean) added
  Util.DEFAULT_SHORT/LONG_DATE_FORMAT private fields added
  Util.isDateOk() renamed to isDateValid()
  TestCriteriaSet, TestDbUtil, TestItemComboBoxModel, TestEvent, TestUtil and TestBooleanComboBoxModel added
  EntityLookupModel.dbProvider field finalized
  EntityLookupModel.allowMultipleSelection field renamed to multipleSelectionAllowed
  EntityProperty.isLookup field removed
  EntityRepository largeDataset property added for entities, replacing the above
  Property.isUpdatable field renamed to updatable
  Database is now inheritance based
  IDatabase created in org.jminor.common.db.dbms as well as implementations for supported databases
  H2 database creation task added to build.xml
  Updated and added some run scripts according to the above
  EntityApplicationPanel.getUser() now accepts empty passwords
  Added h2 lib to run targets in ant build file
  Added H2 support to SchemaBrowser (not quite working, key_column_usage table not available)
  Removed run_schema_browser targets from ant build file
  Server monitor now handles server shutdown a bit more gracefully
  IEntityDbRemoteServerAdmin.getSystemProperties() added and to implementation as well
  Server monitor code base changed radically, no more messing about with trees
  IEntityDbRemoteServerAdmin.getDatabase.getConnectionPoolStats() renamed to getConnectionPoolStatistics
  IEntityDbRemoteServerAdmin.getDatabase.getDatabaseStats() renamed to getDatabaseStatistics
  DbConnection does not call IDatabase.onDisconnect() on logout since it obviously wreaks havoc when an embedded database is running in the server
  IDatabase.onDisconnect() renamed to shutdownEmbedded(), which is called in the server on exit and in EntityDbLocalProvider on logout
  Util.addAcceptSingleFileDragAndDrop() moved to UiUtil
  FrameworkUIUtil.createComboBox() now calls UiUtil.transferFocusOnEnter for both the combobox and the editor component, it now works for uneditable boxes as well
  All unit test classes renamed ...Test from Test...
  AbstractDateMaskFormat.getDateMask() is no longer abstract
  AbstractDateMaskFormat renamed to DateMaskFormat
  EntityBindingPanel.createDateInputPanel(propertyID) added, uses the default short date format
  EntityDbRemoteServerAdmin refactored out of EntityDbRemoteServer, exported on seperate port, changes in dist ant target and run files
  FrameworkConstants.SERVER_ADMIN_PORT_PROPERTY added
  EntityDbRemoteServer.shutdown() now exits properly by simply unexporting the remote object, no call to System.exit() necessary
  EntityDbRemoteAdapter now unexports itself on logout
  Updated source copyright notice where needed, removed it from 3d party files
  deploy targets in ant build file use chmod to make .sh files executable
  initialize_h2_db.sql fixed and renamed create_h2_db.sql, create_h2_db ant target changed accordingly
  run_rmi_registry.bat/sh files added to resources/server as well as resources/security/all_permissions.policy for running the registry
  build.xml cleaned up, removed dist/version and current directories, removed deploy target
  EntityDbRemoteProvider moved to server.provider
  Ant build file cleanup
  DateTextPropertyLink improved somewhat
  Event, removed name field
  Added run_rmi_registry target to build.xml, removed run/shutdown_derby_server
  Cleaned up project_template build file
  IDatabase.DATABASE_TYPE_DERBY_EMBEDDED and DATABASE_TYPE_H2_EMBEDDED removed
  IDatabase.DATABASE_EMBEDDED property added
  DerbyEmbeddedDatabase and H2EmbeddedDatabase removed
  Build and run files changed according to the above
  PropertyFilterPanel and PropertySearchPanel now use default date formats
  PropertyFilterModel.get/setUpper/LowerBound(Comparable) removed
  FrameworkUiUtil.createDateChooserPanel/Field rename to createDateInput...
  EntityBindingPanel.createControlPanel are now protected final
  EntityPanel.handleSave/Insert/Update/Delete renamed to save/insert/update/delete
  serialVersionUID added to Serializable and Externalizable classes
  State, Event and FrameworkSettings no longer implement Serializable
  manifest target added to build file
  EntityDbResultPacker.loadEntity() now catches Exception instead of SQLException
  SQLServerDatabase.getAutoIncrementValueSQL() now uses SELECT SCOPE_IDENTITY() instead of select @@IDENTITY
  EntityTestUnit.testUpdate() does not check properties which are selectOnly or not updatable
  FrameworkUiUtil/EntityBindingPanel createEntityLookupFieldPanel removed
  EntityLookupField.createPanel() added
  EntityBindingPanel javadoc'ed
  Oracle specific code removed from DbException and DbUtil
  IDatabase.getErrorMessage() added
  FrameworkMessages.VALUE_MISSING moved to Messages
  FrameworkUiUtil.IEntityExceptionHandler simplified
  EntityDbUtil.getDbException() added
  StrictEditModelTest now sets the lock timeout if the underlying database is H2 to speed up the test
  EntityApplicationModel/EntityModel/EntityTableModel.getDbConnectionProvider() renamed to getDbProvider()
  IDatabase.getUserInfoString() renamed to getAuthenticationInfo()
  Misc code cleanup
  specialRendering renamed to rowColoring everywhere
  H2/Derby jars included in demo remote run file classpath for db specific exception classes
  EntityDbUtil.getDbException() removed again
  DbException refactored
  EntityDbConnection exception handling changed according to the above
  IEntityDbProvider.getConnectEvent() removed
  Entity and EntityKey are now Serializable instead of Externalizable, the latter resulted in more bytes :|
  EntityKey.keyValues field renamed to values
  Entity.propertyValues field renamed to values
  Entity.originalPropertyValues field renamed to originalValues
  EntityDbConnection entityCache functionality removed
  EntityDbRemoteAdapter loggedIn field removed, not really used
  EntityKey no longer returns the default value for a property if no value is set
  EntityModelTest, removed the default value test according to the above
  EntityKey, all fields privatized
  Entity, changes related to the above
  EntityDbConnection, selectMany() removed redundant return ArrayList, now simply returns the query result list
  build.xml, doc -> javadoc, removed init target
  Some javadoc additions in Entity
  Property.SubQueryProperty renamed to SubqueryProperty
  Entity.validateValue renamed to validateType
  EntityRepository.setIsLargeDataset() added
  EntityModelTest refactored a bit
  EntityTablePanel.getSummaryProvider() renamed to getSummaryPanel
  EntityTablePanel.doubleClickAction renamed to tableDoubleClickAction
  EntityDbRemoteServer.getConnectionLog() renamed to getEntityDbLog
  EntityModel.update() now returns silently if it receives only unmodified entities
  EntityDbRemoteAdapter loggedIn field added again, renamed to connected, it was really used
  AbstractSearchPanel.upper/lowerBooleanComboBoxModel removed
  ModelTestDomain renamed to EntityTestDomain
  EntityPanel, renamed detailTabPane to detailPanelTabbedPanel, editDialog to editPanelDialog, detailDialog to detailPanelDialog
  EntityModel.setActive() renamed to setActiveEntity
  StringBuffer replaced with StringBuilder globally
  EntityLookupFieldTest, added more test cases
  EntityModelTest.testDetailModel() added
  EntityTestUnit refactored, initializeReferenceEntities now void, setReferenceEntity() added
  StrictEditModeTest code moved to EntityModelTest
  PropertySearchModelTest added
  Improved JasperReports integration, added client.model.reporting.EntityReportUtil, moved EntityJRDataSource from EntityTableModel to there
  Added rowColoring to EmpDept demo
  FrameworkSettings renamed to Configuration, removed get(), renamed get/setProperty to get/setValue
  All constants from FrameworkConstants move to configuration
  FrameworkConstants removed
  DateUtil created, moved date related stuff from Util, DateUtilTest created
  ClientInfo moved from common.model to common.db
  Added runtime permission to server policy file to handle some evaluation expression thing in jasper reports
  Added missing jasper collections/logging libs to server run files
  Property.EntityProperty renamed to ForeignKeyProperty
  Added compile_reports target to ant build file, along with the required libraries
  EntityModel.caption moved to EntityPanel
  EntityPanel.initialize() now calls the protected postInitialization() method, which should be overridden instead of initialize()
  Wait cursor now used while preparing reports for viewing via the EntityPanel
  EntityReportUtil.fillReport() added, called from EntityModel.fillReport()
  EntityPanel.initialize() renamed to initializePanel, initialized renamed to panelInitialized, postInitialization() renamed to initialize
  Property.is() added
  Property.DenormalizedViewProperty.referencePropertyID renamed to foreignKeyPropertyID
  Property.DenormalizedProperty.ownerEntityID renamed to foreignKeyPropertyID, changed relevant code in EntityRepository and Entity
  EntityUtil.isPrimaryKeyModified() moved to Entity
  EntityRepository.EntityInfo created
  EntityRepository refactored, transient fields removed, temporarily?
  Package framework.model renamed to framework.domain
  EntityRepository.get() removed, no longer singleton, all methods static
  IEntityDbRemoteServer.connect() now takes a map instead of a EntityRepository parameter
  EntityRepository.EntityInfo renamed to EntityDefinition, refactored
  EntityRepository.getOrderByColumnNames renamed to getOrderByClause
  EntityKey.propertyCount, singleIntegerKey fields removed
  Util.notNull() added along with test method in UtilTest
  Util.sqlEscapeString() moved to EntityDbUtil
  IEntityDb.set/isCheckDependencies() removed
  EntityTableModel.filterQueryByMaster field, setter and getter renamed to queryFilteredByMaster
  IEntityDb.startTransaction() renamed to beginTransaction
  EntityModel.initializeEntityComboBoxModels return value changed from Map<Property, ComboBoxModel> to Map<Property.ForeignKeyProperty, EntityComboBoxModel>
  EntityModel.containsTableModel() added
  EntityModel.useStrictEditing renamed to useSelectForUpdate
  EntityModel.stSelectionFiltersDetail State field changed to boolean selectionFiltersDetail
  EntityModel.refreshEntityComboBoxModels() removed
  Configuration.USE_STRICT_EDIT_MODE renamed to USE_SELECT_FOR_UPDATE
  Demo package model renamed to domain
  private List<Entity> selectMany(final List<Property> properties, final List<EntityKey> primaryKeys) removed from EntityDbConnection
  EntityCriteria.isKeyCriteria() removed
  EntityRepository.EntityDefinition.entitySelectString renamed to selectColumnsString
  EntityRepository.entityInfo renamed to entityDefinitions
  EntityDbUtil.* moved to EntityUtil, EntitDbUtil removed, it introduced a dependency cycle between db.criteria and db
  EntityDbConnection, StringBuilder used throughout
  EntityDbConnection.set/getPoolTime() made package protected
  FrameworkUiUtil.createDateInputField() removed, unused
  TableSorter.evtTableHeaderShiftClick removed
  EntityTablePanel changed according to the above, using a MouseAdapter
  EntityTablePanel.toggleColumnFilterPanel() simplified according to the above
  IDatebase.DATABASE_TYPE_* renamed to *
  IEntityDb.selectAll(String entityID, boolean order) removed
  IEntityDb.getDependentEntities() renamed to selectDependentEntities
  EntityDbRemoteProvider, moved dbProxy initialization from getEntityDb() to initializeEntityDb()
  Type.SHORT_DATE renamed to DATE and LONG_DATE to TIMESTAMP
  EntityDbRemoteProvider, removed proxy since it wasn't used at all
  package framework.tools created, DomainGenerator moved there along with the profiling package
  testing package moved to tools
  DomainGenerator improved, uses arguments and actually writes a file
  Entity.isValueEqualTo() removed, unused
  Entity, removed property debug code, moved relevant stuff to EntityModel
  EntityModel, property change debug code refactored and improved
  PropertyChangeEvent renamed to PropertyEvent and moved to framework.domain
  PropertyListener moved to framework.domain
  Excluded demos from jminor.jar
  EntityModel.getPropertyUIChangeEvent/getPropertyModelChangeEvent renamed to getPropertyUIEvent/getPropertyModelEvent
  Configuration.ALL_PANELS_ENABLED renamed to ALL_PANELS_ACTIVE
  EntityModel constructor refactored, addDetailModels() added
  EntityTablePanel.initializeSimpleSearchPanel() now uses Conjuntion.OR and excludes hidden properties
  EntityTableSearchModel javadoc improvements
  Configuration.DEFAULT_SHORT_DATE_FORMAT and DEFAULT_LONG_DATE_FORMAT renamed to DEFAULT_DATE_FORMAT and DEFAULT_TIMESTAMP_FORMAT respectively
  EntityApplicationPanel.initializeSettings() renamed to configureApplication
  Renamed classes in common.model.formats to include Timestamp in classname where applicable
  DateUtil.floorLongDate() renamed to floorTimestamp
  EntityModel.getPropertyUIEvent/getPropertyModelEvent renamed back to getPropertyUIChangeEvent/getPropertyModelChangeEvent
  EntityTestUnit.initializeDbConnection changed to initializeDbConnectionProvider
  Property.ForeignKeyProperty.isWeakReference renamed to lazyLoading
  DbConnection, removed a couple of synchronized instances, these simply gave the illusion of some kind of thread safety
  IEntityDb.selectPropertyValues(), removed distinct parameter
  EntityModel.uiSetValue/setValue, removed unused notify parameter
  DbLog renamed to ServerLog
  LogEntry renamed to ServerLogEntry
  Renamed a few methods according to the change above
  ServerLog, ServerLogEntry and ClientInfo from common.db to new package common.server
  FrameworkUiUtil renamed to EntityUiUtil
  Entity.getTimestampValue() added, some changes concerning Timestamp/Date in related classes
  EntityDbRemoteAdapter refactored and cleaned up a bit, inner classes MethodLogger and RequestCounter created
  EntityApplicationModel.getMainEntityModelClasses() removed
  EntityApplicationModel.initializeMainApplicationModels() return type changed from List<Class<? extends EntityModel>> to List<? extends EntityModel> and made abstract
  EntityApplicationModel.instantiateMainApplicationModel() removed
  EntityApplicationPanel refactored a little
  EntityApplicationPanel.getAboutPanel() added memory usage
  Entity.validateType() does not accept EntityKey values for type ENTITY anymore
  ThreadLocal functionality removed from date formats
  DateUtil.getDateMask(SimpleDateFormat) added
  DateMaskFormat removed, replaced by SimpleDateFormat throughout
  EntityComboBoxModel now uses setSelectedItemByPrimaryKey when setSelectedItem is called, for better lazyLoading support
  EntityKeyCriteria, changed parameter type from varargs to list
  EntityDbConnection refactored (40 loc poof! gone)
  IEntityDbRemoteServerAdmin.get/setConnectionTimeout() added
  ServerMonitor/ServerMonitorPanel, added the above configuration setting
  PropertySummaryModel refactored out of PropertySummaryPanel
  PropertySummaryModelTest added
  EntityTableModel.getPropertySummaryModel(propertyID/Property) created
  EntityTableModel.propertySummaryModels map field introduced
  EntityTableSearchModel.stSimpleSearch converted to a simple boolean, with a getter, added to constructor as well
  EntityPanel.detailEntityPanelProviders Map renamed to detailEntityPanels and turned into a List
  EntityPanel constructor now initializes the EntityTablePanel and calls setupControls()
  EntityPanel.rowColoring field removed due to the above
  EntityPanel.queryConfigurationAllowed moved to EntityTableModel
  EntityPanel.initializePanel() now returns the EntityPanel instance
  EntityTablePanel.propertySummaryPanels map field removed, unused
  common.ui.printing.* deleted
  EntityTableModel.removeAll() removed, code moved to clear()
  IEntityDbRemote, all methods removed, apparently they were unnecessary
  EntityDbConnection, minor changes in throws clauses
  EntityDbRemoteAdapter, minor changes in throws clauses
  IEntityDb.delete() argument is now List<EntityKey> instead of List<Entity>
  EntityUtil.getWhereCondition() overloaded, ValueProvider interface introduced
  I prefix removed from interface names
  PropertyCriteria now adds paranthesis around in conditions, fixes bug due to 1000 item in list limit
  ComboBoxPropertyLink now handles PropertyComboBoxModel.isNullValueSelected()
  EntityLookupField refactored a bit
  EntityLookupModel.getEntityID() added and used
  EntityDbProvider, EntityDbLocalProvider and EntityDbProviderFactory moved to framework.db.provider
  EntityModel.uiSetValue() renamed to setValue()
  EntityModel.setValue() renamed to setPropertyValue()
  EntityModel.addDetailModels() now checks if the detail models are based on valid foreign keys
  Property.maxLength field added
  EntityUiUtil.createTextField() now uses the above field to restrict the allowed number of characters in text fields
  UiUtil.makeUpperCase() overloaded for TextFieldPlus
  Property, replaced constructor arguments with chained method calls
  EntityProxy.addEntityProxy() renamed to setEntityProxy()
  EntityRepository.getDatabaseProperties() implemented with ListIterator instead of HashSet
  LoginPanel, initial focus bug in linux finally fixed
  EntityModel.addDetailModels() doesn't check if the detail models are based on valid foreign keys anymore
  EntityLookupModel.searchStringRepresentsSelected() now returns true for zero selected entities and an empty search string
  EntityPropertyEditor.getValue(), didn't take into consideration that the input field could be a EntityLookupField
  Property.propertyID, propertyType and caption fields privatized
  EntityRepository.initialize() renamed to define()
  DoubleFieldDocument and IntFieldDocument now handle null string values like their superclass
  TextBeanPropertyLink.textComponent field replaced by document
  ToggleBeanPropertyLink.button field replaced by buttonModel field
  ToggleBeanPropertyLink.getButtonModel() added
  ControlProvider toggle control methods changed according to the above
  SelectedItemBeanPropertyLink no longer implements ItemListener, uses an anonymous instance instead
  ui.property.*PropertyLink constructor argument order changed, moved UI component up front
  BooleanPropertyLink, buttonModel argument removed from constructor, buttonModel field plus getter added
  EntityUiUtil.createCheckBox() changed according to the above
  EntityPropertyLinkTest.testDatePropertyLink() improved
  EntityTableModel.filteredEntities renamed to hiddenEntities
  Configuration.DEFAULT_COMBO_BOX_NULL_VALUE_ITEM added
  FilteredComboBoxModel.nullValueItem type changed from Object to String
  EntityModel, EntityUiUtil, EntityBindingPanel and PropertyComboBoxModel changed according to the above
  FilteredComboBoxModel.nullValueItem unfinalized, setter added
  EntityPropertyEditor.InputManager.getInputManager() now throws UserException, useful when refreshing combo box models
  EntityModel.getPropertyComboBoxModel(), moved code into PropertyComboBoxModel constructor
  EntityEditModel refactored from EntityModel
  Entity.getPropertyChangeEvent() removed
  Entity.setFirePropertyChangeEvent() removed
  Entity.add/removePropertyListener() added
  State.evtSetActive/evtSetInactive removed
  State.LinkeState and getLinkedState() added
  EntityEditModel.getPropertyChangeEvent() and getPropertyValueSetEvent() refactored
  Entity.getModifiedState() now returns a linked state
  State.name field removed along with a couple constructors
  EntityEditPanel refactored out of EntityPanel
  ResultPacker is no longer serializable
  EntityPanel.editPanel field renamed to editControlPanel
  EntityPanel.editPanel field added (EntityEditPanel)
  EntityBindingPanel deleted, functionality merged into EntityEditPanel
  framework.client.ui refactoring, removed dependency cycles
  framework.client.ui.reporting.EntityReportUiUtil added
  EntityUiUtil.createEntityComboBoxPanel() and createEntityLookupFieldPanel() added
  SearchTypes renamed
  EntityDb.selectForUpdate() removed, replaced with optimistic locking
  EntityDbProvider.logout() renamed to disconnect
  EntityDb.logout() renamed to disconnect
  DbConnection.getConnectionUser() renamed to getUser()
  EntityDbRemoteServer and EntityDbRemoteServerAdmin refactored, removing cyclical dependency
  IdSource.isQueried() and isAutoIncrement() added
  EntityDbConnection uses the above in insert()
  EntityProxy nested into Entity, renamed to Proxy
  EntityKey nested into Entity, renamed to Key
  PropertyEvent nested into Property, renamed to Event
  PropertyListener nested into Property, renamed to Listener
  EntityPropertyEditor renamed to PropertyEditorPanel and refactored
  EntityPanel.initializeEditPanel(), added EntityEditModel as parameter
  EntityPanel.initializeEntityTablePanel() renamed to initializeTablePanel(), added EntityTableModel and ControlSet as parameters
  UserException removed, RuntimeException used throughout instead
  ValidationException added, thrown by EntityModel.validateData() and EntityPanel.validateData()
  UiUtil.DefaultExceptionHandler.handleException() now unwraps RuntimeExceptions
  PropertyFilterPanel refactored
  Configuration.getDefaultDateFormat() and getDefaultTimestampFormat() added
  EntityTableModel now performs the query on refresh before clearing the model
  FormattedTextPropertyLink refactored out of TextPropertyLink
  DatePropertyLink now extends FormattedTextPropertyLink
  EntityUiUtil.createTextField() refactored
  Property.isNullable field added
  EntityEditModel.isValid() default implementation uses the above
  TextPropertyLink.addValidator() added
  FormattedTextPropertyLink overrides the above and does its thing
  Configuration.INVALID_VALUE_BACKGROUND_COLOR added
  Property.description field added
  EntityRepository.set/getPropertyDescription() removed
  FormattedTextBeanPropertyLink refactored out of TextBeanPropertyLink
  AbstractPropertyLink, removed name parameter
  PropertySearchPanel refactored
  AbstractSearchPanel.getInputFormat() added
  Type.Boolean enum removed, good riddance
  BooleanComboBoxModel refactored and moved to common.model.combobox
  EntityModel.getDetailModel(String entityID) added
  EntityTestUnit.getDbConnectionProvider() renamed to getDbProvider()
  EntityKeyCriteria, removed the unused getKeys() and getProperties() methods
  Methods returning Collection fields now return a new Collection, preventing modification to the field contents
  EntityRepository.EntityDefinition moved up to framework.domain
  EntityDefinition refactored, added chained setters
  EntityRepository.define(EntityDefinition) added, rest deprecated
  EntityRepository.define(EntityDefinition) renamed to add
  EntityRepository.define() removed, wohooo
  Entity.isValueNull() needs to handle Entity.Key values as well for Type.ENTITY
  Property fields privatized, getters added
  Property.selectOnly field renamed to readOnly
  ForeignKeyProperty now uses an unmodifiable list for reference properties
  EntityDbConnection.getResultPacker(Type) is now non static and caches the packers
  EntityComboBoxModelTest and PropertyComboBoxModelTest added, rather rudimentary, to say the least
  Unit tests relying on a database connection now use a centrally initialized EntityDbProvider in EntityDbConnectionTest
  EntityDbRemoteServer.connectionTimeout field now represents seconds instead of milliseconds
  EntityTestUnit EntityDbProvider field replaced with a EntityDb field
  EntityDefinition, fixed bug preventing DenormalizedProperty from working
  Entity.hasDenormalizedProperties field removed
  State.StateGroup, now all other states are deactivated if an active state is added to the group, added a synchronized block in the add method
  Configuration.PERFORM_NULL_VALIDATION added
  EntityModel.validateData() renamed to validateEntities
  EntityModel.validateEntities() performs null validation if Configuration.PERFORM_NULL_VALIDATION is true
  EntityDefinition refactored, all Collection fields made unmodifiable
  Cryptic ret return parameter name replaced throughout
  EntityEditModel validation refactored, isValid() is now final, validate(property,value) throws ValidationException added
  EntityModel.validateEntities() now calls EntityEditModel.validate
  TextPropertyLink now uses the improved validation mechanism in EntityEditModel and adds the validation message to the component tooltip
  TextPropertyLink and FormattedTextPropertyLink refactored a bit, added toolTip functionality to the formatted one
  AbstractEntityPropertyLink.getValidationMessage() added
  EntityEditModel.getEntityComboBoxModel() and getPropertyComboBoxModel() now throw RuntimeException when no comboboxmodels have been initialized
  EntityComboBoxModel and PropertyComboBoxModel moved from model.combobox to model
  Configuration.getDefaultDateFormat() and getDefaultTimestampFormat() removed
  DefaultDateFormat and DefaultTimestampFormat added to common.model.formats
  UiUtil.ExceptionHandler moved up into common.ui package, replaced the old ExceptionHandler interface
  UiUtil.DefaultExceptionHandler moved up into common.ui.package
  DefaultDateFormat and DefaultTimestampFormat removed from common.model.formats, illegal dependency introduced
  DateUtil.getDefaultDateFormat() and getDefaultTimestampFormat() added
  DateUtil moved from framework to framework.client.model.util
  Property.mnemonic field added
  EntityUiUtil.createLabel() add, moved from EntityEditPanel, now uses the above mnemonic field
  Configuration.DEFAULT_LABEL_TEXT_ALIGNMENT added
  DomainClassGenerator improved quite a lot
  Configuration constants changed
  H2Database now uses "sa" for username in embedded mode if none is specified
  ExceptionDialog now truncates the shown message to 100 characters
  Criteria toString renamed to asString
  Database.get() removed and createInstance() added
  Dbms instance is propogated all the way down to DbConnection instead of relying on the static Database.get() method
  Dbms.getSqlDateString() implementations made thread safe using ThreadLocal DateFormats
  EntityApplicationPanel.constructApplicationModel() made non-static and protected
  EntityDbLocalProvider.disconnect() does not revalidate an invalid connection before trying to disconnect it
  EntityApplicationPanel.constructApplicationModel() made abstract and renamed to initializeApplicationModel
  EntityApplicationPanel.startApplication() signature changed accordingly
  EntityApplicationPanel.getUser() made non-static and protected
  EntityComboBoxModel now selectes item whether or not it exists in the model
  EntityApplicationPanel.saveUser() added
  EntityDbConnection.insert() now disregards id generation if primary key values are already set
  SearchType.IN removed
  EntityCriteria.propertyCriteria() added
  AuthenticationException removed, replaced with SQLException
  PropertyCriteria refactored
  common.model.formats SimpleDateFormat classes deleted
  common.model.formats.DateFormats added
  UiUtil.getSize() renamed to getScreenSizeRatio()
  common.db.Criteria.asString(), added Dbms parameter
  DbConnection.endTransaction(boolean commit) replaced with rollbackTransaction() and commitTransaction()
  EntityDb.endTransaction(boolean commit) replaced with rollbackTransaction() and commitTransaction()
  EntityDb.writeBlob() readBlob() signatures changed
  EntityCriteria removed ambiguous method
  EntityCriteria.setOrderByClause() added
  EntityModel refactored, insert/update/delete mechanism moved to EntityEditModel
  EntityEditModelTest added
  bindEventsInternal() added where applicable, so that you don't have to remember to call super.bindEvents() when overriding bindEvents()
  EntityEditModel.getEntityCopy() overloaded with includePrimaryKeyValues parameter
  EntityEditModel.insert() now uses the above method
  EntityEditModel.stEntityNotNull changed to stEntityNull
  EntityEditModel.getEntityNotNullState() renamed to getEntityNullState()
  EntityEditModel.initializeEntityComboBoxModels() removed
  EntityEditModel.isPropertyNullable() added
  EntityEditPanel.getDefaultFocusComponent() added, protected
  EntityApplicationPanel now statically initializes the Messages class
  Property.preferredWidth renamed to preferredColumnWidth
  EntityRepository.getTransientProperties() added
  EntityDefinition.transientProperties field added plus getter
  EntityResultPacker now initializes Property.TransientProperty values as null, does not apply to Property.DenomormalizedViewProperty
  EntityDefinition, added tableName to constructor, used in demos, supports multiple entities based on the same table
  EntityRepository.setEntitySearchProperties() removed
  EntityTestUnit.createEntity() added
  Property.columnHasDefaultValue field added
  UiUtil.selectAllOnFocusGained() now clears the selection on focus lost
  FilteredComboBoxModel.nullValueItem renamed to nullValueString
  FilteredComboBoxModel.emptyStringIsNull boolean field added
  PropertyComboBoxModel sets emptyStringIsNull as true
  EntityEditModel.validate() now takes an action parameter
  EntityEditModel.validate() now takes into account if a column has a default value during null value validation
  EntityUiUtil.createEntityLookupField() now calls UiUtil.selectAllOnFocusGained() for the field
  Entity.validateType() added entity type validation for foreign keys
  EntityDb.delete(EntityCriteria) added
  SelectCriteria refactored out of EntityCriteria
  CriteriaUtil added, moved static helper methods there from EntityCriteria
  EntityTableSearchModel.setExactSearchValue renamed to setSearchValues and generalized, now takes a propertyID and a Collection of values
  Configuration.COMPACT_ENTITY_PANEL_LAYOUT added
  common.db.Database renamed to DatabaseProvider
  common.db.dbms.AbstractDatabase added
  common.db.dbms.Dbms renamed to Database
  EntityDbLocalProvider, EntityDbRemoteProvider set entityDb instance to null on disconnect
  SERVER_LOGGING_ON and SERVER_SECURE_CONNECTION properties changed from 1/0 to true/false
  EntityApplicationPanel.getHelpText() added
  EntityPanel.createStaticEntityPanel refactored and simplified
  Property.BooleanProperty.toSQLString() bug fixed, return null value on false
  Entity.doSetValue()/setValue() now returns the old value
  EntityUtil.copyEntities() added
  EntityPanel.updateSelectedEntities() now copies the selected entities before setting the value, hence no resetting the value on exception
  EntityUtil.getPropertyValues() renamed to getDistinctPropertyValues()
  DatabaseProvider moved from common.db to common.db.dbms
  Util.getContents() renamed to getTextFileContents() and refactored
  Util.getTextFileContents() added Charset parameter
  EntityLookupField now calls the enterAction if the search string is empty
  Entity.getDateStringValue() renamed to getFormattedDate() and it now returns an empty string in case of a null value
  EntityApplicationPanel restructured and refactored, startApplication() and prepareFrame() no longer static
  Entity.Proxy.compareTo() by default uses Collator for i18n sorting
  TableSorter now uses a Collator for String columns for i18n sorting
  EntityTablePanel, some refactoring/restructuring/renaming
  EntityPanel, moved a few getButton() methods to EntityTablePanel
  EntityPanel, removed a couple getButton() methods, renamed others to getControl()
  EntityEditModel.validate() bug fixed, it allowed null values in non-nullable columns during update, since L921
  EntityApplicationPanel.savePreferences() added, called during exit()
  EntityTablePanel.addSouthPanelButtons() removed, initializeSouthPanelToolbar() added
  EntityPanel.getSouthPanelButtons() renamed to getSouthPanelControls(), result no longer includes update button
  EntityPanel.getUpdateButton() removed
  TextInputPanel.maxLength field added
  EntityEditPanel.createTextInputPanel() now uses the above
  TextFieldPlus, fixed bug, getMaxLength() did not prevent insert in case the content was pasted into the field
  EntityApplicationPanel.getSupportModelControlSet() renamed to getSupportTableControlSet()
  EntityApplicationPanel.showInitializationDialog() renamed to showStartupDialog()
  EntityApplicationPanel.evtApplicationStarted event field added
  StateGroup, fixed ConcurrentModification error by iterating array in updateAccordingToState()
  DbConnection.toString() added, for logging
  EntityLookupField now uses wait cursor while performing the query
  EntityEditModel.isPropertyNullable() added entity parameter
  EntityEditModel.validate() overloaded with entity parameter
  EntityPropertyLinkTest separated into multiple test classes
  DoubleTextPropertyLinkTest, added a simple validation test
  Spelling corrected throughout
  EntityLookupField now uses Entity.compareTo() for lexical ordering of selection list
  Entity.setDefaultProxy() not used in demos, problematic during tests for example, when one proxy overrides another
  EntityEditPanel.setDefaultFocus() now requests focus for the base panel in case no default focus component is set
  MethodLogger.getLogEntries() does not fail when logging is not enabled
  EntityEditModel.validate() removed value parameter
  DefaultExceptionHandler.unwrapRuntimeException() now works properly
  DefaultExceptionHandler.unwrapRuntimeException() bug fixed
  EntityTableModel.getFetchCount() added
  EntityTableCellRenderer.DateRenderer(DateFormat) added
  EntityTableCellRenderer.TimestampRenderer(DateFormat) added
  EntityTableCellRenderer.createRenderer(Property) added
  EntityTableModel.tableColumnProperties replaced by TableColumnModel
  EntityTableSearchModel.tableColumnProperties replaced by TableColumnModel
  EntityTableSearchPanel.tableColumnProperties removed
  Property.searchable added
  EntityTableModel.convertColumnIndexToView() added, basically copied from JTable
  EntityTableModel now handles dynamic column positioning
  EntityTableCellRenderer.getRenderer() now takes Property as parameter instead of column index
  EntityTablePanel show/hide table column functionality improved
  EntityTableSummaryPanel added
  EntityTablePanel.summaryPanel added
  EntityTablePanel table popup menu now added to the JTable parent as well, works for empty tables with no columns showing
  EntityTablePanel column reording allowed
  UiUtil.bindColumnAndPanelSizes() now takes column reordering in account
  EntityTableModel.getTableColumn(Property) added
  EntityTableModel.getColumnClass() and getValueAt() both use convertColumnIndexToView
  EntityTableSearchPanel now handles column reordering
  Configuration.ALLOW_COLUMN_REORDERING added
  EntityTablePanel.allowColumnReordering() added, returns the above value by default, used in initializeJTable()
  EntityTableSearchModel refactored
  EntityTableCellRenderer, EntityTablePanel changed according to the above
  PropertyFilterModel.columnIndex field removed
  EntityTablePanel, fixed column filter panel bugs introduced by allowing column reordering
  EntityDbConnection.optimisticLockingEnabled renamed to optimisticLocking, getter/setter added
  EntityDbConnectionTest, testOptimisticLocking() added
  EntityModifiedException improved
  EntityUiUtil.createEntityComboBoxFilterPanel() added
  Property.maximumFractionDigits field added
  Property.useNumberFormatGrouping field added
  EntityUiUtil.createEntityComboBoxFilterPanel(), remembers the filter criteria
  EntityTableCellRenderer.NumberRenderer.formatValue field removed
  PropertySummaryModel refactored, now uses number formatting based on the underlying property
  EntityTablePanel.setTableCellRenderer() removed
  EntityDbConnection, bug fixed, update was not performed if optimistic locking was enabled
  EntityDbRemoteAdapter now rethrows EntityModifiedException when caught during update()
  ComboBoxPropertyLinkTest added
  LookupModelPropertyLinkTest added
  BooleanPropertyLinkTest added
  BooleanPropertyLink bug fixed, doClick() was required on the actual JButton, setSelected() on the model did not suffice
  BooleanPropertyLink, ButtonModel constructor parameter added
  BooleanPropertyLink.getButtonModel() removed
  BeanPropertyLinkTest separated into multiple tests
  ToggleBeanPropertyLink, ButtonModel constructor parameter added
  ControlFactory.toggleControl() uses a ToggleButtonControl when constructing a ToggleBeanPropertyLink
  EntityUiUtil refactored
  EntityTableColumnPanel refactored from EntityTableSearchPanel and EntityTableSummaryPanel
  EntityUiUtil.createEastButtonPanel() added
  EntityUtil.activeDependencies() removed
  EntityEditPanel.createControlPanel() renamed to createPropertyPanel()
  EntityComboBoxModel.include(Entity) renamed to includeEntity
  FilteredComboBoxModel refactored, filterContents() added, different handling of nullValueString, uses Collator when sorting
  EntityComboBoxModel.foreignKeyFilterEntities and foreignKeyFilterCriteria fields added
  EntityComboBoxModel.get/setForeignKeyFilterEntities() and createForeignKeyFilterComboBoxModel() added
  EntityComboBox.createForeignKeyFilterComboBox() added
  EntityTableColumnPanel.setVerticalFillerWidth() added
  Property.columnName field added
  framework/db package classes changed according to the above
  Configuration now reads most settings from system properties
  Configuration.FILTER_QUERY_BY_MASTER removed
  Configuration.INITIAL_SEARCH_PANEL_STATE renamed to DEFAULT_SEARCH_PANEL_STATE
  common.db.SimpleCriteria added
  EntityTablePanel.getAutoResizeMode() added for overriding
  common.model.ValueMap added
  Entity now implements ValueMap
  common.model.ValueMap.StringProvider added
  domain.Entity.StringProvider added
  EntityDefinition.stringProvider field+setter+getter added
  EntityRepository.getStringProvider() added
  Entity.Proxy.toString() changed according to the above
  Entity.hasValue() renamed to containsValue()
  EntityDbConnectionPool.collectStatistics field added
  Configuration.getBooleanValue() added, used throughout
  Property.format field added
  EntityTableCellRenderer changed according to the above
  EntityDefinition.selectQuery field added
  EntityRepository.getSelectQuery() added
  EntityDbConnection.selectMany(), selectPropertyValues() and selectRowCount() changed to take the above into account
  EntityDbConnectionTest improved
  ProfilingModel/Panel improvements
  ServerMonitor improvements
  TextBeanPropertyLink now synchronizes document during setUIPropertyValue()
  EntityTableModel.getSelectedView/ModelIndexes() now return Collection<Integer> instead of int[]
  EntityTableModel.add/setSelectedItemIndexes() now takes List<Integer> as parameter
  EntityDbRemoteServer no longer keeps a reference to the Registry
  ServerMonitor improved
  Configuration.getIntValue() added
  PetstoreTest and EmpDeptTest now use createEntity() exclusively
  ClientInfo.clientHost field added
  Configuration.SERVER_LOGGING_STATUS renamed to SERVER_CLIENT_LOGGING_ENABLED, property name changed to jminor.server.clientLoggingEnabled
  Configuration.SERVER_CONNECTION_SECURE renamed to SERVER_CONNECTION_SSL_ENABLED, property name changed to jminor.server.connection.sslEnabled
  Configuration.SERVER_POOLING_INITIAL renamed to SERVER_CONNECTION_POOLING_INITIAL
  EmpDeptProfiling now performs updates as well as selects
  EntityDbConnectionTest refactored
  PropertySearchModel.toString(Object) bug that prevented proper search state string functionality fixed
  EntityRepository.isPrimaryKeyAutoGenerated() added
  EntityEditModel null validation did not handle non-auto generated primary keys
  UiUtil.setWaitCursor() now works with multiple frames/dialogs
  Unit tests migrated to Junit 4
  EntityTableModel.setSortingStatus() simplified
0.5
  EntityTablePanel.showColumn() refactored
  framework.client.ui.property renamings
  IntArray removed
  UserCancelException renamed to CancelException
  Event objects privatized behind a eventXXX() method
  DateUtil.floorDate() added
  Unit test coverage improved somewhat
0.5.1
  EntityTableSearchModel.getSearchCriteriaConjunction() renamed to getSearchConjunction()
  Unit test coverage improved
  EntityDbConnectionPoolTest added
  EntityDbRemoteServerTest added
  Tests added to common.db.dbms package
  Tests added to framework.client.model.reporting
  Unit test coverage improved
  CancelExceptionTest added
  WeakPropertyChangeListenerTest added
  ControlFactory, removed setControlXXX(Control) methods
  Control, setXXX() methods now return the Control instance allowing chained method calls
  EntityApplicationPanelTest added
  MonitorModelTest and MonitorPanelTest added
  Checkstyle run plus lots of minor fixes
  DbConnectionProvider interface added to common.db
  ConnectionPool interface added to common.db
  EntityDbConnectionPool now implements ConnectionPool
  EntityDbConnectionPool renamed to DbConnectionPool and moved to common.db along with test class
  ServerLogEntry.exception field added, included in toString()
  EntityDbRemoteAdapter uses the above
  EntityDbRemoteAdapter logs more detailed info about entity parameters used in method calls
  EntityUtil.get/parseJSONString() added
  Entity.initializeEntity() added, package protected
  EntityPanel.exportSelected() added, included as control action
  DefaultExceptionHandler.handleException() now handles a CancelException wrapped in a RuntimeException correctly
  JSON library from json.org added
  EntityDbConnection.checkIfModified() did not query by original key values, which could have changed since the entity was loaded
  EntityUtil.getWhereClause() result does not include where keyword anymore
  EntityDbRemoteAdapter logs the name of JasperReport parameters used in method calls
  common.db.pool package created and populated with relevant classes
  common.db.criteria package created and populated with relevant classes
  common.db.exception package created and populated with relevant classes
  DbConnectionPool refactored a bit
  DbUtil.getBytesFromFile() moved to Util
  DbUtil removed
  User.properties field removed
  EntityDb.getProperties() added
  ServerLogEntry.exception field replaced with stackTrace
0.5.2
  EntityUtil JSON functionality improved, now exports whole entity object graph and formats the output for readability
  EmpDeptAppPanel example action for importing JSON file added
  DateUtil.getDefaultTimestamp/DateFormat() moved to Configuration
  DateUtil.isDateValid() now requires a format argument
  DateUtil moved to common.model
  client.model.util package removed
  DateFormats.getDateFormat() added and used throughout
  DbConnection.QueryCounter added
  DbConnection added more statistics
  DbConnectionPool.cleanPool() removed parameter
  DbConnectionPool.emptyPool() added
  Entity.Key.copyEntityKeys() renamed to copy
  Entity.Key.equals(Key) removed
  db.EntityDbUtil refactored out of domain.EntityUtil
  EntityJRDataSource.getCurrentEntity() protected
  Lots of minor JavaDoc improvements
  FilteredComboBoxModel removed unused constructor and added protected initializeComparator()
  package-info.java added to all packages as well as overview.html to source root, javadoc ant target updated accordingly
  EntityModifiedException renamed to RecordModifiedException and moved to common.db
  EntityDbRemoteProviderTest added
  ProfilingModel.UsageScenario added
  EmpDepProfiling uses the above
  EntityUtil.createRandomEntity() added
  EntityTestUnit added automatic test entity creation
  Demo domain test cases take advantage of the above
  common.db.Version added
  EmpDept domain uses the above
  run_emp_dept_profiling ant task added
  Property.min/max fields added
  EntityEditModel now does range checks on numerical properties using the above
  FrameworkMessages.PROPERTY_VALUE_TOO_LARGE/SMALL added
  ProfilingModel.initializeUsageScenarios() added
  ProfilingModel.runScenario() added
  ProfilingModel.counter field as well as Counter class
  ProfilingModel added usage scenario statistics graph data set
  ProfilingPanel added usage scenario graph
  common.model.ValueProvider added (moved from EntityDbUtil)
  Property.isNumerical() added
  EntityEditModel.performRangeValidation() added
  EntityUtil.getRandomValue() now takes into account the min and max values of numerical properties
  EntityUtil.createEntity() now uses the ValueProvider interface
  Configuration.SERVER_DOMAIN_MODEL_JARS and SERVER_DOMAIN_MODEL_CLASSES added
  EntityDbRemoteServer.loadDomainModel() added
  EntityDbRemoteServer.loadDefaultDomainModels() added, which loads domain model classes and jars according to the above configuration values
  deploy_server ant task now copies jminor-demos.jar to server_dir/lib
  EntityDbServer.connect() no longer takes EntityDefinition map as parameter
  EntityDbRemoteProvider changed according to the above
  ServerMonitor.loadDomainModel() added
  ServerMonitorPanel.loadDomainModel() added and added as action as well
  Clients no longer send EntityDefinition maps when connecting to the server, the EntityDefinition loading now happens on the server only, which means that the server must preload domain models before clients working on that domain model can connect
  EntityDbRemoteServer.getEntityDefinitions() added
  EntityDbServerAdmin.getEntityDefinitions() added
  ServerMonitor.domainListModel field and getEntityDefinitions() method added
  ServerMonitorPanel added a new environment tab showing a list of entities defined in the server
  dist ant task added framework.domain classes to server_monitor.jar
  EmpDeptProfiling insertEmployee scenario fixed
  EntityTableModel summary models no longer update on evtSelectionChangedAdjusting, performance killer
  common.model.RandomItemModel, BoundedRandomItemModel and tests and and common.ui.RandomItemPanel added
  ProfilingModel.scenarioShareModel field added
  ProfilingModel.performWork() no longer abstract
  ProfilingPanel refactored and added SharePanel for usage scenario weight configuration
  build.xml joined delete_*_db and create_*_db into recreate_*_db and commented out tasks and properties related to Derby Db
  ServerMonitorPanel added a button to reset the statistics and a server shutdown confirmation dialog
  UsageScenario.getDefaultWeight() added
  EntityRepository.putAll() removed, unused
  EntityDb.getProperties() removed
  EntityDbProvider.getDescription() added
  RandomItemPanel UI changed, decrease button moved to the east side