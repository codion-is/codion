1.0b
  Improved default about dialog text and layout
  Some javadoc improvements
  Added tests to org.jminor.common.ui.control, TestBeanPropertyLink and TestMethodControl
  Added test to org.jminor.framework.client.ui.property, TestEntityPropertyLink
  Refactored and lessened package dependencies
  Moved getValueClass() from Type to Property (smaller dep. cycle in org.jminor.framework.model)
  Fixed and renamed checkout target in build.xml, minor code cleanup
  Added a couple logos, used in demos f.x.
  Profiling.selectRandomRows() added
  EntityDbConnection does not add EntityRepository info if it's already initialized
  Property.BooleanProperty.toBoolean() improved
  Navigation now selects correct detail model
  Removed CTR from resizing key combination
  Improved FrameworkUiUtil.showInDialog()
  Re-enabled EntityTestUnit.testUpdate(), added abstract modifyEntity() to accomodate
  Removed redundant entityID parameter from IEntityDb.selectMany(String entityID, List<EntityKey>)
  Completed the unit tests for EmpDept demo
  ControlIterator renamed to IControlIterator for consistency
  Fixed EmpDept test so they run on Oracle (oh the irony) (2 digit deptno values)
  Updated TipsAndTricks.txt
  Added FrameworkSettings.transferTextFieldFocusOnEnter
  Added UiUtil.transferFocusOnEnter(JTextField)
  TextFieldPlus, IntField, and FrameworkUiUtil changed according to the above
  South toolbar is now focusable
  Search sensitive refresh button now only visible when the search panel is visible
  Tentative fix of ToggleBeanPropertyLink
  Navigation is now CTR based with resizing enabled by adding SHIFT
  Added action listener to toolbar update button, showing the update popup menu (wrong position though)
  EntityPanel.prepareUI() now transfers focus to the table (not 100%, header seems to get focus) if the edit panel is hidden
  Added jminor-srctest.jar to dist
  We now throw intelligible exceptions on initialization if required system properties are not found
  EntityComboBoxModels are now provided automatically by the EntityModel if none has already been provided, changed demos to reflect this
  Moved all db connection type/host/sid/port property constants from FrameworkConstants to Constants
  Cleaned up DbUtil.getDatabaseUrl()
  Renamed a few constants in DbUtil
  Added boolean parameter propagateReferenceValues to Entity.doSetValue, selectMany->initializeValue from 7.1% to 0.4%
  FilteredComboBoxModel no longer sets the selected value to null if it does not exist after filtering
  Refactored and cleaned up Entity.doSetValue/setValue and EntityKey.setValue
  EntityDbConnection now initializes all reference property values, instead of leaving out the null references, which messes up originalValue
  propertyName replaced with propertyID throughout
  Removed unused methods from IEntityDb, restructured it and IEntityDbRemote a bit
  Privatized DbConnection.revalidate()
  Added EntityModel.allowInsert/Update/Delete, for overriding. Fx. used when initializing the EntityPanel, also prevents actual insert/update/delete
  IEntityDb.getDependentEntities now returns a Map instead of a HashMap
  Fixed Entity.propertyValuesEqual(), it now uses the entity recieved as parameter as base for the comparison
  EntityRepository.initialize now throws an exception if two properties have the same propertyID
  EntityPanel.handleSave uses tableModel.getSelectionModel().isSelectionEmpty() instead of EntityModel.isActiveEntityNull, which does not really work for non-trivial primary keys
  EntitModel.setValue does not update stEntityActive anymore, problematic when editing primary key values and thereby activating the state
  TextBeanPropertyLink now correctly disables the textComponent if LinkType is LinkType.READ_ONLY
  Removed entity history functionality, not mature enough and not really required
  Added EntityModel.containsDetailModel()
  Refactored EntityRepository
  Moved getEntityDependencies from EntityDbConnection to EntityRepository
  Fixed getEntityDependencies, by adding somewhat of a hack to EntityCriteria.isKeyCriteria()
  Removed AbstractEntityTestUnit and refactored EntityTestUnit
  Removed EntityDbConnection.getEntityCacheSize(), unused
  Removed DbConnection.getAutoIncrementValue()
  Fixed EntityTestFixture and EntityTestUnit, now initializing referenced entities is simpler and problem free
  Constants removed along with all its evil machinations (INT_NULL_VALUE...), changes throughout to accommodate
  Wait cursor now active during EntityPanel.initialize()
  Navigating through uninitialized panels now works as expected, that is, the panels are initialized and shown on demand (events were not bound until the panel was initialized)
  Some javadoc added in EntityPanel
  EntityComboBoxModel contents are now sorted by default
  Moved validateValue() and getValueClass() from Property to EntityUtil, lessening dependencies
  Refactored classes in org.jminor.framework.model and ...client.ui, lessening cyclical dependencies
  Table column header is now bold when search is enabled
  Fixed a couple bugs introduced during the refactoring, see above
  Renamed a couple events and methods in EntityTableModel
  Removed EntityPanel.usePreferredSize property
  Some restructuring/reordering/refactoring in EntityPanel, EntityTablePanel and EntityApplicationPanel
  Some more refactoring/restructuring/renaming
  Replaced the old EntityTestUnit and EntityTestFixture with org.jminor.framework.testing.EntityTestUnit
  ToggleBeanPropertyLink fixed at last
  Profiling renamed to ProfilingModel
  Fixed bug in UiUtil.makeUpperCase, null values were not handled correctly
  Fixed bug in EntityTableSearchPanel, it did not resize correctly on advanced toggle when the leftmost panel was not a search panel
  Added a condition in EntityPanel.handleSave, which prevents a save/update confirmation if updating is not allowed
  Simplified the strict editing functionality a bit, State -> boolean
  Removed a redundant variable, useDividers, from FrameworkSettings
  PostgreSQL table status query disabled since the function greatest is missing
  FrameworkSettings now Map based, useQueryRange now defaults to false
  Fixed a serious bug in Entity.getReferencedKey, where key values were cached on entityID instead of Property, fu**ing up the case where a table referenced the same table more than once
  Fixed a bug in Entity.doSetValue, it did not propogate the reference values when the new value was null, since it simply checked if the new value was an instance of Entity
  Some test case cleanup
  OPS$ removed from EntityApplicationPanel.getUserName(), now it uses the DEFAULT_USERNAME_PREFIX settings parameter
  EntityApplicationPanel.getFrameTitle() added
  Restructured EntityApplicationPanel along with minor access modifier modifications
  EntityApplicationPanel.loginRequired() added
  EntityTableCellRenderer boolean renderer now indicates row selected status
  EntityRepository.getEntityProperty() changed to getEntityProperties() since an entity can reference another via more than one property
  Property.DenormalizedViewProperty, ownerEntityID changed to a more logical referencePropertyID
  Entity.getDenormalizedValue changed according to the above
  EntityTablePanel.initializeTableCellRenderer() added
  EntityTablePanel.allowQueryConfiguration renamed to queryConfigurationAllowed, added getter
  Moved code from EntityPanel.initializeEntityTablePanel to EntityPanel.initialize, since it prevented simple overriding of said method
  A parameter to limit the number of records retrieved, recordCount, added to EntityCriteria, DbConnection and relevant EntityDbConnection code
  Removed whereClause caching in EntityCriteria, it was the source of a subtle bug, where the criteria got cached with the where keyword during server logging but used without it
  EntityPanel.setDetailPanelState() now hides all child detail panels if the state is changing from DIALOG
  Entity.isValueNull() fixed, it returned a false positive for Property.NonDbProperty values, since it only relied on Entity.getRawValue() which circumvents the EntityProxy, which handles NonDbProperties
  EntityPanel.initialize(), moved model refresh to top, otherwise the combo box models would be empty, thus preventing correct initial selection
  AbstractEntityPropertyLink, caption removed from constructor, sent property.propertyID forward as action name, removed from subclass constructors also
  EntityModel.modelCaption shortened to caption
  EntityCriteria.orderByClause added, EntityDbConnection.selectMany() changed accordingly
  IEntityDb.selectMany(EntityCriteria criteria, boolean order) removed
  Added getEntityDb() as a shorthand for getDbConnectionProvider().getEntityDb() to EntityModel and EntityTableModel
  EntityPanel.initialize(), moved model refresh back to bottom since most EntityComboBoxModels are created during UI initialization
  SmartRefresh/forceRefresh functionality removed
  TableStatus deprecated
  IEntityDb.getTableStatus() removed
  EntityCriteria.isRangeCriteria and tableHasAuditColumns properties removed
  EntityTableModel.recordCount added in place of TableStatus
  EntityRepository.createDateColumns added
  EntityTablePanel.toggleSearchPanel added, moving code from EntityPanel
  EntityComboBoxModel.setEntityCriteria() added, getEntitiesFromDb() changed accordingly
  Fixed bug preventing correct double click behavior if edit panel was null, detail panel was not shown
  FrameworkSettings.FILTER_QUERY_BY_MASTER property added, default false
  Fixed bug, resulting in a automatically created entity combobox while refreshing detail models after update and delete
  Added space bar as a selection trigger in a comboboxless PropertySearchPanel
  Property.EntityProperty is now hidden if caption is null
  EntityTablePanel, redundant private field tableControls removed
  EntityPanel, removed redundant getDefaultFocusComponent, isActive methods
  EntityPanel, getSelectedDetailPanel() now throws IllegalArgumentException if no detail panels are available
  Update selected entities popup menu now contains the properyID as caption for properties without captions
  Some minor changes, error handling/messages and javadoc
  EntityComboBoxMOdel.setEntityCriteria() no longer initiates a refresh, must be done seperately
  DbConnection.endTransaction() now calls DbConnection.commit/rollback, instead of connection.commit/rollback, results in correct logging
  DbConnection.setTransactionOpen() removed
  EntityPanel.prepareUI(), bindModelEvents(), default focus fixed, now the focus is only put on the defaultFocusComponent on panel activation if the focus owner is not a child component
  SteppedComboBox now uses dynamic popup sizing if the popupWidth property is <= 0, using the getDisplayWidth property from the UI
  PropertySearchModel, EntityComboBox now selects correct item on initialization
  EntityModel.getEntityComboBoxModel no longer creates a model if none exists
  EntityModel.createEntityComboBoxModel added
  FrameworkUiUtil.createEntityComboBox() changed accordingly
  EntityModel.getDefaultValue() renamed to getDefaultEntity
  Some javadocking
  EntityModel.createPropertyComboBox() added and createEntityComboBox protected
  EntityPanel.getInputManager, added List<Entity> toUpdate parameter
  EntityTableModel.searchStateOnRefresh changed from a hash based long to a String due to brokenness
  Property.hashCode removed
  AbstractSearchModel.toString() removed
  PropertySearchModel.hashCode() removed
  EntitySearchField added
  SearchFieldPropertyLink added
  EntityPropertyEditor changed, IEntityDbProvider instance variable removed, takes EntityModel as parameter and uses EntityModel.createEntityComboBoxModel when instantiating a combo box
  EntityModel.createEntityComboBoxModel made public, added nullValueItem and sortContents parameters
  EntityPanel.updateSelectedEntities changed to accomodate the above
  EntityRepository.propertyDescriptions map added, along with set/getPropertyDescription
  FrameworkUiUtil now adds EntityRepository.getPropertyDescription() as a tooltip on generated property compoments
  ControlSet added some null checks during additions to prevent adding null controls/actions
  EntityTablePanel.isPropertyColumnVisible() and setPropertyColumnVisible() added
  EntityPanel.selectTableColumns() added
  EntityPanel added "Select columns" action to table popup menu, added to FrameworkMessages
  EntityTableModel.clear() added
  EntityTablePanel added Clear action to popup menu
  PropertySearchModel.toString() added missing SearchType to result
  EntityTablePanel.setPropertyColumnVisible() now automatically disables searching on hidden columns
  EntitySearchField added double click as an OK trigger
  EntitySearchField.additionalSearchCriteria added
  EntityBindingFactory.createEntitySearchFieldPanel added
  FrameworkUiUtil.createEntitySearchFieldPanel added
  AbstractSearchModel.stLocked added, introducing the ability to lock search models in a certain state
  AbstractSearchPanel changed according to the above, linking components to the locked state
  PropertySearchModel.initialize fixed to prevent a property setting roundtrip back to the ui
  AbstractPropertySearchModel.stSearchEnabled privatized due to locking mechanism
  EntityModel.stAllowInsert/Delete/Update, .isAllowInsert/Delete/Update, .setAllowInsert/Delete/Update added
  EntityKey improved setValue error handling and reporting
  IntTextPropertyLink fixed valueFromText(), parsing the - sign to -1
  FilteredComboBoxModel.removeItem(), fireContentsChanged() called instead of resetContents(), thus preventing full refresh after removing an item
  UiUtil.selectDirectory() now uses user.home property in case no start directory is specified (instead of C://)
  UiUtil.selectDirectory() added dialogTitle parameter
  EntityTablePanel renamed a few fields
  EntityTablePanel added Copy cell action to JTable popup menu
  EntityUtil.getUpdateSQL() now throws an exception if no updatable properties have been modified, instead of returning a malformed SQL query
  EntitySearchField constructor now takes a String propertyID instead of Property as parameter
  PropertyCriteria now handles LIKE and NOT LIKE as IN and NOT IN when more than one value is specified
  EntityTableModel some refactoring, javadoc improvements and additions
  EntityModel javadoc improvements and additions
  AbstractSearchModel.caseInsensitive added
  PropertyFilterModel changed according to the above
  PropertySearchModel changed according to the above
  EntityRepository.initialize now correctly identifies multiple properties with same id
  EntitySearchField developed further, case sensetivity and wildcards
  EntityTableModel.simpleSearchString removed
  EntityTableModel.stSimpleSearch added
  EntityTablePanel.initializeSimpleSearchPanel improved
  FrameworkUiUtil changes to accomodate the above
  EntityTableSearchModel created, EntityTableModel, EntityTablePanel, EntityCriteriaPanel and EntityTableSearchPanel changed accordingly
  Property.EntityProperty.isLookup property added
  EntityTableModel.includeSearchComboBoxModel() removed, see above item
  EntityTableModel.propertyFilterModels moved to EntityTableSearchModel
  NotEquals60x16.gif changed
  EntitySearchModel.setExactSearchValue() now returns a boolean indicating whether the search state changed
  EntityTableModel.filterByReference() now only triggers a refresh if the search state changed
  EntityPanel.setupControls() now uses the setControl() method
  Control improved error reporting
  Util.formatLat/Lon improved
  Removed > 40 instances of generic Exception catch clauses
  EntityTableCellRenderer date renderers now accept String values as input
  EntityTablePanel.setTableCellRenderer() added
  Util.putUserPreference() and getUserPreference() added
  EntityApplicationPanel sets the last successfull login name as the default username for the currently logged on OS user
  FrameworkSettings.getDefaultUser() now returns the username found in the OS users preferences, if any
  Added preferences editing permission to jminor_client.policy
  EntityUtil.getModifiedEntities() added
  EntityDbConnection.update() does not throw an exception any more if it recieves an empty list
  DbConnection.queryObjects() added
  TestDbConnection added
  IEntityDb/EntityDbConnection.selectRows() added
  Fixed a bug in Entity, where the toString cache was not cleared on property change
  Moved EntityProxy handling from EntityRepository to static EntityProxy methods, to remove a circular class dependecy
  Added some javadocs
  Fixed a bug in EntityPanel.createStaticEntityPanel() where getAllEntitiesFromDb() was not being overridden due to changes in signature
  EntityApplicationModel.loadDbModel renamed to loadDomainModel
  FrameworkSettings.PERSIST_ENTITY_PANELS added
  EntityApplicationPanel changed according to the above
  EntitySearchField modified to be able to handle multiple entities
  SearchFieldPropertyLink modified to accommodate the above
  PropertySearchPanel now uses a EntitySearchField when a ComboBoxModel is not available in the PropertySearchModel, the field searches by every string property found in the entity
  EntityCriteriaPanel fixed so that text fields in PropertySearchPanels are no longer tiny
  EntityRepository.setPropertyDescription() fixed, it now mappes the description to entityID and propertyID instead of only propertyID, which isn't unique
  EntityRepository.setEntitySearchProperties/getEntitySearchProperties added, to hold default search by properties for entities
  EntitySearchField now sets its selected entity value as null on enter when it contains no text, instead of returning a search result containing all underlying records
  TestState and TestAggregateState added
  Property.NonDbProperty renamed to TransientProperty
  Some javadoc additions and changes
  TestDbConnection improved
  EntityModel.getDefaultEntity() fixed, now it doesn't set the value of Property.DenormalizedProperty, since that is set via its parent property
  EntityPanel.getUpdateProperties() no longer includes Property.DenormalizedProperty
  EntityModel.evtActiveEntityChanging added, fired before the active entity changes
  PropertySearchModel.toString(Object obj) fixed, now it uses entity.getPrimaryKey().toString() instead of entity.toString(), which resulted in a non-unique EntityTableSearchModel.searchState values
  EntityModel.lastDeleted/updated... fields removed
  InsertEvent, UpdateEvent and DeleteEvent added to accomodate the above change
  EntityModel.isEntityModified renamed to isActiveEntityModified and changed so that is returnes the isActive result of the state returned by getActiveEntityModifiedState
  UiUtil.selectFile() added
  Some javadoc additions and changes
  PropertySearchModel.toString() fixed, now adds the current search type to the result
  EntityModel.masterSelectionChanged changed, now when no entity is selected the master reference property value is set to null in linked detail models
  PropertySearchModel.toString() fixed again, now adds the current search type to the result only when the search is enabled
  Entity.setAs() fixed, now copies the toString cache as well
  EntityApplicationPanel.getRootEntityPanelInfo renamed to getMainEntityPanelInfo
  EntityApplicationModel.getRootEntityModelClasses renamed to getMainEntityModelClasses
  Entity.getValueAsUserString() removed
  EntityProxy.getValueAsUserString() removed
  EntityModel, if the selected record is being updated via the table model refresh the one in the model
  DbConnection, EntityDbConnection, Property and remote interfaces updated for rudimentary BLOB handling
  EntityPropertyEditor now uses Timestamp for date properties
  FrameworkUiUtil, lookup dialog added to all text fields by default
  UiUtil.selectDirectory/File now shows the last visited directory when used
  Transfer focus on enter now works for all editable comboboxes
  EntityModel.getDefaultValue(Property property) now returns null if the the combobox associated with the property has an empty string selected
  EntityComboBoxModel.setSelectedItem now translates an empty string to null
  EntitySearchField added transferFocusOnEnter property
  EntitySearchField, EntityComboBox and UiUtil.setTablePopup now show popup menus via JComponent.setComponentPopupMenu
  PropertySummaryPanel.evtStateChanged renamed to evtSummaryTypeChanged
  EntityApplicationPanel added mnemonics to main menu
  ControlSet removed mnemonic field, now it simply uses the inherited functionality of Action
  EntityPanel.showDependenciesDialog simplified
  EntityPropertyEditor mnemonics added to buttons
  UiUtil.showInDialog added mnemonic to OK button
  ExceptionDialog mnemonics added to buttons
  EntityPanel.getDefaultFocusComponent() added, for overriding
  EmpDept application i18n'ized
  EntityTablePanel.copyTableAsDelimitedString() added along with control method
  EntityPanel.selectTableColumns() moved to EntityTablePanel
  EntityModel.getAllEntities(final boolean includeFiltered) added
  FrameworkSettings.INITIAL_SEARCH_PANEL_STATE added and used in EntityPanel
  Entity.getDenormalizedViewValueAsString() added
  Util.getDelimitedString() refactored out of writeDelimitedFile
  Entity.is(final String entityID) added
  Property.getCaption() returns the caption of the parent property in case the caption is null
  EntityTableModel.initSearchModel() renamed to initializeSearchModel
  EntityRepository.getVisiblePropertyList() added