1.0b
  Improved default about dialog text and layout
  Some javadoc improvements
  Added tests to org.jminor.common.ui.control, TestBeanPropertyLink and TestMethodControl
  Added test to org.jminor.framework.client.ui.property, TestEntityPropertyLink
  Refactored and lessened package dependencies
  Moved getValueClass() from Type to Property (smaller dep. cycle in org.jminor.framework.model)
  Fixed and renamed checkout target in build.xml, minor code cleanup
  Added a couple logos, used in demos f.x.
  Profiling.selectRandomRows() added
  EntityDbConnection does not add EntityRepository info if it's already initialized
  Property.BooleanProperty.toBoolean() improved
  Navigation now selects correct detail model
  Removed CTR from resizing key combination
  Improved FrameworkUiUtil.showInDialog()
  Re-enabled EntityTestUnit.testUpdate(), added abstract modifyEntity() to accomodate
  Removed redundant entityID parameter from IEntityDb.selectMany(String entityID, List<EntityKey>)
  Completed the unit tests for EmpDept demo
  ControlIterator renamed to IControlIterator for consistency
  Fixed EmpDept test so they run on Oracle (oh the irony) (2 digit deptno values)
  Updated TipsAndTricks.txt
  Added FrameworkSettings.transferTextFieldFocusOnEnter
  Added UiUtil.transferFocusOnEnter(JTextField)
  TextFieldPlus, IntField, and FrameworkUiUtil changed according to the above
  South toolbar is now focusable
  Search sensitive refresh button now only visible when the search panel is visible
  Tentative fix of ToggleBeanPropertyLink
  Navigation is now CTR based with resizing enabled by adding SHIFT
  Added action listener to toolbar update button, showing the update popup menu (wrong position though)
  EntityPanel.prepareUI() now transfers focus to the table (not 100%, header seems to get focus) if the edit panel is hidden
  Added jminor-srctest.jar to dist
  We now throw intelligible exceptions on initialization if required system properties are not found
  EntityComboBoxModels are now provided automatically by the EntityModel if none has already been provided, changed demos to reflect this
  Moved all db connection type/host/sid/port property constants from FrameworkConstants to Constants
  Cleaned up DbUtil.getDatabaseUrl()
  Renamed a few constants in DbUtil
  Added boolean parameter propagateReferenceValues to Entity.doSetValue, selectMany->initializeValue from 7.1% to 0.4%
  FilteredComboBoxModel no longer sets the selected value to null if it does not exist after filtering
  Refactored and cleaned up Entity.doSetValue/setValue and EntityKey.setValue
  EntityDbConnection now initializes all reference property values, instead of leaving out the null references, which messes up originalValue
  propertyName replaced with propertyID throughout
  Removed unused methods from IEntityDb, restructured it and IEntityDbRemote a bit
  Privatized DbConnection.revalidate()
  Added EntityModel.allowInsert/Update/Delete, for overriding. Fx. used when initializing the EntityPanel, also prevents actual insert/update/delete
  IEntityDb.getDependentEntities now returns a Map instead of a HashMap
  Fixed Entity.propertyValuesEqual(), it now uses the entity recieved as parameter as base for the comparison
  EntityRepository.initialize now throws an exception if two properties have the same propertyID
  EntityPanel.handleSave uses tableModel.getSelectionModel().isSelectionEmpty() instead of EntityModel.isActiveEntityNull, which does not really work for non-trivial primary keys
  EntitModel.setValue does not update stEntityActive anymore, problematic when editing primary key values and thereby activating the state
  TextBeanPropertyLink now correctly disables the textComponent if LinkType is LinkType.READ_ONLY
  Removed entity history functionality, not mature enough and not really required
  Added EntityModel.containsDetailModel()
  Refactored EntityRepository
  Moved getEntityDependencies from EntityDbConnection to EntityRepository
  Fixed getEntityDependencies, by adding somewhat of a hack to EntityCriteria.isKeyCriteria()
  Removed AbstractEntityTestUnit and refactored EntityTestUnit
  Removed EntityDbConnection.getEntityCacheSize(), unused
  Removed DbConnection.getAutoIncrementValue()
  Fixed EntityTestFixture and EntityTestUnit, now initializing referenced entities is simpler and problem free
  Constants removed along with all its evil machinations (INT_NULL_VALUE...), changes throughout to accommodate
  Wait cursor now active during EntityPanel.initialize()
  Navigating through uninitialized panels now works as expected, that is, the panels are initialized and shown on demand (events were not bound until the panel was initialized)
  Some javadoc added in EntityPanel
  EntityComboBoxModel contents are now sorted by default
  Moved validateValue() and getValueClass() from Property to EntityUtil, lessening dependencies
  Refactored classes in org.jminor.framework.model and ...client.ui, lessening cyclical dependencies
  Table column header is now bold when search is enabled
  Fixed a couple bugs introduced during the refactoring, see above
  Renamed a couple events and methods in EntityTableModel
  Removed EntityPanel.usePreferredSize property
  Some restructuring/reordering/refactoring in EntityPanel, EntityTablePanel and EntityApplicationPanel
  Some more refactoring/restructuring/renaming
  Replaced the old EntityTestUnit and EntityTestFixture with org.jminor.framework.testing.EntityTestUnit
  ToggleBeanPropertyLink fixed at last
  Profiling renamed to ProfilingModel
  Fixed bug in UiUtil.makeUpperCase, null values were not handled correctly
  Fixed bug in EntityTableSearchPanel, it did not resize correctly on advanced toggle when the leftmost panel was not a search panel
  Added a condition in EntityPanel.handleSave, which prevents a save/update confirmation if updating is not allowed
  Simplified the strict editing functionality a bit, State -> boolean
  Removed a redundant variable, useDividers, from FrameworkSettings
  PostgreSQL table status query disabled since the function greatest is missing
  FrameworkSettings now Map based, useQueryRange now defaults to false
  Fixed a serious bug in Entity.getReferencedKey, where key values were cached on entityID instead of Property, fu**ing up the case where a table referenced the same table more than once
  Fixed a bug in Entity.doSetValue, it did not propogate the reference values when the new value was null, since it simply checked if the new value was an instance of Entity
  Some test case cleanup
  OPS$ removed from EntityApplicationPanel.getUserName(), now it uses the DEFAULT_USERNAME_PREFIX settings parameter
  EntityApplicationPanel.getFrameTitle() added
  Restructured EntityApplicationPanel along with minor access modifier modifications
  EntityApplicationPanel.loginRequired() added
  EntityTableCellRenderer boolean renderer now indicates row selected status
  EntityRepository.getEntityProperty() changed to getEntityProperties() since an entity can reference another via more than one property
  Property.DenormalizedViewProperty, ownerEntityID changed to a more logical referencePropertyID
  Entity.getDenormalizedValue changed according to the above
  EntityTablePanel.initializeTableCellRenderer() added
  EntityTablePanel.allowQueryConfiguration renamed to queryConfigurationAllowed, added getter
  Moved code from EntityPanel.initializeEntityTablePanel to EntityPanel.initialize, since it prevented simple overriding of said method
  A parameter to limit the number of records retrieved, recordCount, added to EntityCriteria, DbConnection and relevant EntityDbConnection code
  Removed whereClause caching in EntityCriteria, it was the source of a subtle bug, where the criteria got cached with the where keyword during server logging but used without it
  EntityPanel.setDetailPanelState() now hides all child detail panels if the state is changing from DIALOG
  Entity.isValueNull() fixed, it returned a false positive for Property.NonDbProperty values, since it only relied on Entity.getRawValue() which circumvents the EntityProxy, which handles NonDbProperties
  EntityPanel.initialize(), moved model refresh to top, otherwise the combo box models would be empty, thus preventing correct initial selection
  AbstractEntityPropertyLink, caption removed from constructor, sent property.propertyID forward as action name, removed from subclass constructors also
  EntityModel.modelCaption shortened to caption
  EntityCriteria.orderByClause added, EntityDbConnection.selectMany() changed accordingly
  IEntityDb.selectMany(EntityCriteria criteria, boolean order) removed
  Added getEntityDb() as a shorthand for getDbConnectionProvider().getEntityDb() to EntityModel and EntityTableModel
  EntityPanel.initialize(), moved model refresh back to bottom since most EntityComboBoxModels are created during UI initialization
  SmartRefresh/forceRefresh functionality removed
  TableStatus deprecated
  IEntityDb.getTableStatus() removed
  EntityCriteria.isRangeCriteria and tableHasAuditColumns properties removed
  EntityTableModel.recordCount added in place of TableStatus
  EntityRepository.createDateColumns added
  EntityTablePanel.toggleSearchPanel added, moving code from EntityPanel
  EntityComboBoxModel.setEntityCriteria() added, getEntitiesFromDb() changed accordingly
  Fixed bug preventing correct double click behavior if edit panel was null, detail panel was not shown
  FrameworkSettings.FILTER_QUERY_BY_MASTER property added, default false
  Fixed bug, resulting in a automatically created entity combobox while refreshing detail models after update and delete
  Added space bar as a selection trigger in a comboboxless PropertySearchPanel
  Property.EntityProperty is now hidden if caption is null
  EntityTablePanel, redundant private field tableControls removed
  EntityPanel, removed redundant getDefaultFocusComponent, isActive methods
  EntityPanel, getSelectedDetailPanel() now throws IllegalArgumentException if no detail panels are available
  Update selected entities popup menu now contains the properyID as caption for properties without captions
  Some minor changes, error handling/messages and javadoc
  EntityComboBoxMOdel.setEntityCriteria() no longer initiates a refresh, must be done seperately
  DbConnection.endTransaction() now calls DbConnection.commit/rollback, instead of connection.commit/rollback, results in correct logging
  DbConnection.setTransactionOpen() removed