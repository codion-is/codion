<project name="jminor-parent" default="install" xmlns:sonar="antlib:org.sonar.ant" xmlns:ivy="antlib:org.apache.ivy.ant">

  <property file="user.properties"/>
  <property file="build.properties"/>

  <import file="build-macros.xml"/>

  <path id="lib.ant.util">
    <fileset dir="${ant.lib}"/>
  </path>

  <path id="lib.framework.test">
    <fileset dir="framework/${lib}/test"/>
  </path>

  <path id="lib.runtime.server">
    <fileset dir="framework/${lib}/test"/>
    <fileset dir="framework/${package}"
             includes="jminor-framework-server.jar,
             jminor-framework-db-core.jar,
             jminor-framework-db-local.jar"/>
  </path>

  <path id="build.demos.main">
    <pathelement path="demos/chinook/build/main"/>
    <pathelement path="demos/empdept/build/main"/>
    <pathelement path="demos/petstore/build/main"/>
    <pathelement path="demos/schemabrowser/build/main"/>
    <pathelement path="demos/world/build/main"/>
  </path>

  <path id="build.plugins.main">
    <path location="plugins/imagepanel/build/main"/>
    <path location="plugins/jasperreports/build/main"/>
    <path location="plugins/json/build/main"/>
    <path location="plugins/nextreports/build/main"/>
    <path location="plugins/rest/build/main"/>
    <path location="plugins/tomcat-pool/build/main"/>
  </path>

  <path id="lib.plugins">
    <path>
      <fileset dir="plugins/imagepanel/lib/test"/>
      <fileset dir="plugins/jasperreports/lib/test"/>
      <fileset dir="plugins/json/lib/test"/>
      <fileset dir="plugins/nextreports/lib/test"/>
      <fileset dir="plugins/rest/lib/test"/>
      <fileset dir="plugins/tomcat-pool/lib/test"/>
    </path>
  </path>

  <condition property="keystore.available">
    <available file="framework/${resources.security}/JMinorServerKeystore"/>
  </condition>

  <target name="create_demo_h2db"
          description="Recreates the demo h2 database, which contains the EmpDept, Petstore, Chinook and World schemas, used by unit tests and demo applications">
    <delete dir="${db.h2.dir}"/>
    <java fork="true" classname="org.h2.tools.RunScript" classpathref="lib.framework.test" dir="demos">
      <arg line="-url jdbc:h2:file:${db.h2.dir}/${db.h2.name} -showResults -script create_h2_db.sql"/>
    </java>
  </target>

  <target name="create_keystore" unless="keystore.available"
          description="Creates a client/server keystore for running the demos">
    <genkey alias="JMinorServer" keyalg="RSA" storepass="${demo.server.keystorePassword}" validity="365"
            keystore="framework/${resources.security}/JMinorServerKeystore">
      <dname>
        <param name="CN" value="Dummy"/>
        <param name="OU" value="dummy"/>
        <param name="O" value="dummy.org"/>
        <param name="C" value="DU"/>
      </dname>
    </genkey>
    <exec executable="${java.bin}/keytool" failonerror="true">
      <arg value="-exportcert"/>
      <arg line="-keystore framework/${resources.security}/JMinorServerKeystore"/>
      <arg line="-alias JMinorServer"/>
      <arg line="-storepass ${demo.server.keystorePassword}"/>
      <arg line="-rfc"/>
      <arg line="-file framework/${resources.security}/JMinorServer.cer"/>
    </exec>
    <exec executable="${java.bin}/keytool" failonerror="true">
      <arg value="-import"/>
      <arg line="-alias JMinorServer"/>
      <arg line="-storepass ${demo.server.keystorePassword}"/>
      <arg line="-file framework/${resources.security}/JMinorServer.cer"/>
      <arg line="-keystore framework/${resources.security}/JMinorClientTruststore"/>
      <arg line="-noprompt"/>
    </exec>
    <copy file="framework/${resources.security}/JMinorClientTruststore"
          tofile="framework/${resources.security}/JMinorServerMonitorTruststore"/>
    <delete file="framework/${resources.security}/JMinorServer.cer"/>
  </target>

  <target name="deploy_server" depends="create_keystore, create_demo_h2db"
          description="Deploys the rmi server to the path defined by the 'deploy.server.path' property">
    <subant target="package" buildpath="common"/>
    <subant target="package" buildpath="framework"/>

    <copy file="common/${package}/jminor-common-core.jar"
          tofile="${deploy.server.path}/lib/jminor-common-core-${version}.jar"/>
    <copy file="common/${package}/jminor-common-db.jar"
          tofile="${deploy.server.path}/lib/jminor-common-db-${version}.jar"/>
    <copy file="common/${package}/jminor-common-model.jar"
          tofile="${deploy.server.path}/lib/jminor-common-model-${version}.jar"/>
    <copy file="common/${package}/jminor-common-server.jar"
          tofile="${deploy.server.path}/lib/jminor-common-server-${version}.jar"/>

    <copy file="framework/${package}/jminor-framework-server.jar"
          tofile="${deploy.server.path}/lib/jminor-framework-server-${version}.jar"/>
    <copy file="framework/${package}/jminor-framework-db-core.jar"
          tofile="${deploy.server.path}/lib/jminor-framework-db-core-${version}.jar"/>
    <copy file="framework/${package}/jminor-framework-db-local.jar"
          tofile="${deploy.server.path}/lib/jminor-framework-db-local-${version}.jar"/>

    <copy todir="${deploy.server.path}/lib">
      <fileset dir="framework/${lib}/test" includes="h2*.jar"/>
    </copy>

    <subant target="package" buildpath="demos"/>
    <copy file="demos/chinook/${package}/chinook-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/empdept/${package}/empdept-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/petstore/${package}/petstore-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/world/${package}/world-domain.jar" todir="${deploy.server.path}/lib"/>

    <subant target="package" buildpath="plugins"/>
    <copy file="plugins/jasperreports/${package}/jminor-plugin-jasperreports.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-jasperreports-${version}.jar"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="plugins/jasperreports/lib/runtime" excludes="*jminor*"/>
    </copy>
    <copy file="plugins/rest/${package}/jminor-plugin-rest.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-rest-${version}.jar"/>
    <copy file="plugins/json/${package}/jminor-plugin-json.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-json-${version}.jar"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="plugins/rest/lib/runtime" excludes="*jminor*"/>
    </copy>

    <copy todir="${deploy.server.path}">
      <fileset dir="framework/resources/server/"/>
    </copy>
    <copy file="${deploy.server.policy}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.allpermissions.policy}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.notsoserial.whitelist}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.keystore}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.path}/config"/>
    <chmod dir="${deploy.server.path}" perm="u+x" type="file" includes="*.sh"/>
    <copy todir="${deploy.server.path}/h2db">
      <fileset dir="${db.h2.dir}"/>
    </copy>
    <copy todir="${deploy.server.path}/reports/demos" flatten="true">
      <fileset dir="demos/chinook/build/reports" includes="**/*.jasper"/>
      <fileset dir="demos/empdept/build/reports" includes="**/*.jasper"/>
    </copy>
  </target>

  <target name="deploy_server_monitor" depends="create_keystore"
          description="Deploys the rmi server monitor to the path defined by the 'deploy.server.monitor.path' property">
    <subant target="package" buildpath="server-monitor"/>

    <copy file="server-monitor/${package}/jminor-framework-server-monitor.jar"
          tofile="${deploy.server.monitor.path}/lib/jminor-framework-server-monitor-${version}.jar"/>
    <copy todir="${deploy.server.monitor.path}/lib">
      <fileset dir="server-monitor/${lib}/runtime"/>
    </copy>
    <copy todir="${deploy.server.monitor.path}">
      <fileset dir="${basedir}/server-monitor/resources"/>
    </copy>
    <copy file="${deploy.server.monitor.policy}" todir="${deploy.server.monitor.path}/config"/>
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.monitor.path}/config"/>
    <chmod dir="${deploy.server.monitor.path}" perm="u+x" type="file" includes="*.sh"/>
  </target>

  <target name="deploy_demos" depends="create_keystore"
          description="Deploys the demo applications to the path defined by the 'deploy.demos.dir' property">
    <subant target="deploy" buildpath="demos"/>
    <delete dir="${deploy.demos.dir}"/>
    <deploy_demo_app demo-name="chinook"/>
    <deploy_demo_app demo-name="empdept"/>
    <deploy_demo_app demo-name="petstore"/>
    <deploy_demo_app demo-name="schemabrowser"/>
    <deploy_demo_app demo-name="world"/>
  </target>

  <!--<target name="deploy_generator" depends="package, create_demo_h2db"-->
  <!--description="Deploys the entity generator to the path defined by the 'deploy.generator.path' property">-->
  <!--<mkdir dir="${deploy.generator.path}"/>-->
  <!--<copy file="${package}/jminor/jminor.jar"-->
  <!--tofile="${deploy.generator.path}/lib/jminor-${version}.jar"/>-->
  <!--<copy todir="${deploy.generator.path}/lib">-->
  <!--<fileset dir="${lib}/runtime.client"/>-->
  <!--</copy>-->
  <!--<copy todir="${deploy.generator.path}">-->
  <!--<fileset dir="${basedir}/resources/entity_generator/"/>-->
  <!--</copy>-->
  <!--<copy todir="${deploy.generator.path}/h2db">-->
  <!--<fileset dir="${db.h2.dir}"/>-->
  <!--</copy>-->
  <!--<copy file="${deploy.generator.policy}" todir="${deploy.generator.config.path}"/>-->
  <!--<chmod dir="${deploy.generator.path}" perm="u+x" type="file" includes="*.sh"/>-->
  <!--</target>-->

  <target name="clean" description="Clean all modules">
    <subant target="clean" buildpath="common"/>
    <subant target="clean" buildpath="framework"/>
    <subant target="clean" buildpath="swing"/>
    <subant target="clean" buildpath="javafx"/>
    <subant target="clean" buildpath="server-monitor"/>
    <subant target="clean" buildpath="plugins"/>
    <subant target="clean" buildpath="demos"/>
  </target>

  <target name="build" description="Builds all modules">
    <subant target="build" buildpath="common"/>
    <subant target="build" buildpath="framework"/>
    <subant target="build" buildpath="swing"/>
    <subant target="build" buildpath="javafx"/>
    <subant target="build" buildpath="server-monitor"/>
    <subant target="build" buildpath="plugins"/>
    <subant target="build" buildpath="demos"/>
  </target>

  <target name="package" description="Packages all modules">
    <subant target="package" buildpath="common"/>
    <subant target="package" buildpath="framework"/>
    <subant target="package" buildpath="swing"/>
    <subant target="package" buildpath="javafx"/>
    <subant target="package" buildpath="server-monitor"/>
    <subant target="package" buildpath="plugins"/>
    <subant target="package" buildpath="demos"/>
  </target>

  <target name="run_unit_tests" description="Runs unit tests for all modules">
    <subant target="run_unit_tests" buildpath="common"/>
    <subant target="run_unit_tests" buildpath="framework"/>
    <subant target="run_unit_tests" buildpath="swing"/>
    <subant target="run_unit_tests" buildpath="javafx"/>
    <subant target="run_unit_tests" buildpath="server-monitor"/>
    <subant target="run_unit_tests" buildpath="plugins"/>
    <subant target="run_unit_tests" buildpath="demos"/>
  </target>

  <target name="deploy" depends="clear_ivy_cache" description="Publishes all project artifacts to a remote repository">
    <subant target="deploy" buildpath="common"/>
    <subant target="deploy" buildpath="framework"/>
    <subant target="deploy" buildpath="swing"/>
    <subant target="deploy" buildpath="javafx"/>
    <subant target="deploy" buildpath="server-monitor"/>
    <subant target="deploy" buildpath="plugins"/>
  </target>

  <target name="install" description="Publishes all project artifacts to a local repository">
    <subant target="install" buildpath="common"/>
    <subant target="install" buildpath="framework"/>
    <subant target="install" buildpath="swing"/>
    <subant target="install" buildpath="javafx"/>
    <subant target="install" buildpath="server-monitor"/>
    <subant target="install" buildpath="plugins"/>
  </target>

  <target name="clear_ivy_cache" description="Clears JMinor from the ivy cache">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="lib.ant.util"/>
    <ivy:configure/>
    <delete includeemptydirs="true">
      <fileset dir="${ivy.cache.dir}" includes="org.jminor/**/*"/>
      <fileset dir="${ivy.local.repository.root}/org/" includes="jminor/**/*"/>
    </delete>
  </target>

  <target name="run_server" depends="create_keystore" description="Runs the RMI server">
    <subant target="install_with_dependencies" buildpath="framework"/>
    <subant target="build" buildpath="plugins"/>
    <subant target="build" buildpath="demos"/>
    <!--todo reports, copy to temp loc-->
    <!--<copy todir="build/demos/reports" flatten="true">-->
      <!--<fileset dir="demos/chinook/build/reports" includes="**/*.jasper"/>-->
      <!--<fileset dir="demos/empdept/build/reports" includes="**/*.jasper"/>-->
    <!--</copy>-->
    <java classname="org.jminor.framework.server.DefaultEntityConnectionServerAdmin" fork="yes" dir="demos">
      <classpath>
        <path refid="lib.runtime.server"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=create_h2_db.sql"/>
      <jvmarg value="-Djminor.server.pooling.initial=scott:tiger"/>
      <jvmarg value="-Djminor.server.clientLoggingEnabled=true"/>
      <jvmarg value="-Djminor.server.port=2222"/>
      <jvmarg value="-Djminor.server.admin.port=4444"/>
      <jvmarg value="-Djminor.server.domain.classes=org.jminor.framework.demos.empdept.domain.EmpDept, org.jminor.framework.demos.petstore.domain.Petstore, org.jminor.framework.demos.chinook.domain.Chinook, org.jminor.framework.demos.schemabrowser.domain.SchemaBrowser, org.jminor.framework.demos.world.domain.World"/>
      <jvmarg value="-Djavax.net.ssl.keyStore=${deploy.server.keystore}"/>
      <jvmarg value="-Djava.security.policy=${deploy.server.policy}"/>
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=${demo.server.keystorePassword}"/>
      <jvmarg value="-Djava.rmi.server.hostname=localhost"/>
    </java>
  </target>

  <target name="sonar" depends="run_unit_tests" description="Runs a Sonar analysis on the project">
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml" classpathref="lib.ant.util"/>
    <sonar:sonar/>
  </target>

  <!--<target name="run_generator" depends="build"-->
          <!--description="Runs the entity generator">-->
    <!--<java classname="org.jminor.swing.framework.generator.ui.EntityGeneratorPanel" fork="yes">-->
      <!--<classpath>-->
        <!--<path refid="build.main"/>-->
        <!--<path refid="lib.runtime.client"/>-->
      <!--</classpath>-->
      <!--<jvmarg value="-Djminor.db.type=h2"/>-->
      <!--<jvmarg value="-Djminor.db.host=h2db/h2"/>-->
      <!--<jvmarg value="-Djminor.db.embedded=true"/>-->
    <!--</java>-->
  <!--</target>-->

</project>