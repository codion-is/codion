<?xml version="1.0" encoding="UTF-8"?>
<project name="jminor" default="build" basedir="." xmlns:jacoco="antlib:org.jacoco.ant" xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>JMinor is a minimalistic full-stack Java rich client/server CRUD application framework, based solely on Java Standard Edition components, JDBC, RMI and Swing.</description>

  <property file="user.properties"/>
  <property file="build.properties"/>

  <tstamp>
    <format property="build.date" pattern="yyyy.MM.dd HH:mm"/>
  </tstamp>

  <path id="lib.ant.util">
    <fileset dir="${lib}/ant.util"/>
  </path>

  <path id="lib.compile">
    <fileset dir="${lib}/compile"/>
  </path>

  <path id="lib.test">
    <fileset dir="${lib}/test"/>
  </path>

  <path id="lib.runtime.client">
    <fileset dir="${lib}/runtime.client"/>
  </path>

  <path id="lib.runtime.server">
    <fileset dir="${lib}/runtime.server"/>
  </path>

  <path id="lib.runtime.server-monitor">
    <fileset dir="${lib}/runtime.server-monitor"/>
  </path>

  <path id="build.main">
    <pathelement path="${build.main}"/>
  </path>

  <path id="build.test">
    <pathelement path="${build.test}"/>
  </path>

  <path id="build.demos.main">
    <pathelement path="demos/chinook/build/main"/>
    <pathelement path="demos/empdept/build/main"/>
    <pathelement path="demos/petstore/build/main"/>
    <pathelement path="demos/schemabrowser/build/main"/>
    <pathelement path="demos/world/build/main"/>
  </path>

  <path id="build.plugins.main">
    <path location="plugins/imagepanel/build/main"/>
    <path location="plugins/jasperreports/build/main"/>
    <path location="plugins/json/build/main"/>
    <path location="plugins/nextreports/build/main"/>
    <path location="plugins/rest/build/main"/>
    <path location="plugins/tomcat-pool/build/main"/>
  </path>

  <path id="lib.plugins">
    <path>
      <fileset dir="plugins/imagepanel/lib/test"/>
      <fileset dir="plugins/jasperreports/lib/test"/>
      <fileset dir="plugins/json/lib/test"/>
      <fileset dir="plugins/nextreports/lib/test"/>
      <fileset dir="plugins/rest/lib/test"/>
      <fileset dir="plugins/tomcat-pool/lib/test"/>
    </path>
  </path>

  <path id="path.unittests">
    <path refid="build.main"/>
    <path refid="build.test"/>
    <path refid="lib.test"/>
  </path>

  <condition property="keystore.available">
    <available file="${resources.security}/JMinorServerKeystore"/>
  </condition>

  <target name="resolve_libraries"
          description="Resolves all libraries according to ivy.xml">
    <mkdir dir="${lib}/ant.util"/>
    <get src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar" dest="${lib}/ant.util/ivy-2.4.0.jar" skipexisting="true"/>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="lib.ant.util"/>
    <ivy:retrieve pattern="${lib}/[conf]/[artifact]-[revision].[ext]" sync="true"/>
  </target>

  <target name="clean"
          description="Clean all output and generated dirs">
    <delete dir="${build.root}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${test}"/>
    <delete dir="${dist}"/>

    <subant target="clean" buildpath="${basedir}/demos/chinook"/>
    <subant target="clean" buildpath="${basedir}/demos/empdept"/>
    <subant target="clean" buildpath="${basedir}/demos/petstore"/>
    <subant target="clean" buildpath="${basedir}/demos/schemabrowser"/>
    <subant target="clean" buildpath="${basedir}/demos/world"/>
  </target>

  <target name="build" depends="resolve_libraries"
          description="Compiles all source files">
    <mkdir dir="${build.main}"/>
    <javac destdir="${build.main}" debug="${build.debuginfo}" includeantruntime="false">
      <src path="${src.main}"/>
      <classpath refid="lib.compile"/>
    </javac>
    <copy todir="${build.main}">
      <fileset dir="${src.main}" excludes="**/*.java"/>
    </copy>

    <mkdir dir="${build.test}"/>
    <javac destdir="${build.test}" debug="${build.debuginfo}" includeantruntime="false">
      <src path="${src.test}"/>
      <classpath>
        <path refid="lib.test"/>
        <path location="${build.main}"/>
        <path location="${build.plugins.main}"/>
      </classpath>
    </javac>
    <copy todir="${build.test}">
      <fileset dir="${src.test}" excludes="**/*.java"/>
    </copy>

    <concat destfile="${build.main}/org/jminor/common/model/version.txt">${version}-build ${build.date}</concat>
  </target>

  <target name="demos_build">
    <subant target="build" buildpath="${basedir}/demos/chinook"/>
    <subant target="build" buildpath="${basedir}/demos/empdept"/>
    <subant target="build" buildpath="${basedir}/demos/petstore"/>
    <subant target="build" buildpath="${basedir}/demos/schemabrowser"/>
    <subant target="build" buildpath="${basedir}/demos/world"/>
  </target>

  <target name="plugins_clean">
    <subant target="clean" buildpath="${basedir}/plugins/imagepanel"/>
    <subant target="clean" buildpath="${basedir}/plugins/jasperreports"/>
    <subant target="clean" buildpath="${basedir}/plugins/json"/>
    <subant target="clean" buildpath="${basedir}/plugins/nextreports"/>
    <subant target="clean" buildpath="${basedir}/plugins/rest"/>
    <subant target="clean" buildpath="${basedir}/plugins/tomcat-pool"/>
  </target>

  <target name="plugins_build">
    <subant target="build" buildpath="${basedir}/plugins/imagepanel"/>
    <subant target="build" buildpath="${basedir}/plugins/jasperreports"/>
    <subant target="build" buildpath="${basedir}/plugins/json"/>
    <subant target="build" buildpath="${basedir}/plugins/nextreports"/>
    <subant target="build" buildpath="${basedir}/plugins/rest"/>
    <subant target="build" buildpath="${basedir}/plugins/tomcat-pool"/>
  </target>

  <target name="dist" depends="clean, build, javadoc"
          description="Builds all distribution jar files in the dist directory">
    <mkdir dir="${build.main}/META-INF"/>
    <manifest file="${build.main}/META-INF/MANIFEST.MF">
      <attribute name="Specification-Title" value="JMinor Application Framework"/>
      <attribute name="Specification-Version" value="${version}"/>
      <attribute name="Specification-Vendor" value="JMinor"/>
      <attribute name="Implementation-Title" value="JMinor Application Framework"/>
      <attribute name="Implementation-Version" value="${version}"/>
      <attribute name="Implementation-Vendor" value="JMinor"/>
      <attribute name="Implementation-Vendor-Id" value="org.jminor"/>
      <attribute name="Implementation-URL" value="http://jminor.org"/>
      <attribute name="Build-Jdk" value="${java.version}"/>
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Build-Time" value="${build.date}"/>
    </manifest>

    <mkdir dir="${dist}"/>
    <dist_module module-name="jminor"/>
    <dist_module module-name="jminor-common-model"
                 includes="org/jminor/common/**"/>
    <dist_module module-name="jminor-swing-common-model"
                 includes="org/jminor/swing/common/model/**,
                   org/jminor/swing/SwingConfiguration.class"/>
    <dist_module module-name="jminor-swing-common-ui"
                 includes="org/jminor/swing/common/ui/**"/>
    <dist_module module-name="jminor-db-core"
                 includes="org/jminor/framework/Configuration.class,
                   org/jminor/framework/db/*,
                   org/jminor/framework/db/criteria/*,
                   org/jminor/framework/domain/*,
                   org/jminor/framework/i18n/**"
                 excludes="org/jminor/framework/db/remote*,
                   org/jminor/framework/db/local*,"/>
    <dist_module module-name="jminor-db-local"
                 includes="org/jminor/framework/db/local/*"/>
    <dist_module module-name="jminor-db-remote"
                 includes="org/jminor/framework/db/remote/*"/>
    <dist_module module-name="jminor-db-test"
                 includes="org/jminor/framework/testing/EntityTestUnit*"/>
    <dist_module module-name="jminor-swing-client-model"
                 includes="org/jminor/swing/framework/model/**"/>
    <dist_module module-name="jminor-swing-client-ui"
                 includes="org/jminor/swing/framework/ui/**"/>
    <dist_module module-name="jminor-swing-client-test"
                 includes="org/jminor/swing/framework/testing/**"/>
    <dist_module module-name="jminor-server"
                 includes="org/jminor/framework/server/*"/>
    <dist_module module-name="jminor-server-monitor"
                 includes="org/jminor/framework/Configuration.class,
                   org/jminor/swing/framework/server/monitor/**,
                   org/jminor/framework/server/EntityConnectionServerAdmin.class"/>

    <jar jarfile="${dist}/jminor-swing-client-bundle/jminor-swing-client-bundle.jar"
         manifest="${build.main}/META-INF/MANIFEST.MF">
      <zipgroupfileset dir="${dist}" includes="
              jminor-common-model/jminor-common-model.jar,
              jminor-swing-common-model/jminor-swing-common-model.jar,
              jminor-swing-common-ui/jminor-swing-common-ui.jar,
              jminor-db-core/jminor-db-core.jar,
              jminor-db-local/jminor-db-local.jar,
              jminor-db-remote/jminor-db-remote.jar,
              jminor-swing-client-model/jminor-swing-client-model.jar,
              jminor-swing-client-ui/jminor-swing-client-ui.jar"/>
    </jar>
    <jar jarfile="${dist}/jminor-swing-client-bundle/jminor-swing-client-bundle-sources.jar"
         manifest="${build.main}/META-INF/MANIFEST.MF">
      <zipgroupfileset dir="${dist}" includes="
              jminor-common-model/jminor-common-model-sources.jar,
              jminor-swing-common-model/jminor-swing-common-model-sources.jar,
              jminor-swing-common-ui/jminor-swing-common-ui-sources.jar,
              jminor-db-core/jminor-db-core-sources.jar,
              jminor-db-local/jminor-db-local-sources.jar,
              jminor-db-remote/jminor-db-remote-sources.jar,
              jminor-swing-client-model/jminor-swing-client-model-sources.jar,
              jminor-swing-client-ui/jminor-swing-client-ui-sources.jar"/>
    </jar>
    <jar jarfile="${dist}/jminor-swing-client-bundle/jminor-swing-client-bundle-javadoc.jar"
         manifest="${build.main}/META-INF/MANIFEST.MF">
      <zipgroupfileset dir="${dist}" includes="
              jminor-common-model/jminor-common-model-javadoc.jar,
              jminor-swing-common-model/jminor-swing-common-model-javadoc.jar,
              jminor-swing-common-ui/jminor-swing-common-ui-javadoc.jar,
              jminor-db-core/jminor-db-core-javadoc.jar,
              jminor-db-local/jminor-db-local-javadoc.jar,
              jminor-db-remote/jminor-db-remote-javadoc.jar,
              jminor-swing-client-model/jminor-swing-client-model-javadoc.jar,
              jminor-swing-client-ui/jminor-swing-client-ui-javadoc.jar"/>
    </jar>

    <copy file="${basedir}/changelog.txt" todir="${dist}"/>
  </target>

  <target name="demos_dist">
    <subant target="dist" buildpath="${basedir}/demos/chinook"/>
    <subant target="dist" buildpath="${basedir}/demos/empdept"/>
    <subant target="dist" buildpath="${basedir}/demos/petstore"/>
    <subant target="dist" buildpath="${basedir}/demos/schemabrowser"/>
    <subant target="dist" buildpath="${basedir}/demos/world"/>
  </target>

  <target name="plugins_dist">
    <subant target="dist" buildpath="${basedir}/plugins/imagepanel"/>
    <subant target="dist" buildpath="${basedir}/plugins/jasperreports"/>
    <subant target="dist" buildpath="${basedir}/plugins/json"/>
    <subant target="dist" buildpath="${basedir}/plugins/nextreports"/>
    <subant target="dist" buildpath="${basedir}/plugins/rest"/>
    <subant target="dist" buildpath="${basedir}/plugins/tomcat-pool"/>
  </target>

  <target name="publish" depends="dist"
          description="Publish all project artifacts">
    <subant target="publish" buildpath="${basedir}/resources/publish/common-model"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/db-core"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/db-local"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/db-remote"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/db-test"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-common-model"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-common-ui"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-client-model"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-client-ui"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-client-test"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/swing-client-bundle"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/server"/>
    <subant target="publish" buildpath="${basedir}/resources/publish/server-monitor"/>
  </target>

  <target name="plugins_publish">
    <subant target="publish" buildpath="${basedir}/plugins/imagepanel"/>
    <subant target="publish" buildpath="${basedir}/plugins/jasperreports"/>
    <subant target="publish" buildpath="${basedir}/plugins/json"/>
    <subant target="publish" buildpath="${basedir}/plugins/nextreports"/>
    <subant target="publish" buildpath="${basedir}/plugins/rest"/>
    <subant target="publish" buildpath="${basedir}/plugins/tomcat-pool"/>
  </target>

  <target name="javadoc" depends="build" unless="skip.javadoc"
          description="Generates framework javadocs">
    <delete dir="${javadoc}" includeEmptyDirs="true"/>
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}" sourcepath="${src.main}" packagenames="org.jminor.*" Encoding="UTF-8"
             docencoding="UTF-8" author="true" version="true" use="true"
             windowtitle="JMinor v${version} API" doctitle="JMinor v${version} API"
             group="Common org.jminor.common*,
                    Client org.jminor.framework.client*,
                    Db org.jminor.framework.db*,
                    Domain org.jminor.framework.domain*,
                    Server org.jminor.framework.server*">
      <classpath refid="lib.compile"/>
      <link href="http://download.oracle.com/javase/8/docs/api/"/>
    </javadoc>
  </target>

  <target name="deploy_server" depends="dist, plugins_dist, demos_dist, create_keystore, create_h2db"
          description="Deploys the rmi server to the path defined by the 'deploy.server.path' property">
    <copy file="${dist}/jminor-common-model/jminor-common-model.jar" todir="${deploy.server.path}/lib"/>
    <copy file="${dist}/jminor-db-core/jminor-db-core.jar" todir="${deploy.server.path}/lib"/>
    <copy file="${dist}/jminor-db-local/jminor-db-local.jar" todir="${deploy.server.path}/lib"/>
    <copy file="${dist}/jminor-server/jminor-server.jar" todir="${deploy.server.path}/lib"/>

    <copy file="demos/chinook/dist/chinook-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/empdept/dist/empdept-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/petstore/dist/petstore-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/schemabrowser/dist/schemabrowser-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="demos/world/dist/world-domain.jar" todir="${deploy.server.path}/lib"/>

    <copy file="plugins/jasperreports/dist/jminor-plugin-jasperreports.jar" todir="${deploy.server.path}/lib"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="plugins/jasperreports/lib/runtime"/>
    </copy>
    <copy file="plugins/rest/dist/jminor-plugin-rest.jar" todir="${deploy.server.path}/lib"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="plugins/rest/lib/runtime"/>
    </copy>

    <copy todir="${deploy.server.path}/lib">
      <fileset dir="${lib}/runtime.server"/>
    </copy>
    <copy todir="${deploy.server.path}">
      <fileset dir="${basedir}/resources/server/"/>
    </copy>
    <copy file="${deploy.server.policy}" todir="${deploy.server.config.path}"/>
    <copy file="${deploy.server.allpermissions.policy}" todir="${deploy.server.config.path}"/>
    <copy file="${deploy.server.keystore}" todir="${deploy.server.config.path}"/>
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.config.path}"/>
    <chmod dir="${deploy.server.path}" perm="u+x" type="file" includes="*.sh"/>
    <copy todir="${deploy.server.path}/h2db">
      <fileset dir="${db.h2.dir}"/>
    </copy>
    <copy todir="${deploy.server.path}/reports/demos" flatten="true">
      <fileset dir="${basedir}/demos/chinook/build/reports" includes="**/*.jasper"/>
      <fileset dir="${basedir}/demos/empdept/build/reports" includes="**/*.jasper"/>
    </copy>
  </target>

  <target name="deploy_server_monitor" depends="dist, create_keystore"
          description="Deploys the rmi server monitor to the path defined by the 'deploy.server.monitor.path' property">
    <mkdir dir="${deploy.server.monitor.path}"/>
    <copy file="${dist}/jminor-common-model/jminor-common-model.jar" todir="${deploy.server.monitor.path}/lib"/>
    <copy file="${dist}/jminor-swing-common-model/jminor-swing-common-model.jar" todir="${deploy.server.monitor.path}/lib"/>
    <copy file="${dist}/jminor-swing-common-ui/jminor-swing-common-ui.jar" todir="${deploy.server.monitor.path}/lib"/>
    <copy file="${dist}/jminor-server-monitor/jminor-server-monitor.jar" todir="${deploy.server.monitor.path}/lib"/>
    <copy todir="${deploy.server.monitor.path}/lib">
      <fileset dir="${lib}/runtime.server-monitor"/>
    </copy>
    <copy todir="${deploy.server.monitor.path}">
      <fileset dir="${basedir}/resources/server_monitor/"/>
    </copy>
    <copy file="${deploy.server.monitor.policy}" todir="${deploy.server.monitor.config.path}"/>
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.monitor.config.path}"/>
    <chmod dir="${deploy.server.monitor.path}" perm="u+x" type="file" includes="*.sh"/>
  </target>

  <target name="deploy_generator" depends="dist, create_h2db"
          description="Deploys the entity generator to the path defined by the 'deploy.generator.path' property">
    <mkdir dir="${deploy.generator.path}"/>
    <copy file="${dist}/jminor/jminor.jar" todir="${deploy.generator.path}/lib"/>
    <copy todir="${deploy.generator.path}/lib">
      <fileset dir="${lib}/runtime.client"/>
    </copy>
    <copy todir="${deploy.generator.path}">
      <fileset dir="${basedir}/resources/entity_generator/"/>
    </copy>
    <copy todir="${deploy.generator.path}/h2db">
      <fileset dir="${db.h2.dir}"/>
    </copy>
    <copy file="${deploy.generator.policy}" todir="${deploy.generator.config.path}"/>
    <chmod dir="${deploy.generator.path}" perm="u+x" type="file" includes="*.sh"/>
  </target>

  <target name="deploy_demos" depends="dist, plugins_dist, demos_dist, create_keystore, create_h2db"
          description="Deploys the demo applications to the path defined by the 'deploy.demos.dir' property">
    <taskdef name="getdown_digest" classname="com.threerings.getdown.tools.DigesterTask" classpathref="lib.ant.util"/>
    <!--Setup-->
    <jar jarfile="${deploy.demos.dir}/libraries.jar">
      <zipgroupfileset dir="${lib}/runtime.client" includes="*.jar" excludes="*api-doc.jar, *src.jar, META-INF/**/*"/>
      <zipfileset src="${dist}/jminor-swing-client-bundle/jminor-swing-client-bundle.jar"/>
      <zipfileset src="plugins/jasperreports/dist/jminor-plugin-jasperreports.jar" excludes="META-INF/**/*"/>
      <zipfileset src="plugins/nextreports/dist/jminor-plugin-nextreports.jar" excludes="META-INF/**/*"/>
      <zipgroupfileset dir="plugins/jasperreports/lib/test" excludes="META-INF/**/*"/>
      <zipgroupfileset dir="plugins/nextreports/lib/test" excludes="META-INF/**/*"/>
      <fileset file="${deploy.demos.truststore}"/>
    </jar>
    <deploy_demo_app app-id="empdept" app-name="EmpDept JMinor Demo"
                     report="${basedir}/demos/empdept/build/reports/empdept_employees.jasper"
                     main-class="org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel"/>
    <deploy_demo_app app-id="chinook" app-name="Chinook JMinor Demo"
                     report="${basedir}/demos/chinook/build/reports/customer_report.jasper"
                     main-class="org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel"/>
    <deploy_demo_app app-id="petstore" app-name="Petstore JMinor Demo"
                     main-class="org.jminor.framework.demos.petstore.client.ui.PetstoreAppPanel"/>
    <deploy_demo_app app-id="world" app-name="World JMinor Demo"
                     main-class="org.jminor.framework.demos.world.client.ui.WorldAppPanel"/>
    <!--Cleanup-->
    <delete file="${deploy.demos.dir}/libraries.jar"/>
  </target>

  <target name="deploy_all" depends="clean, dist, plugins_dist, demos_dist, deploy_server, deploy_server_monitor, deploy_demos, deploy_generator"
          description="A convenience target for deploying the server, server monitor and demo applications"/>

  <target name="run_unit_tests" depends="clean, build"
          description="Runs the framework unit tests with JaCoCo coverage">
    <delete dir="${test.reports}" includeEmptyDirs="true"/>
    <delete dir="${test.reports.html}" includeEmptyDirs="true"/>
    <delete dir="${test.coveragereport.xml}" includeEmptyDirs="true"/>
    <delete dir="${test.coveragereport.html}" includeEmptyDirs="true"/>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" classpathref="lib.ant.util"/>

    <jacoco:coverage destfile="${test.reports}/jacoco.exec">
      <junit printsummary="yes" haltonfailure="true" haltonerror="true" fork="yes" forkmode="once">
        <formatter type="xml" usefile="true"/>
        <classpath refid="path.unittests"/>
        <jvmarg value="-Djava.security.policy=resources/security/all_permissions.policy"/>
        <jvmarg value="-Djminor.db.type=${junit.db.type}"/>
        <jvmarg value="-Djminor.db.host=${junit.db.host}"/>
        <jvmarg value="-Djminor.db.port=${junit.db.port}"/>
        <jvmarg value="-Djminor.db.sid=${junit.db.sid}"/>
        <jvmarg value="-Djminor.db.embedded=${junit.db.embedded}"/>
        <jvmarg value="-Djminor.db.embeddedInMemory=${junit.db.embeddedInMemory}"/>
        <jvmarg value="-Djminor.db.initScript=${junit.db.initScript}"/>
        <jvmarg value="-Djminor.unittest.username=${junit.username}"/>
        <jvmarg value="-Djminor.unittest.password=${junit.password}"/>
        <batchtest todir="${test.reports}">
          <fileset dir="${src.test}" includes="**/*Test.java"/>
        </batchtest>
      </junit>
    </jacoco:coverage>

    <mkdir dir="${test.reports.html}"/>
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}" includes="TEST-*.xml"/>
      <report format="frames" todir="${test.reports.html}"/>
    </junitreport>

    <mkdir dir="${test.coveragereport.xml}"/>
    <jacoco:report>
      <executiondata>
        <file file="${test.reports}/jacoco.exec" />
      </executiondata>

      <structure name="JMinor JaCoCo Results">
        <classfiles>
          <fileset dir="${build.main}"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${src.main}"/>
        </sourcefiles>
      </structure>

      <html destdir="${test.coveragereport.html}" />
      <xml destfile="${test.coveragereport.xml}/report.xml" />
    </jacoco:report>
  </target>

  <target name="demos_run_unit_tests" depends="build, plugins_build, demos_build">
    <subant target="run_unit_tests" buildpath="${basedir}/demos/chinook"/>
    <subant target="run_unit_tests" buildpath="${basedir}/demos/empdept"/>
    <subant target="run_unit_tests" buildpath="${basedir}/demos/petstore"/>
    <subant target="run_unit_tests" buildpath="${basedir}/demos/schemabrowser"/>
    <subant target="run_unit_tests" buildpath="${basedir}/demos/world"/>
  </target>

  <target name="plugins_run_unit_tests" depends="build, plugins_build">
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/imagepanel"/>
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/jasperreports"/>
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/json"/>
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/nextreports"/>
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/rest"/>
    <subant target="run_unit_tests" buildpath="${basedir}/plugins/tomcat-pool"/>
  </target>

  <target name="run_demo_chinook_local" depends="build"
          description="Runs the Chinook demo application with a local db connection">
    <java classname="org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=${demo.db.initScript}"/>
      <jvmarg value="-Djminor.report.path=demos/chinook/build/reports"/>
    </java>
  </target>

  <target name="run_demo_chinook_remote" depends="build, create_keystore"
          description="Runs the Chinook demo application with a remote db connection">
    <java classname="org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djminor.report.path=demos/chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_demo_chinook_load_test" depends="build, demos_build, create_keystore"
          description="Runs the Chinook load testing application with a remote db connection">
    <java classname="org.jminor.framework.demos.chinook.testing.ChinookLoadTest" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djminor.report.path=demos/chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_load_test.policy"/>
    </java>
  </target>

  <target name="run_server" depends="build, plugins_build, demos_build, create_keystore"
          description="Runs the RMI server">
    <copy todir="build/demos/reports" flatten="true">
      <fileset dir="${basedir}/demos/chinook/build/reports" includes="**/*.jasper"/>
      <fileset dir="${basedir}/demos/empdept/build/reports" includes="**/*.jasper"/>
    </copy>
    <java classname="org.jminor.framework.server.DefaultEntityConnectionServerAdmin" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.runtime.server"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=${demo.db.initScript}"/>
      <jvmarg value="-Djminor.server.pooling.initial=scott:tiger"/>
      <jvmarg value="-Djminor.server.clientLoggingEnabled=true"/>
      <jvmarg value="-Djminor.server.port=2222"/>
      <jvmarg value="-Djminor.server.admin.port=4444"/>
      <jvmarg value="-Djminor.server.domain.classes=org.jminor.framework.demos.empdept.domain.EmpDept, org.jminor.framework.demos.petstore.domain.Petstore, org.jminor.framework.demos.chinook.domain.Chinook, org.jminor.framework.demos.schemabrowser.domain.SchemaBrowser, org.jminor.framework.demos.world.domain.World"/>
      <jvmarg value="-Djavax.net.ssl.keyStore=${resources.security}/JMinorServerKeystore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_server.policy"/>
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=${demo.server.keystorePassword}"/>
      <jvmarg value="-Djava.rmi.server.hostname=localhost"/>
    </java>
    <delete dir="build/demos"/>
  </target>

  <target name="run_server_monitor" depends="build, create_keystore"
          description="Runs the RMI server monitor">
    <java classname="org.jminor.swing.framework.server.monitor.ui.EntityServerMonitorPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="lib.runtime.server-monitor"/>
      </classpath>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorServerMonitorTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_server_monitor.policy"/>
    </java>
  </target>

  <target name="run_generator" depends="build"
          description="Runs the entity generator">
    <java classname="org.jminor.swing.framework.generator.ui.EntityGeneratorPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="lib.runtime.client"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=h2"/>
      <jvmarg value="-Djminor.db.host=h2db/h2"/>
      <jvmarg value="-Djminor.db.embedded=true"/>
    </java>
  </target>

  <target name="create_h2db"
          description="Recreates the demo h2 database, which contains the EmpDept, Petstore, Chinook and World schemas, used by unit tests and demo applications">
    <delete dir="${db.h2.dir}"/>
    <java fork="true" classname="org.h2.tools.RunScript" classpathref="lib.test">
      <arg line="-url jdbc:h2:file:${db.h2.dir}/${db.h2.name} -showResults -script ${db.init.h2}"/>
    </java>
  </target>

  <target name="create_keystore" unless="keystore.available"
          description="Creates a client/server keystore for running the demos">
    <genkey alias="JMinorServer" keyalg="RSA" storepass="${demo.server.keystorePassword}" validity="365"
            keystore="${resources.security}/JMinorServerKeystore">
      <dname>
        <param name="CN" value="Dummy"/>
        <param name="OU" value="dummy"/>
        <param name="O" value="dummy.org"/>
        <param name="C" value="DU"/>
      </dname>
    </genkey>
    <exec executable="${java.bin}/keytool" failonerror="true">
      <arg value="-exportcert"/>
      <arg line="-keystore ${resources.security}/JMinorServerKeystore"/>
      <arg line="-alias JMinorServer"/>
      <arg line="-storepass ${demo.server.keystorePassword}"/>
      <arg line="-rfc"/>
      <arg line="-file ${resources.security}/JMinorServer.cer"/>
    </exec>
    <exec executable="${java.bin}/keytool" failonerror="true">
      <arg value="-import"/>
      <arg line="-alias JMinorServer"/>
      <arg line="-storepass ${demo.server.keystorePassword}"/>
      <arg line="-file ${resources.security}/JMinorServer.cer"/>
      <arg line="-keystore ${resources.security}/JMinorClientTruststore"/>
      <arg line="-noprompt"/>
    </exec>
    <copy file="${resources.security}/JMinorClientTruststore" tofile="${resources.security}/JMinorServerMonitorTruststore"/>
    <delete file="${resources.security}/JMinorServer.cer"/>
  </target>

  <macrodef name="dist_module">
    <attribute name="module-name"/>
    <attribute name="includes" default=""/>
    <attribute name="excludes" default=""/>
    <sequential>
      <jar jarfile="${dist}/@{module-name}/@{module-name}.jar" basedir="${build.main}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
      <jar jarfile="${dist}/@{module-name}/@{module-name}-sources.jar" basedir="${src.main}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
      <jar jarfile="${dist}/@{module-name}/@{module-name}-javadoc.jar" basedir="${javadoc}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
    </sequential>
  </macrodef>

  <macrodef name="deploy_demo_app">
    <attribute name="app-id"/>
    <attribute name="app-name"/>
    <attribute name="main-class"/>
    <attribute name="report" default=""/>
    <sequential>
      <mkdir dir="${deploy.demos.dir}/@{app-id}/META-INF"/>
      <manifest file="${deploy.demos.dir}/@{app-id}/META-INF/MANIFEST.MF">
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Application-Name" value="@{app-name}"/>
        <attribute name="Specification-Title" value="jminor.demos"/>
        <attribute name="Specification-Name" value="jminor.demos"/>
        <attribute name="Specification-Vendor" value="${deploy.demos.codebase}"/>
        <attribute name="Permissions" value="all-permissions"/>
        <attribute name="Codebase" value="${deploy.demos.codebase}"/>
        <attribute name="Main-Class" value="@{main-class}"/>
      </manifest>
      <zip destfile="${deploy.demos.dir}/@{app-id}/@{app-id}.jar">
        <zipfileset src="${basedir}/demos/@{app-id}/dist/@{app-id}.jar" excludes="META-INF/*"/>
        <zipfileset src="${deploy.demos.dir}/libraries.jar" excludes="META-INF/*"/>
        <zipfileset dir="${deploy.demos.dir}/@{app-id}" includes="META-INF/*"/>
        <zipfileset dir="${basedir}/demos/@{app-id}/src/main/config/" includes="@{app-id}.jnlp" fullpath="JNLP-INF/APPLICATION.JNLP"/>
        <zipfileset file="@{report}" prefix="reports"/>
      </zip>
      <delete dir="${deploy.demos.dir}/@{app-id}/META-INF"/>
      <signjar jar="${deploy.demos.dir}/@{app-id}/@{app-id}.jar" alias="${jar.sign.alias}"
               storepass="${jar.sign.storepass}" keystore="${jar.sign.keystore}"/>
      <copy file="${basedir}/demos/@{app-id}/src/main/config/@{app-id}.jnlp" todir="${deploy.demos.dir}/@{app-id}"/>
      <copy file="${basedir}/demos/@{app-id}/src/main/config/getdown.txt" todir="${deploy.demos.dir}/@{app-id}"/>
      <copy file="${basedir}/docs/jminor.org/jminor_logo_black_medium.png" todir="${deploy.demos.dir}/@{app-id}"/>
      <getdown_digest appdir="${deploy.demos.dir}/@{app-id}"/>
      <zip destfile="${deploy.demos.dir}/@{app-id}/@{app-id}.zip">
        <zipfileset file="${deploy.demos.dir}/@{app-id}/@{app-id}.jar"/>
        <zipfileset dir="${db.h2.dir}" prefix="h2db"/>
        <zipfileset file="${basedir}/demos/config/shared/h2db.config"/>
        <zipfileset file="${basedir}/demos/config/shared/remote.config"/>
      </zip>
    </sequential>
  </macrodef>
</project>