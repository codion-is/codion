<?xml version="1.0" encoding="UTF-8"?>
<project name="jminor" default="deploy_all" basedir=".">

  <description>JMinor RAD Framework build file</description>

  <property file="build.properties"/>

  <path id="libraries">
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <fileset id="common_resources" dir="${src}" includes=
          "org/jminor/common/**/*.gif, org/jminor/common/**/*.png, org/jminor/common/**/*.properties, org/jminor/common/**/*.txt, log4j.properties"/>
  <fileset id="framework_resources" dir="${src}" includes=
          "org/jminor/framework/**/*.gif, org/jminor/framework/**/*.png, org/jminor/framework/**/*.properties, org/jminor/framework/**/*.txt" />
  <fileset id="common_test_resources" dir="${srctest}" includes=
          "org/jminor/common/**/*.gif, org/jminor/common/**/*.properties, org/jminor/common/**/*.txt, log4j.properties"/>
  <fileset id="framework_test_resources" dir="${srctest}" includes=
          "org/jminor/framework/**/*.gif, org/jminor/framework/**/*.png, org/jminor/framework/**/*.properties, org/jminor/framework/**/*.txt" />
  <fileset id="framework_demos_resources" dir="${srcdemos}" includes=
          "org/jminor/framework/**/*.gif, org/jminor/framework/**/*.png, org/jminor/framework/**/*.properties, org/jminor/framework/**/*.txt" />

  <target name="clean">
    <delete dir="${build.base}" includeEmptyDirs="true" />
    <delete dir="${build.demos}" includeEmptyDirs="true" />
    <delete dir="${build.test}" includeEmptyDirs="true" />
    <delete dir="${build.root}" includeEmptyDirs="true" />
    <delete dir="${reports}" includeEmptyDirs="true" />
    <delete dir="${htmlreports}" includeEmptyDirs="true" />
    <delete dir="${test}" includeEmptyDirs="true" />
  </target>

  <target name="init" depends="clean">
    <mkdir dir="${build.base}" />
    <mkdir dir="${build.demos}" />
    <mkdir dir="${build.test}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${dist}/current" />
    <mkdir dir="${reports}" />
    <mkdir dir="${htmlreports}" />
  </target>

  <target name="build" depends="init">
    <tstamp>
      <format property="DSTAMP" pattern="yyyy.MM.dd HH:mm" />
    </tstamp>
    <javac destdir="${build.base}" debug="${build.debuginfo}" >
      <src path="${src}" />
      <classpath refid="libraries"/>
    </javac>

    <rmic base="${build.base}" includes="org/jminor/framework/server/EntityDbRemoteServer.class,
                                         org/jminor/framework/server/EntityDbRemoteAdapter.class">
      <classpath refid="libraries"/>
    </rmic>

    <copy todir="${build.base}" >
      <fileset refid="common_resources" />
      <fileset refid="framework_resources" />
    </copy>

    <javac destdir="${build.demos}" debug="{build.debug}" >
      <src path="${srcdemos}" />
      <classpath>
        <path refid="libraries" />
        <path location="${build.base}" />
      </classpath>
    </javac>

    <copy todir="${build.demos}" >
      <fileset refid="framework_demos_resources" />
    </copy>

    <javac destdir="${build.test}" debug="{build.debug}" >
      <src path="${srctest}" />
      <classpath>
        <path refid="libraries" />
        <path location="${build.base}" />
        <path location="${build.demos}" />
      </classpath>
    </javac>

    <copy todir="${build.test}" >
      <fileset refid="common_test_resources" />
      <fileset refid="framework_test_resources" />
    </copy>

    <concat destfile="${build.base}/org/jminor/common/model/version.txt">v${version} build ${DSTAMP}</concat>
  </target>

  <target name="dist" depends="report">
    <tstamp />
    <mkdir dir="dist/${version}" />
    <jar jarfile="${dist}/${version}/${ant.project.name}.jar" basedir="${build.base}" />
    <zip destfile="${dist}/${version}/${ant.project.name}.jar" update="true" duplicate="add" >
      <fileset refid="common_resources" />
      <fileset refid="framework_resources" />
    </zip>

    <jar jarfile="${dist}/${version}/${ant.project.name}-common.jar" basedir="${build.base}"
         includes="org/jminor/common/**"/>
    <zip destfile="${dist}/${version}/${ant.project.name}-common.jar" update="true" duplicate="add" >
      <fileset refid="common_resources" />
    </zip>

    <jar jarfile="${dist}/${version}/${ant.project.name}-client.jar" basedir="${build.base}"
         includes="org/jminor/framework/FrameworkSettings*,
                org/jminor/framework/FrameworkConstants*,
                org/jminor/framework/client/**,
                org/jminor/framework/profiling/**,
                org/jminor/framework/model/**,
                org/jminor/framework/db/**,
                org/jminor/framework/i18n/**,
                org/jminor/framework/server/EntityDbRemoteProvider*,
                org/jminor/framework/server/IEntityDbRemote.class,
                org/jminor/framework/server/IEntityDbRemoteServer.class,
                org/jminor/framework/server/IEntityDbRemoteServerAdmin.class,
                org/jminor/framework/server/EntityDbRemoteAdapter_Stub.class,
                org/jminor/framework/server/EntityDbRemoteServer_Stub.class"/>

    <jar jarfile="${dist}/${version}/${ant.project.name}-client-remote.jar" basedir="${build.base}"
         includes="org/jminor/framework/FrameworkSettings*,
                org/jminor/framework/FrameworkConstants*,
                org/jminor/framework/client/**,
                org/jminor/framework/profiling/**,
                org/jminor/framework/model/**,
                org/jminor/framework/db/criteria/**,
                org/jminor/framework/db/IEntityDb*,
                org/jminor/framework/db/EntityDbProviderFactory*,
                org/jminor/framework/i18n/**,
                org/jminor/framework/server/EntityDbRemoteProvider*,
                org/jminor/framework/server/IEntityDbRemote.class,
                org/jminor/framework/server/IEntityDbRemoteServer.class,
                org/jminor/framework/server/IEntityDbRemoteServerAdmin.class,
                org/jminor/framework/server/EntityDbRemoteAdapter_Stub.class,
                org/jminor/framework/server/EntityDbRemoteServer_Stub.class"/>

    <jar jarfile="${dist}/${version}/${ant.project.name}-server.jar" basedir="${build.base}"
         includes="org/jminor/framework/FrameworkSettings*,
                org/jminor/framework/FrameworkConstants*,
                org/jminor/framework/model/*,
                org/jminor/framework/db/**,
                org/jminor/framework/server/*.class"/>

    <jar jarfile="${dist}/${version}/${ant.project.name}-server-monitor.jar" basedir="${build.base}"
         includes="org/jminor/framework/FrameworkSettings*,
                org/jminor/framework/FrameworkConstants*,
                org/jminor/framework/model/EntityRepository.class,
                org/jminor/framework/db/IEntityDb.class,
                org/jminor/framework/db/DbException.class,
                org/jminor/framework/server/monitor/**,
                org/jminor/framework/server/IEntityDbRemote.class,
                org/jminor/framework/server/IEntityDbRemoteServer.class,
                org/jminor/framework/server/IEntityDbRemoteServerAdmin.class,
                org/jminor/framework/server/EntityDbRemoteAdapter_Stub.class,
                org/jminor/framework/server/EntityDbRemoteServer_Stub.class"/>

    <jar jarfile="${dist}/${version}/${ant.project.name}-demos.jar" basedir="${build.demos}" />

    <jar jarfile="${dist}/${version}/${ant.project.name}-src.jar" basedir="${src}" />
    <jar jarfile="${dist}/${version}/${ant.project.name}-src-test.jar" basedir="${srctest}" />
    <jar jarfile="${dist}/${version}/${ant.project.name}-src-demos.jar" basedir="${srcdemos}" />
    <jar jarfile="${dist}/${version}/${ant.project.name}-api-doc.jar" basedir="${docsapi}" />

    <copy file="${basedir}/changelog.txt" todir="${dist}/${version}" />
    <copy todir="${dist}/current">
      <fileset dir="${dist}/${version}" />
    </copy>
  </target>

  <target name="doc" depends="build">
    <delete dir="${docsapi}" includeEmptyDirs="true" />
    <delete dir="${docstestapi}" includeEmptyDirs="true" />
    <mkdir dir="${docsapi}" />
    <mkdir dir="${docstestapi}" />
    <javadoc destdir="${docstestapi}" sourcepath="${srctest}" packagenames="org.jminor.*"
             author="true" version="true" use="true" windowtitle="Framework Test API docs"
             link="http://java.sun.com/javase/6/docs/api/"
             group="Common org.jminor.common*,
                    Client org.jminor.framework.client*,
                    Db org.jminor.framework.db*,
                    Model org.jminor.framework.model*,
                    Demos org.jminor.framework.demos*">
      <classpath>
        <path refid="libraries" />
        <path location="${build.base}" />
      </classpath>
    </javadoc>
    <javadoc destdir="${docsapi}" sourcepath="${src}" packagenames="org.jminor.*"
             author="true" version="true" use="true" windowtitle="Framework API docs"
             link="http://java.sun.com/javase/6/docs/api/"
             group="Common org.jminor.common*,
                    Client org.jminor.framework.client*,
                    Db org.jminor.framework.db*,
                    Model org.jminor.framework.model*,
                    Server org.jminor.framework.server*">
      <classpath refid="libraries"/>
    </javadoc>
  </target>

  <target name="deploy" depends="dist" >
    <copy file="${dist}/current/${ant.project.name}.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-common.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-client.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-client-remote.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-demos.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-server.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-server-monitor.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-src.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-src-test.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-src-demos.jar" todir="${deploy.path}" overwrite="true"/>
    <copy file="${dist}/current/${ant.project.name}-api-doc.jar" todir="${deploy.path}" overwrite="true"/>
  </target>

  <target name="deploy_server" >
    <mkdir dir="${deploy.server.path}" />
    <copy file="${dist}/current/${ant.project.name}-server.jar" todir="${deploy.server.path}/bin" />
    <copy file="${dist}/current/${ant.project.name}-common.jar" todir="${deploy.server.path}/bin" />
    <copy file="${lib.log4j}" todir="${deploy.server.path}/lib" />
    <copy file="${lib.jdbc.drivers}" todir="${deploy.server.path}/lib" />
    <copy file="${lib.jasperreports.base}" todir="${deploy.server.path}/lib" />
    <copy file="${deploy.server.policy}" todir="${deploy.server.path}" />
    <copy file="${deploy.server.keystore}" todir="${deploy.server.path}" />
    <copy todir="${deploy.server.path}" >
      <fileset dir="${basedir}/resources/server/" />
    </copy>
  </target>

  <target name="deploy_server_monitor" >
    <mkdir dir="${deploy.server.monitor.path}" />
    <copy file="${dist}/current/${ant.project.name}-server-monitor.jar" todir="${deploy.server.monitor.path}/bin" />
    <copy file="${dist}/current/${ant.project.name}-common.jar" todir="${deploy.server.monitor.path}/bin" />
    <copy file="${lib.jasperreports.base}" todir="${deploy.server.monitor.path}/lib" />
    <copy file="${lib.log4j}" todir="${deploy.server.monitor.path}/lib" />
    <copy file="${lib.jfreechart.base}" todir="${deploy.server.monitor.path}/lib" />
    <copy file="${lib.jfreechart.common}" todir="${deploy.server.monitor.path}/lib" />
    <copy file="${lib.jdbc.drivers}" todir="${deploy.server.monitor.path}/lib" />
    <copy file="${deploy.server.monitor.policy}" todir="${deploy.server.monitor.path}" />
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.monitor.path}" />
    <copy todir="${deploy.server.monitor.path}" >
      <fileset dir="${basedir}/resources/server_monitor/" />
    </copy>
  </target>

  <target name="deploy_demos" >
    <mkdir dir="${deploy.demos.path}" />
    <copy file="${dist}/current/${ant.project.name}-client.jar" todir="${deploy.demos.path}/bin" />
    <copy file="${dist}/current/${ant.project.name}-client-remote.jar" todir="${deploy.demos.path}/bin" />
    <copy file="${dist}/current/${ant.project.name}-demos.jar" todir="${deploy.demos.path}/bin" />
    <copy file="${dist}/current/${ant.project.name}-common.jar" todir="${deploy.demos.path}/bin" />
    <copy file="${lib.jdbc.drivers}" todir="${deploy.demos.path}/lib" />
    <copy file="${lib.jasperreports.base}" todir="${deploy.demos.path}/lib" />
    <copy file="${lib.log4j}" todir="${deploy.demos.path}/lib" />
    <copy file="${lib.jfreechart.base}" todir="${deploy.demos.path}/lib" />
    <copy file="${lib.jfreechart.common}" todir="${deploy.demos.path}/lib" />
    <copy todir="${deploy.demos.path}">
      <fileset dir="${basedir}/resources/demos/empdept/" />
      <fileset dir="${basedir}/resources/demos/petstore/" />
      <fileset dir="${basedir}/resources/demos/schemabrowser/" />
    </copy>
    <copy file="${deploy.demos.policy}" todir="${deploy.demos.path}" />
    <copy file="${deploy.profiling.policy}" todir="${deploy.demos.path}" />
    <copy file="${deploy.demos.truststore}" todir="${deploy.demos.path}" />
  </target>

  <target name="deploy_all" depends="deploy, deploy_server, deploy_server_monitor, deploy_demos">
    <delete file="${dist}/current/jminor-${version}.zip"/>
    <zip basedir="${dist}/current" destfile="${dist}/current/jminor-${version}.zip"/>
  </target>

  <target name="deploy_to_wiki" depends="doc, report">
    <delete dir="${wiki.media.project}"/>
    <mkdir dir="${wiki.media.project}"/>
    <copy todir="${wiki.media.project}/src">
      <fileset dir="${src}" excludes="*.svn*"/>
    </copy>
    <copy todir="${wiki.media.project}/src">
      <fileset dir="${srctest}" excludes="*.svn*"/>
    </copy>
    <copy todir="${wiki.media.project}/src">
      <fileset dir="${srcdemos}" excludes="*.svn*"/>
    </copy>
    <copy todir="${wiki.media.project}/docs">
      <fileset dir="${docs}" excludes="*.svn*"/>
    </copy>
    <copy todir="${wiki.media.project}/resources">
      <fileset dir="${resources}" excludes="*.svn*"/>
    </copy>
    <copy todir="${wiki.media.project}/test">
      <fileset dir="${test}" />
    </copy>
    <chmod dir="${wiki.media.project}" perm="ugo+r" type="file" includes="**/*"/>
    <chmod dir="${wiki.media.project}" perm="ugo+rx" type="dir" includes="**/*"/>
    <chmod file="${wiki.media.project}" perm="ugo+rx" type="dir"/>
  </target>

  <target name="deploy_project" depends="doc, dist">
    <zip destfile="${basedir}/${ant.project.name}-${version}-project.zip" >
      <fileset dir="${basedir}" excludes="test/**,dist/current/**,classes/**"/>
    </zip>
  </target>

  <target name="report" depends="run_tests">
    <junitreport todir="${reports}">
      <fileset dir="${reports}" includes="TEST-*.xml" />
      <report format="frames" todir="${htmlreports}" />
    </junitreport>
  </target>

  <target name="run_tests" depends="build">
    <junit printsummary="yes" haltonfailure="true" haltonerror="true" fork="yes" >
      <formatter type="xml" usefile="true" />
      <classpath>
        <pathelement path="${build.base}" />
        <pathelement path="${build.demos}" />
        <pathelement path="${build.test}" />
        <path refid="libraries" />
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
      <batchtest todir="${reports}">
        <fileset dir="${srctest}" includes="**/Test*.java" />
      </batchtest>
    </junit>
  </target>

  <target name="run_demo_empdept_local" depends="build">
    <java classname="org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.jdbc.drivers}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
    </java>
  </target>

  <target name="run_demo_empdept_remote" depends="build">
    <java classname="org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.client.connection.type=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${basedir}/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${basedir}/resources/security/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_demo_petstore_local" depends="build">
    <java classname="org.jminor.framework.demos.petstore.client.ui.PetstoreAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.jdbc.drivers}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
    </java>
  </target>

  <target name="run_demo_petstore_remote" depends="build">
    <java classname="org.jminor.framework.demos.petstore.client.ui.PetstoreAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.client.connection.type=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${basedir}/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${basedir}/resources/security/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_demo_schemabrowser_local" depends="build">
    <java classname="org.jminor.framework.demos.schemabrowser.client.ui.SchemaBrowserAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.jdbc.drivers}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
    </java>
  </target>

  <target name="run_demo_schemabrowser_remote" depends="build">
    <java classname="org.jminor.framework.demos.schemabrowser.client.ui.SchemaBrowserAppPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement path="${build.demos}"/>
        <pathelement location="${lib.jasperreports.base}"/>
        <pathelement location="${lib.jcalendar}"/>
        <pathelement location="${lib.log4j}"/>
      </classpath>
      <jvmarg value="-Djminor.client.connection.type=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${basedir}/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${basedir}/resources/security/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_rmi_server" depends="build">
    <java classname="org.jminor.framework.server.EntityDbRemoteServer" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement location="${lib.jdbc.drivers}"/>
        <pathelement location="${lib.log4j}"/>
        <pathelement location="${lib.jasperreports.base}"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
      <jvmarg value="-Djavax.net.ssl.keyStore=${basedir}/resources/security/JMinorServerKeystore"/>
      <jvmarg value="-Djava.security.policy=${basedir}/resources/security/jminor_server.policy"/>
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=jminor"/>
      <jvmarg value="-Djminor.server.pooling.initial=scott"/>
      <jvmarg value="-Djminor.server.logging.status=1"/>
      <jvmarg value="-Djava.rmi.server.hostname=localhost"/>
      <jvmarg value="-Djminor.server.port=2222"/>
      <jvmarg value="-Djminor.server.db.port=3333"/>
    </java>
  </target>

  <target name="run_rmi_server_monitor" depends="build">
    <java classname="org.jminor.framework.server.monitor.ui.MonitorPanel" fork="yes">
      <classpath>
        <pathelement path="${build.base}"/>
        <pathelement location="${lib.jdbc.drivers}"/>
        <pathelement location="${lib.log4j}"/>
        <pathelement location="${lib.jfreechart.base}"/>
        <pathelement location="${lib.jfreechart.common}"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${run.db.type}"/>
      <jvmarg value="-Djminor.db.host=${run.db.host}"/>
      <jvmarg value="-Djminor.db.port=${run.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${run.db.sid}"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.keyStore=${basedir}/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${basedir}/resources/security/jminor_server_monitor.policy"/>
    </java>
  </target>

  <target name="delete_empdept_db">
    <delete dir="${empdept.db.dir}"/>
  </target>

  <target name="create_empdept_db" depends="delete_empdept_db">
    <java fork="true" classname="org.apache.derby.tools.ij" classpathref="libraries">
      <sysproperty key="ij.connection.empdept" value="jdbc:derby:${empdept.db.dir};create=true" />
      <arg value="${empdept.sql.dir}/createdb_derby.sql"/>
    </java>
  </target>

</project>