dependencies {
    implementation project(':jminor-common-core')
    implementation project(':jminor-common-db')
    implementation project(':jminor-common-model')

    implementation project(':jminor-framework-db-core')

    implementation project(':jminor-swing-common-model')
    implementation project(':jminor-swing-common-ui')

    testImplementation project(':jminor-framework-db-local')

    testImplementation project(':jminor-swing-framework-model')

    compile("net.sf.jasperreports:jasperreports:${jasperReportsVersion}") {
        transitive = false
    }

    runtime "commons-logging:commons-logging:${commonsLoggingVersion}"
    runtime "commons-digester:commons-digester:${commonsDigesterVersion}"
    runtime "commons-collections:commons-collections:${commonsCollectionsVersion}"
    runtime "commons-beanutils:commons-beanutils:${commonsBeanUtilsVersion}"
    runtime "org.eclipse.jdt.core.compiler:ecj:${jdtCoreCompilerVersion}"

    testImplementation project(':jminor-dbms-h2database')
    testRuntimeOnly "com.h2database:h2:${h2Version}"
}

task buildReports(dependsOn: 'compileJava') {
    group 'build'
    def jasperSourceDir = file('src/test/reports')
    def jasperTargetDir = file('build/classes/reports/test')
    inputs.dir jasperSourceDir
    outputs.dir jasperTargetDir
    doLast {
        ant {
            taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.runtime.asPath)
            jasperTargetDir.mkdirs()
            jrc(srcdir: jasperSourceDir, destdir: jasperTargetDir) {
                classpath(path: sourceSets.main.output.classesDirs)
                include(name: '**/*.jrxml')
            }
        }
    }
}
classes.dependsOn buildReports