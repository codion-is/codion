plugins {
    id "org.gradle.toolchains.foojay-resolver-convention" version "0.8.0"
}

rootProject.name = "is.codion"

include "codion-documentation"
project(":codion-documentation").projectDir = file("documentation")

include "codion-common-core"
project(":codion-common-core").projectDir = file("common/core")

include "codion-common-db"
project(":codion-common-db").projectDir = file("common/db")

include "codion-common-model"
project(":codion-common-model").projectDir = file("common/model")

include "codion-common-rmi"
project(":codion-common-rmi").projectDir = file("common/rmi")

include "codion-common-i18n"
project(":codion-common-i18n").projectDir = file("common/i18n")

include "codion-dbms-db2"
project(":codion-dbms-db2").projectDir = file("dbms/db2")

include "codion-dbms-derby"
project(":codion-dbms-derby").projectDir = file("dbms/derby")

include "codion-dbms-h2"
project(":codion-dbms-h2").projectDir = file("dbms/h2")

include "codion-dbms-hsqldb"
project(":codion-dbms-hsqldb").projectDir = file("dbms/hsqldb")

include "codion-dbms-mariadb"
project(":codion-dbms-mariadb").projectDir = file("dbms/mariadb")

include "codion-dbms-mysql"
project(":codion-dbms-mysql").projectDir = file("dbms/mysql")

include "codion-dbms-oracle"
project(":codion-dbms-oracle").projectDir = file("dbms/oracle")

include "codion-dbms-postgresql"
project(":codion-dbms-postgresql").projectDir = file("dbms/postgresql")

include "codion-dbms-sqlite"
project(":codion-dbms-sqlite").projectDir = file("dbms/sqlite")

include "codion-dbms-sqlserver"
project(":codion-dbms-sqlserver").projectDir = file("dbms/sqlserver")

include "codion-framework-i18n"
project(":codion-framework-i18n").projectDir = file("framework/i18n")

include "codion-framework-domain"
project(":codion-framework-domain").projectDir = file("framework/domain")

include "codion-framework-domain-db"
project(":codion-framework-domain-db").projectDir = file("framework/domain-db")

include "codion-framework-domain-test"
project(":codion-framework-domain-test").projectDir = file("framework/domain-test")

include "codion-framework-db-core"
project(":codion-framework-db-core").projectDir = file("framework/db-core")

include "codion-framework-db-local"
project(":codion-framework-db-local").projectDir = file("framework/db-local")

include "codion-framework-db-rmi"
project(":codion-framework-db-rmi").projectDir = file("framework/db-rmi")

include "codion-framework-db-http"
project(":codion-framework-db-http").projectDir = file("framework/db-http")

include "codion-framework-json-domain"
project(":codion-framework-json-domain").projectDir = file("framework/json-domain")

include "codion-framework-json-db"
project(":codion-framework-json-db").projectDir = file("framework/json-db")

include "codion-framework-model"
project(":codion-framework-model").projectDir = file("framework/model")

include "codion-framework-model-test"
project(":codion-framework-model-test").projectDir = file("framework/model-test")

include "codion-framework-server"
project(":codion-framework-server").projectDir = file("framework/server")

include "codion-framework-servlet"
project(":codion-framework-servlet").projectDir = file("framework/servlet")

include "codion-swing-common-model"
project(":codion-swing-common-model").projectDir = file("swing/common-model")

include "codion-swing-common-ui"
project(":codion-swing-common-ui").projectDir = file("swing/common-ui")

include "codion-tools-loadtest-model"
project(":codion-tools-loadtest-model").projectDir = file("tools/loadtest/model")

include "codion-tools-loadtest-ui"
project(":codion-tools-loadtest-ui").projectDir = file("tools/loadtest/ui")

include "codion-swing-framework-model"
project(":codion-swing-framework-model").projectDir = file("swing/framework-model")

include "codion-swing-framework-ui"
project(":codion-swing-framework-ui").projectDir = file("swing/framework-ui")

include "codion-swing-framework-ui-test"
project(":codion-swing-framework-ui-test").projectDir = file("swing/framework-ui-test")

include "codion-tools-generator-domain"
project(":codion-tools-generator-domain").projectDir = file("tools/generator/domain")

include "codion-tools-generator-model"
project(":codion-tools-generator-model").projectDir = file("tools/generator/model")

include "codion-tools-generator-ui"
project(":codion-tools-generator-ui").projectDir = file("tools/generator/ui")

include "codion-tools-monitor-model"
project(":codion-tools-monitor-model").projectDir = file("tools/monitor/model")

include "codion-tools-monitor-ui"
project(":codion-tools-monitor-ui").projectDir = file("tools/monitor/ui")

include "codion-plugin-hikari-pool"
project(":codion-plugin-hikari-pool").projectDir = file("plugins/hikari-pool")

include "codion-plugin-imagepanel"
project(":codion-plugin-imagepanel").projectDir = file("plugins/imagepanel")

include "codion-plugin-jasperreports"
project(":codion-plugin-jasperreports").projectDir = file("plugins/jasperreports")

include "codion-plugin-jul-proxy"
project(":codion-plugin-jul-proxy").projectDir = file("plugins/jul-proxy")

include "codion-plugin-log4j-proxy"
project(":codion-plugin-log4j-proxy").projectDir = file("plugins/log4j-proxy")

include "codion-plugin-logback-proxy"
project(":codion-plugin-logback-proxy").projectDir = file("plugins/logback-proxy")

include "codion-plugin-tomcat-pool"
project(":codion-plugin-tomcat-pool").projectDir = file("plugins/tomcat-pool")

include "codion-demos-chinook"
project(":codion-demos-chinook").projectDir = file("demos/chinook")

include "codion-demos-employees"
project(":codion-demos-employees").projectDir = file("demos/employees")

include "codion-demos-manual"
project(":codion-demos-manual").projectDir = file("demos/manual")

include "codion-demos-petclinic"
project(":codion-demos-petclinic").projectDir = file("demos/petclinic")

include "codion-demos-petstore"
project(":codion-demos-petstore").projectDir = file("demos/petstore")

include "codion-demos-schemabrowser"
project(":codion-demos-schemabrowser").projectDir = file("demos/schemabrowser")

include "codion-demos-world"
project(":codion-demos-world").projectDir = file("demos/world")

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        libs {
            version("slf4j.api", "2.0.16")
            version("logback", "1.5.8")
            version("h2", "2.3.232")
            version("json", "20240303")

            version("jfreechart", "1.5.5")
            version("junit", "5.11.0")
            version("sslcontext.kickstart", "8.3.7")
            version("flatlaf", "3.5.1")
            version("ikonli", "12.3.1")
            version("javalin", "6.3.0")
            version("javapoet", "1.13.0")

            version("hikari", "6.0.0")
            version("jackson", "2.17.2")
            version("log4j", "2.23.1")
            version("tomcat", "10.1.30")

            version("jasperreports", "7.0.0")

            library("slf4j-api", "org.slf4j", "slf4j-api").versionRef("slf4j.api")
            library("logback-core", "ch.qos.logback", "logback-core").versionRef("logback")
            library("logback-classic", "ch.qos.logback", "logback-classic").versionRef("logback")
            library("h2", "com.h2database", "h2").versionRef("h2")
            library("json", "org.json", "json").versionRef("json")

            library("jfreechart", "org.jfree", "jfreechart").versionRef("jfreechart")

            library("javalin", "io.javalin", "javalin").versionRef("javalin")
            library("javalin-ssl", "io.javalin.community.ssl", "ssl-plugin").versionRef("javalin")

            library("junit-api", "org.junit.jupiter", "junit-jupiter-api").versionRef("junit")

            library("sslcontext-kickstart", "io.github.hakky54", "sslcontext-kickstart").versionRef("sslcontext.kickstart")
            library("flatlaf", "com.formdev", "flatlaf").versionRef("flatlaf")
            library("flatlaf-intellij-themes", "com.formdev", "flatlaf-intellij-themes").versionRef("flatlaf")
            library("ikonli-core", "org.kordamp.ikonli", "ikonli-core").versionRef("ikonli")
            library("ikonli-swing", "org.kordamp.ikonli", "ikonli-swing").versionRef("ikonli")
            library("ikonli-foundation-pack", "org.kordamp.ikonli", "ikonli-foundation-pack").versionRef("ikonli")
            library("javapoet", "com.squareup", "javapoet").versionRef("javapoet")

            library("hikari", "com.zaxxer", "HikariCP").versionRef("hikari")
            library("jackson-databind", "com.fasterxml.jackson.core", "jackson-databind").versionRef("jackson")
            library("jackson-datatype-jsr310", "com.fasterxml.jackson.datatype", "jackson-datatype-jsr310").versionRef("jackson")
            library("log4j-api", "org.apache.logging.log4j", "log4j-api").versionRef("log4j")
            library("log4j-core", "org.apache.logging.log4j", "log4j-core").versionRef("log4j")
            library("tomcat-jdbc", "org.apache.tomcat", "tomcat-jdbc").versionRef("tomcat")

            library("jasperreports", "net.sf.jasperreports", "jasperreports").versionRef("jasperreports")
            library("jasperreports-jdt", "net.sf.jasperreports", "jasperreports-jdt").versionRef("jasperreports")
        }
    }
}