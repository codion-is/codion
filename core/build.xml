<?xml version="1.0" encoding="UTF-8"?>
<project name="jminor-core" default="build" basedir=".">

  <description>JMinor is a minimalistic full-stack Java rich client/server CRUD application framework, based solely on Java Standard Edition components, JDBC, RMI and Swing.</description>

  <property name="project.root" value="../"/>
  <import file="../build-common.xml"/>

  <tstamp>
    <format property="build.date" pattern="yyyy.MM.dd HH:mm"/>
  </tstamp>

  <path id="lib.runtime.server">
    <fileset dir="${lib}/runtime.server"/>
  </path>

  <path id="build.demos.main">
    <pathelement path="../demos/chinook/build/main"/>
    <pathelement path="../demos/empdept/build/main"/>
    <pathelement path="../demos/petstore/build/main"/>
    <pathelement path="../demos/schemabrowser/build/main"/>
    <pathelement path="../demos/world/build/main"/>
  </path>

  <path id="build.plugins.main">
    <path location="../plugins/imagepanel/build/main"/>
    <path location="../plugins/jasperreports/build/main"/>
    <path location="../plugins/json/build/main"/>
    <path location="../plugins/nextreports/build/main"/>
    <path location="../plugins/rest/build/main"/>
    <path location="../plugins/tomcat-pool/build/main"/>
  </path>

  <path id="lib.plugins">
    <path>
      <fileset dir="../plugins/imagepanel/lib/test"/>
      <fileset dir="../plugins/jasperreports/lib/test"/>
      <fileset dir="../plugins/json/lib/test"/>
      <fileset dir="../plugins/nextreports/lib/test"/>
      <fileset dir="../plugins/rest/lib/test"/>
      <fileset dir="../plugins/tomcat-pool/lib/test"/>
    </path>
  </path>

  <target name="build" depends="jminor-common.build"
          description="Compiles all source files">
    <concat destfile="${build.main}/org/jminor/common/model/version.txt">${version}-build ${build.date}</concat>
  </target>

  <target name="dist" depends="jminor-common.dist"
          description="Builds all distribution jar files in the dist directory">
    <dist_module module-name="jminor-common-model"
                 includes="org/jminor/common/**"/>
    <dist_module module-name="jminor-db-core"
                 includes="org/jminor/framework/Configuration.class,
                   org/jminor/framework/db/*,
                   org/jminor/framework/db/criteria/*,
                   org/jminor/framework/domain/*,
                   org/jminor/framework/i18n/**"
                 excludes="org/jminor/framework/db/remote*,
                   org/jminor/framework/db/local*,"/>
    <dist_module module-name="jminor-db-local"
                 includes="org/jminor/framework/db/local/*"/>
    <dist_module module-name="jminor-db-remote"
                 includes="org/jminor/framework/db/remote/*"/>
    <dist_module module-name="jminor-db-test"
                 includes="org/jminor/framework/testing/EntityTestUnit*"/>
    <dist_module module-name="jminor-framework-model"
                 includes="org/jminor/framework/model/*"/>
    <dist_module module-name="jminor-framework-model-unittests"
                 includes="org/jminor/common/model/tools/LoadTestModelTest*,
                 org/jminor/framework/domain/TestDomain*,
                 org/jminor/framework/model/Abstract*,
                 org/jminor/framework/db/EntityConnectionProvidersTest*,
                 org/jminor/framework/server/EntityConnectionServerTest*,
                 org/jminor/framework/server/TestConnectionValidator*
                 org/jminor/framework/server/TestLoginProxy*"
                 build.basedir="${build.test}"
                 src.basedir="${src.test}"/>
    <dist_module module-name="jminor-server"
                 includes="org/jminor/framework/server/*"/>

    <copy file="${basedir}/../changelog.txt" todir="${dist}"/>
  </target>

  <target name="publish" depends="dist"
          description="Publish all project artifacts">
    <fail unless="version">Version information not set</fail>
    <subant target="publish" buildpath="${basedir}/modules/common-model"/>
    <subant target="publish" buildpath="${basedir}/modules/db-core"/>
    <subant target="publish" buildpath="${basedir}/modules/db-local"/>
    <subant target="publish" buildpath="${basedir}/modules/db-remote"/>
    <subant target="publish" buildpath="${basedir}/modules/db-test"/>
    <subant target="publish" buildpath="${basedir}/modules/framework-model"/>
    <subant target="publish" buildpath="${basedir}/modules/framework-model-unittests"/>
    <subant target="publish" buildpath="${basedir}/modules/server"/>
  </target>

  <target name="javadoc" depends="build" unless="skip.javadoc"
          description="Generates framework javadocs">
    <delete dir="${javadoc}" includeEmptyDirs="true"/>
    <mkdir dir="${javadoc}"/>
    <javadoc destdir="${javadoc}" sourcepath="${src.main}" packagenames="org.jminor.*" Encoding="UTF-8"
             docencoding="UTF-8" author="true" version="true" use="true"
             windowtitle="JMinor v${version} API" doctitle="JMinor v${version} API"
             group="Common org.jminor.common*,
                    Db org.jminor.framework.db*,
                    Domain org.jminor.framework.domain*,
                    Client model org.jminor.framework.model*,
                    Swing client org.jminor.swing*,
                    Server org.jminor.framework.server*">
      <classpath refid="lib.compile"/>
      <link href="http://download.oracle.com/javase/8/docs/api/"/>
    </javadoc>
  </target>

  <target name="deploy_server" depends="dist, create_keystore, create_demo_h2db"
          description="Deploys the rmi server to the path defined by the 'deploy.server.path' property">
    <copy file="${dist}/jminor-common-model/jminor-common-model.jar"
          tofile="${deploy.server.path}/lib/jminor-common-model-${version}.jar"/>
    <copy file="${dist}/jminor-db-core/jminor-db-core.jar"
          tofile="${deploy.server.path}/lib/jminor-db-core-${version}.jar"/>
    <copy file="${dist}/jminor-db-local/jminor-db-local.jar"
          tofile="${deploy.server.path}/lib/jminor-db-local-${version}.jar"/>
    <copy file="${dist}/jminor-server/jminor-server.jar"
          tofile="${deploy.server.path}/lib/jminor-server-${version}.jar"/>

    <subant target="dist" buildpath="${basedir}/../demos"/>
    <copy file="../demos/chinook/dist/chinook-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="../demos/empdept/dist/empdept-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="../demos/petstore/dist/petstore-domain.jar" todir="${deploy.server.path}/lib"/>
    <copy file="../demos/world/dist/world-domain.jar" todir="${deploy.server.path}/lib"/>

    <subant target="dist" buildpath="${basedir}/../plugins"/>
    <copy file="../plugins/jasperreports/dist/jminor-plugin-jasperreports.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-jasperreports-${version}.jar"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="../plugins/jasperreports/lib/runtime" excludes="*jminor*"/>
    </copy>
    <copy file="../plugins/rest/dist/jminor-plugin-rest.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-rest-${version}.jar"/>
    <copy file="../plugins/json/dist/jminor-plugin-json.jar"
          tofile="${deploy.server.path}/lib/jminor-plugin-json-${version}.jar"/>
    <copy todir="${deploy.server.path}/lib">
      <fileset dir="../plugins/rest/lib/runtime" excludes="*jminor*"/>
    </copy>

    <copy todir="${deploy.server.path}/lib">
      <fileset dir="${lib}/runtime.server"/>
    </copy>
    <copy todir="${deploy.server.path}">
      <fileset dir="${basedir}/resources/server/"/>
    </copy>
    <copy file="${deploy.server.policy}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.allpermissions.policy}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.notsoserial.whitelist}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.keystore}" todir="${deploy.server.path}/config"/>
    <copy file="${deploy.server.monitor.truststore}" todir="${deploy.server.path}/config"/>
    <chmod dir="${deploy.server.path}" perm="u+x" type="file" includes="*.sh"/>
    <copy todir="${deploy.server.path}/h2db">
      <fileset dir="${db.h2.dir}"/>
    </copy>
    <copy todir="${deploy.server.path}/reports/demos" flatten="true">
      <fileset dir="${basedir}/../demos/chinook/build/reports" includes="**/*.jasper"/>
      <fileset dir="${basedir}/../demos/empdept/build/reports" includes="**/*.jasper"/>
    </copy>
  </target>

  <target name="deploy_demos" depends="resolve_libraries, create_keystore"
          description="Deploys the demo applications to the path defined by the 'deploy.demos.dir' property">
    <subant target="deploy" buildpath="${basedir}/../demos"/>
    <delete dir="${deploy.demos.dir}"/>
    <deploy_demo_app demo-name="chinook"/>
    <deploy_demo_app demo-name="empdept"/>
    <deploy_demo_app demo-name="petstore"/>
    <deploy_demo_app demo-name="schemabrowser"/>
    <deploy_demo_app demo-name="world"/>
  </target>

  <target name="deploy_all" depends="clean, dist, deploy_server, deploy_demos"
          description="A convenience target for deploying the server, server monitor and demo applications"/>

  <target name="run_unit_tests" depends="create_keystore, jminor-common.run_unit_tests"/>

  <target name="run_demo_chinook_local" depends="build"
          description="Runs the Chinook demo application with a local db connection">
    <subant target="build" buildpath="${basedir}/../plugins/jasperreports"/>
    <subant target="build" buildpath="${basedir}/../demos/chinook"/>
    <java classname="org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel" fork="yes" dir="../demos">
      <classpath>
        <pathelement location="${basedir}/../plugins/jasperreports/build/main"/>
        <pathelement location="${basedir}/../demos/chinook/build/main"/>
        <path refid="build.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=${demo.db.initScript}"/>
      <jvmarg value="-Djminor.report.path=chinook/build/reports"/>
    </java>
  </target>

  <target name="run_demo_chinook_remote" depends="build, create_keystore"
          description="Runs the Chinook demo application with a remote db connection">
    <subant target="build" buildpath="${basedir}/../plugins/jasperreports"/>
    <subant target="build" buildpath="${basedir}/../demos/chinook"/>
    <java classname="org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel" fork="yes">
      <classpath>
        <pathelement location="${basedir}/../plugins/jasperreports/build/main"/>
        <pathelement location="${basedir}/../demos/chinook/build/main"/>
        <path refid="build.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <!--this report path setting is based on the fact that the server is run in the demos directory-->
      <jvmarg value="-Djminor.report.path=chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_demo_chinook_load_test" depends="build, create_keystore"
          description="Runs the Chinook load testing application with a remote db connection">
    <subant target="build" buildpath="${basedir}/../plugins/jasperreports"/>
    <subant target="build" buildpath="${basedir}/../demos/chinook"/>
    <java classname="org.jminor.framework.demos.chinook.testing.ChinookLoadTest" fork="yes">
      <classpath>
        <pathelement location="${basedir}/../plugins/jasperreports/build/main"/>
        <pathelement location="${basedir}/../demos/chinook/build/main"/>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="lib.runtime.client"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <!--this report path setting is based on the fact that the server is run in the demos directory-->
      <jvmarg value="-Djminor.report.path=chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_load_test.policy"/>
    </java>
  </target>

  <target name="run_server" depends="build, create_keystore"
          description="Runs the RMI server">
    <subant target="build" buildpath="${basedir}/../plugins"/>
    <subant target="build" buildpath="${basedir}/../demos"/>
    <copy todir="build/demos/reports" flatten="true">
      <fileset dir="${basedir}/../demos/chinook/build/reports" includes="**/*.jasper"/>
      <fileset dir="${basedir}/../demos/empdept/build/reports" includes="**/*.jasper"/>
    </copy>
    <java classname="org.jminor.framework.server.DefaultEntityConnectionServerAdmin" fork="yes" dir="../demos">
      <classpath>
        <path refid="build.main"/>
        <path refid="build.plugins.main"/>
        <path refid="build.demos.main"/>
        <path refid="lib.runtime.server"/>
        <path refid="lib.plugins"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=${demo.db.initScript}"/>
      <jvmarg value="-Djminor.server.pooling.initial=scott:tiger"/>
      <jvmarg value="-Djminor.server.clientLoggingEnabled=true"/>
      <jvmarg value="-Djminor.server.port=2222"/>
      <jvmarg value="-Djminor.server.admin.port=4444"/>
      <jvmarg value="-Djminor.server.domain.classes=org.jminor.framework.demos.empdept.domain.EmpDept, org.jminor.framework.demos.petstore.domain.Petstore, org.jminor.framework.demos.chinook.domain.Chinook, org.jminor.framework.demos.schemabrowser.domain.SchemaBrowser, org.jminor.framework.demos.world.domain.World"/>
      <jvmarg value="-Djavax.net.ssl.keyStore=../core/resources/security/JMinorServerKeystore"/>
      <jvmarg value="-Djava.security.policy=../core/resources/security/jminor_server.policy"/>
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=${demo.server.keystorePassword}"/>
      <jvmarg value="-Djava.rmi.server.hostname=localhost"/>
    </java>
    <delete dir="build/demos"/>
  </target>

  <target name="run_server_monitor" depends="build, create_keystore"
          description="Runs the RMI server monitor">
    <java classname="org.jminor.swing.framework.server.monitor.ui.EntityServerMonitorPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="lib.runtime.server-monitor"/>
      </classpath>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=${resources.security}/JMinorServerMonitorTruststore"/>
      <jvmarg value="-Djava.security.policy=${resources.security}/jminor_server_monitor.policy"/>
    </java>
  </target>

  <target name="run_generator" depends="build"
          description="Runs the entity generator">
    <java classname="org.jminor.swing.framework.generator.ui.EntityGeneratorPanel" fork="yes">
      <classpath>
        <path refid="build.main"/>
        <path refid="lib.runtime.client"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=h2"/>
      <jvmarg value="-Djminor.db.host=h2db/h2"/>
      <jvmarg value="-Djminor.db.embedded=true"/>
    </java>
  </target>

  <target name="create_demo_h2db"
          description="Recreates the demo h2 database, which contains the EmpDept, Petstore, Chinook and World schemas, used by unit tests and demo applications">
    <delete dir="${db.h2.dir}"/>
    <java fork="true" classname="org.h2.tools.RunScript" classpathref="lib.test" dir="../demos">
      <arg line="-url jdbc:h2:file:${db.h2.dir}/${db.h2.name} -showResults -script ${demo.db.initScript}"/>
    </java>
  </target>

  <macrodef name="deploy_demo_app">
    <attribute name="demo-name"/>
    <sequential>
      <copy todir="${deploy.demos.dir}/web/@{demo-name}">
        <fileset dir="../demos/@{demo-name}/dist/deployment/web"/>
      </copy>
      <copy todir="${deploy.demos.dir}/local/@{demo-name}">
        <fileset dir="../demos/@{demo-name}/dist/deployment/local"/>
      </copy>
    </sequential>
  </macrodef>
</project>