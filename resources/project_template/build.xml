<?xml version="1.0" encoding="UTF-8"?>
<project name="project_name" default="report" basedir=".">

  <description>Ant build file for project_name</description>

  <property file="build.properties"/>
  <property file="user.properties"/>

  <fileset id="libraries" dir="${lib}" />

  <fileset id="resources" dir="${src}" includes="**/*.jpg,**/*.gif,**/*.png,**/*.properties,**/*.jasper,logback.xml" />

  <target name="clean">
    <delete dir="${build.root}" includeEmptyDirs="true" />
    <delete dir="${build.base}" includeEmptyDirs="true" />
    <delete dir="${build.test}" includeEmptyDirs="true" />
    <delete dir="${docs}" includeEmptyDirs="true" />
    <delete dir="${docsapi}" includeEmptyDirs="true" />
    <delete dir="${test.reports}" includeEmptyDirs="true" />
    <delete dir="${test.html.reports}" includeEmptyDirs="true" />
    <delete dir="${test}" includeEmptyDirs="true" />
  </target>

  <target name="init">
    <mkdir dir="${build.root}" />
    <mkdir dir="${build.base}" />
    <mkdir dir="${build.test}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${dist}/current" />
    <mkdir dir="${docs}" />
    <mkdir dir="${docsapi}" />
    <mkdir dir="${test.reports}" />
    <mkdir dir="${test.html.reports}" />
  </target>

  <target name="build" depends="init">
    <javac destdir="${build.base}" debug="true" >
      <src path="${src}" />
      <classpath>
        <fileset refid="libraries" />
      </classpath>
    </javac>
  </target>

  <target name="dist" depends="build">
    <tstamp />
    <mkdir dir="dist/${DSTAMP}" />
    <jar jarfile="${dist}/${DSTAMP}/${ant.project.name}.jar" basedir="${build.base}"
      manifest="${basedir}/META-INF/MANIFEST.MF" />
    <jar jarfile="${dist}/${DSTAMP}/${ant.project.name}-doc.jar" basedir="${docs}/api" />
    <jar jarfile="${dist}/${DSTAMP}/${ant.project.name}-src.jar" basedir="${src}" />
    <zip destfile="${dist}/${DSTAMP}/${ant.project.name}.jar" update="true" duplicate="add" >
      <fileset refid="resources" />
    </zip>
    <copy todir="${dist}/${DSTAMP}/lib">
      <fileset refid="libraries" />
    </copy>
    <copy file="${basedir}/${launch.file.dev}" todir="${dist}/${DSTAMP}" overwrite="true" />
    <copy file="${basedir}/${launch.file.test}" todir="${dist}/${DSTAMP}" overwrite="true" />
    <copy file="${basedir}/${launch.file.prod}" todir="${dist}/${DSTAMP}" overwrite="true" />
    <copy file="${basedir}/${app.icon}" todir="${dist}/${DSTAMP}" />
    <copy todir="${dist}/current">
      <fileset dir="${dist}/${DSTAMP}" />
    </copy>
  </target>

  <target name="signjars">
    <signjar jar="${dist}/current/${ant.project.name}.jar" alias="${jar.sign.alias}"
      storepass="${jar.sign.storepass}" keystore="${jar.sign.keystoreloc}"/>
    <signjar alias="${jar.sign.alias}" storepass="${jar.sign.storepass}" keystore="${jar.sign.keystoreloc}">
      <fileset dir="${dist}/current/lib" />
    </signjar>
  </target>

  <target name="deploy_dev" depends="dist, signjars" >
    <copy todir="${deploy.path.dev}">
      <fileset dir="${dist}/current" excludes="${launch.file.test},${launch.file.prod}"/>
    </copy>
    <antcall target="chmod_dev" />
  </target>

  <target name="deploy_test" depends="dist, signjars" >
    <copy todir="${deploy.path.test}">
      <fileset dir="${dist}/current" excludes="${launch.file.dev},${launch.file.prod}"/>
    </copy>
    <antcall target="chmod_test" />
  </target>

  <target name="deploy_prod" depends="dist, signjars" >
    <copy todir="${deploy.path.prod}">
      <fileset dir="${dist}/current" excludes="${launch.file.dev},${launch.file.test}"/>
    </copy>
    <antcall target="chmod_prod" />
  </target>

  <target name="chmod_dev">
    <chmod dir="${deploy.path.dev}" perm="ugo+r" type="file" includes="**/*"/>
    <chmod dir="${deploy.path.dev}" perm="ugo+rx" type="dir" includes="**/*"/>
    <chmod file="${deploy.path.dev}" perm="ugo+rx" type="dir"/>
  </target>

  <target name="chmod_test">
    <chmod dir="${deploy.path.test}" perm="ugo+r" type="file" includes="**/*"/>
    <chmod dir="${deploy.path.test}" perm="ugo+rx" type="dir" includes="**/*"/>
    <chmod file="${deploy.path.test}" perm="ugo+rx" type="dir"/>
  </target>

  <target name="chmod_prod">
    <chmod dir="${deploy.path.prod}" perm="ugo+r" type="file" includes="**/*"/>
    <chmod dir="${deploy.path.prod}" perm="ugo+rx" type="dir" includes="**/*"/>
    <chmod file="${deploy.path.prod}" perm="ugo+rx" type="dir"/>
  </target>

  <target name="backup_dev">
    <zip destfile="${backup.path}/${ant.project.name}_${DSTAMP}-dev.bak.zip" >
      <fileset dir="${deploy.path.dev}" />
    </zip>
  </target>

  <target name="backup_test">
    <zip destfile="${backup.path}/${ant.project.name}_${DSTAMP}-test.bak.zip" >
      <fileset dir="${deploy.path.test}" />
    </zip>
  </target>

  <target name="backup_prod">
    <zip destfile="${backup.path}/${ant.project.name}_${DSTAMP}-prod.bak.zip" >
      <fileset dir="${deploy.path.prod}" />
    </zip>
  </target>

  <target name="doc" depends="init">
    <javadoc destdir="${docsapi}" author="true" version="true" use="true" windowtitle="API for project_name">
      <classpath>
        <fileset refid="libraries" />
      </classpath>
      <fileset dir="${src}" />
    </javadoc>
  </target>

  <target name="run_tests" depends="build">
    <junit printsummary="yes" haltonfailure="on" haltonerror="on" >
      <jvmarg value="-Djminor.db.type=${junit.db.type}"/>
      <jvmarg value="-Djminor.db.host=${junit.db.host}"/>
      <jvmarg value="-Djminor.db.port=${junit.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${junit.db.sid}"/>
      <formatter type="xml" usefile="true" />
      <classpath>
        <dirset dir="${build.base}" />
        <fileset refid="libraries" />
      </classpath>
      <batchtest todir="${test.reports}">
        <fileset dir="${build.test}" includes="**/*Test.class" />
      </batchtest>
    </junit>
  </target>

  <target name="report" depends="run_tests">
    <junitreport todir="${test.reports}">
      <fileset dir="${test.reports}" includes="TEST-*.xml" />
      <report format="noframes" todir="${test.html.reports}" />
    </junitreport>
  </target>

</project>