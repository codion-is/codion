create schema petstore;

create table petstore.category (
 category_id integer generated by default as identity,
 name varchar(25) not null,
 description varchar(255) not null,
 image_url varchar(55),
 primary key (category_id)
);

create table petstore.product (
 product_id integer generated by default as identity,
 categoryid integer not null,
 name varchar(25) not null,
 description varchar(255) not null,
 image_url varchar(55),
 primary key (product_id),
 foreign key (categoryid) references petstore.category(category_id)
);

comment on table petstore.product is 'The available products';
comment on column petstore.product.name is 'The product name';

create table petstore.address (
 address_id integer generated by default as identity,
 street1 varchar(55) not null,
 street2 varchar(55),
 city varchar(55) not null,
 state varchar(25) not null,
 zip integer not null,
 latitude decimal(14,2) not null,
 longitude decimal(14,2) not null,
 location geometry,
 image blob,
 primary key (address_id)
);

create table petstore.contact_info (
 contact_info_id integer generated by default as identity,
 last_name varchar(24) not null,
 first_name varchar(24) not null,
 email varchar(24) not null,
 primary key (contact_info_id)
);

create table petstore.item (
 item_id integer generated by default as identity,
 product_id integer not null,
 name varchar(30) not null,
 description varchar(500) not null,
 image_url varchar(55),
 image_thumb_url varchar(55),
 price decimal(14,2) not null,
 address_id integer not null,
 contact_info_id integer not null,
 total_score integer,
 number_of_votes integer,
 disabled integer not null default 0,
 primary key (item_id),
 foreign key (address_id) references petstore.address(address_id),
 foreign key (product_id) references petstore.product(product_id),
 foreign key (contact_info_id) references petstore.contact_info(contact_info_id)
);

create table petstore.tag (
 tag_id integer generated by default as identity,
 tag varchar(30) not null,
 primary key (tag_id),
 unique(tag)
);

create table petstore.tag_item (
 tag_id integer not null,
 item_id integer not null,
 primary key (tag_id, item_id),
 foreign key (item_id) references petstore.item(item_id),
 foreign key (tag_id) references petstore.tag(tag_id)
);

create view petstore.item_tags as
select item.name, tag.tag
from petstore.tag
join petstore.tag_item on tag.tag_id = tag_item.tag_id
join petstore.item on tag_item.item_id = item.item_id;

create user scott password 'tiger';
alter user scott admin true;