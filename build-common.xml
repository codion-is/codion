<project name="jminor-common" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:jacoco="antlib:org.jacoco.ant">

  <property name="project.home" value="../../"/>
  <property name="junit.db.initScript" value="${basedir}/../create_h2_db.sql"/>
  <property file="${project.home}/core/build.properties"/>

  <path id="lib.ant.util">
    <fileset dir="${project.home}/core/lib/ant.util"/>
  </path>

  <path id="lib.compile">
    <fileset dir="lib/compile"/>
  </path>

  <path id="lib.test">
    <path location="build/main"/>
    <path location="build/test"/>
    <fileset dir="lib/test"/>
  </path>

  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="lib.ant.util"/>
  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" classpathref="lib.ant.util"/>

  <target name="init">
    <mkdir dir="build/main"/>
    <mkdir dir="build/test"/>
  </target>

  <target name="clean">
    <delete dir="build"/>
    <delete dir="test"/>
    <delete dir="test"/>
    <delete dir="javadoc"/>
    <delete dir="dist"/>
  </target>

  <target name="resolve_libraries"
          description="Resolves all libraries according to ivy.xml">
    <ivy:settings file="${project.home}/core/ivysettings.xml"/>
    <ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].[ext]" sync="true"/>
  </target>

  <target name="build" depends="init, resolve_libraries">
    <javac destdir="build/main" debug="true" includeantruntime="false">
      <src path="src/main/java"/>
      <classpath>
        <path refid="lib.compile"/>
      </classpath>
    </javac>
    <javac destdir="build/test" debug="true" includeantruntime="false">
      <src path="src/test/java"/>
      <classpath>
        <path location="build/main"/>
        <path refid="lib.test"/>
      </classpath>
    </javac>
  </target>

  <target name="run_unit_tests" depends="build">
    <jacoco:coverage destfile="test/reports/jacoc-${ant.project.name}">
      <junit printsummary="yes" haltonfailure="true" haltonerror="true" fork="yes" forkmode="once" dir="${basedir}">
        <formatter type="xml" usefile="true"/>
        <classpath>
          <path refid="lib.test"/>
        </classpath>
        <jvmarg value="-Djminor.db.type=${junit.db.type}"/>
        <jvmarg value="-Djminor.db.host=${junit.db.host}"/>
        <jvmarg value="-Djminor.db.port=${junit.db.port}"/>
        <jvmarg value="-Djminor.db.sid=${junit.db.sid}"/>
        <jvmarg value="-Djminor.db.embedded=${junit.db.embedded}"/>
        <jvmarg value="-Djminor.db.embeddedInMemory=${junit.db.embeddedInMemory}"/>
        <jvmarg value="-Djminor.db.initScript=${junit.db.initScript}"/>
        <jvmarg value="-Djminor.unittest.username=${junit.username}"/>
        <jvmarg value="-Djminor.unittest.password=${junit.password}"/>
        <batchtest todir="test/reports">
          <fileset dir="src/test/java" includes="**/*Test.java"/>
        </batchtest>
      </junit>
    </jacoco:coverage>
  </target>

  <target name="javadoc" depends="build">
    <javadoc destdir="javadoc" sourcepath="src/main/java" packagenames="org.jminor.*" Encoding="UTF-8"
             docencoding="UTF-8" author="true" version="true" use="true"
             windowtitle="JMinor v${version} Plugin API" doctitle="JMinor v${version} Plugin API"
             group="Plugins org.jminor.framework.plugins">
      <classpath>
        <path refid="lib.test"/>
      </classpath>
      <link href="http://download.oracle.com/javase/8/docs/api/"/>
      <link offline="true" href="http://jminor.org/data/media/project/docs/api/" packagelistloc="javadoc"/>
    </javadoc>
  </target>

  <target name="dist" depends="build, javadoc">
    <mkdir dir="build/main/META-INF"/>
    <manifest file="build/main/META-INF/MANIFEST.MF">
      <attribute name="Specification-Title" value="JMinor Application Framework"/>
      <attribute name="Specification-Version" value="${version}"/>
      <attribute name="Specification-Vendor" value="JMinor"/>
      <attribute name="Implementation-Title" value="JMinor Application Framework"/>
      <attribute name="Implementation-Version" value="${version}"/>
      <attribute name="Implementation-Vendor" value="JMinor"/>
      <attribute name="Implementation-Vendor-Id" value="org.jminor"/>
      <attribute name="Implementation-URL" value="http://jminor.org"/>
      <attribute name="Build-Jdk" value="${java.version}"/>
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Build-Time" value="${build.date}"/>
    </manifest>
    <jar jarfile="dist/${ant.project.name}.jar" basedir="build/main"
         manifest="${build.main}/META-INF/MANIFEST.MF"/>
    <jar jarfile="dist/${ant.project.name}-sources.jar" basedir="src/main/java"
         manifest="${build.main}/META-INF/MANIFEST.MF"/>
    <jar jarfile="dist/${ant.project.name}-javadoc.jar" basedir="javadoc"
         manifest="${build.main}/META-INF/MANIFEST.MF"/>
  </target>

  <target name="publish" depends="dist">
    <fail unless="version">Version information not set</fail>
    <copy file="ivy.xml" tofile="ivy.xml.bak" overwrite="true"/>
    <ivy:resolve/>
    <ivy:deliver deliverpattern="ivy.xml" pubrevision="${version}"/>
    <ivy:makepom ivyfile="ivy.xml" pomfile="dist/${ant.project.name}.pom">
      <mapping conf="runtime" scope="runtime" />
      <mapping conf="sources" scope="sources" />
      <mapping conf="javadoc" scope="javadoc" />
    </ivy:makepom>
    <ivy:publish pubrevision="${version}" status="release" resolver="publish" overwrite="true" forcedeliver="true">
      <artifacts pattern="dist/[artifact].[ext]"/>
    </ivy:publish>
    <move file="ivy.xml.bak" tofile="ivy.xml"/>
  </target>
</project>