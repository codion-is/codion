<project name="macros" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:jacoco="antlib:org.jacoco.ant">

  <macrodef name="package_module">
    <attribute name="module-name" default="${ant.project.name}"/>
    <attribute name="build.basedir" default="${build.main}"/>
    <attribute name="src.basedir" default="${src.main}"/>
    <attribute name="includes" default=""/>
    <attribute name="excludes" default=""/>
    <sequential>
      <tstamp/>
      <mkdir dir="${build.main}/META-INF"/>
      <manifest file="build/main/META-INF/MANIFEST.MF">
        <attribute name="Specification-Title" value="${ant.project.name}"/>
        <attribute name="Specification-Version" value="${version}"/>
        <attribute name="Specification-Vendor" value="JMinor"/>
        <attribute name="Implementation-Title" value="${ant.project.name}"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Implementation-Vendor" value="JMinor"/>
        <attribute name="Implementation-Vendor-Id" value="org.jminor"/>
        <attribute name="Implementation-URL" value="http://jminor.org"/>
        <attribute name="Build-Jdk" value="${java.version}"/>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Build-Time" value="${DSTAMP}${TSTAMP}"/>
      </manifest>
      <mkdir dir="${package}"/>
      <jar jarfile="${package}/@{module-name}.jar" basedir="@{build.basedir}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
      <jar jarfile="${package}/@{module-name}-sources.jar" basedir="@{src.basedir}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
      <jar jarfile="${package}/@{module-name}-javadoc.jar" basedir="${javadoc}"
           manifest="${build.main}/META-INF/MANIFEST.MF"
           includes="@{includes}" excludes="@{excludes}"/>
    </sequential>
  </macrodef>

  <macrodef name="publish">
    <attribute name="resolver"/>
    <attribute name="artifact-dir"/>
    <sequential>
      <fail unless="version">Version information not set</fail>
      <copy file="ivy.xml" tofile="ivy.xml.bak" overwrite="true"/>
      <ivy:settings file="${project.root}/ivysettings.xml"/>
      <ivy:resolve/>
      <ivy:deliver deliverpattern="ivy.xml" pubrevision="${version}"/>
      <ivy:makepom ivyfile="ivy.xml" pomfile="@{artifact-dir}/${ant.project.name}.pom">
        <mapping conf="compile" scope="compile" />
        <mapping conf="runtime" scope="runtime" />
        <mapping conf="test" scope="test" />
        <mapping conf="sources" scope="sources" />
        <mapping conf="javadoc" scope="javadoc" />
      </ivy:makepom>
      <ivy:publish pubrevision="${version}" status="${release.status}" resolver="@{resolver}"
                   overwrite="true" forcedeliver="true">
        <artifacts pattern="@{artifact-dir}/[artifact].[ext]"/>
      </ivy:publish>
      <move file="ivy.xml.bak" tofile="ivy.xml"/>
    </sequential>
  </macrodef>

  <macrodef name="deploy_demo_app">
    <attribute name="demo-name"/>
    <sequential>
      <copy todir="${deploy.demos.dir}/web/@{demo-name}">
        <fileset dir="demos/@{demo-name}/${package}/deployment/web"/>
      </copy>
      <copy todir="${deploy.demos.dir}/local/@{demo-name}">
        <fileset dir="demos/@{demo-name}/${package}/deployment/local"/>
      </copy>
      <chmod dir="demos/@{demo-name}/${package}/deployment/local" perm="u+x" type="file" includes="**/*.sh"/>
    </sequential>
  </macrodef>
</project>