import org.javamodularity.moduleplugin.tasks.ModularCreateStartScripts
import org.javamodularity.moduleplugin.tasks.ModularJavaExec

apply from: '../demos.gradle'

dependencies {
    implementation project(':jminor-swing-framework-ui')
    implementation project(':jminor-plugin-ikonli-foundation')

    implementation "org.jfree:jfreechart:${jfreeChartVersion}"

    testImplementation project(':jminor-framework-domain-test')
    testImplementation project(':jminor-swing-framework-ui-test')

    runtimeOnly project(':jminor-plugin-logback-proxy')

    runtimeOnly project(':jminor-framework-db-local')
    runtimeOnly project(':jminor-framework-db-remote')
    runtimeOnly project(':jminor-framework-db-http')

    runtimeOnly project(':jminor-dbms-h2database')
    runtimeOnly "com.h2database:h2:${h2Version}"
}

ext {
    mainClass = "$moduleName/org.jminor.framework.demos.world.ui.WorldAppPanel"
    testAddModules = ['org.jminor.framework.db.test', 'org.jminor.swing.framework.ui.test']
    testAddReads = ['org.jminor.framework.demos.world': 'org.jminor.framework.db.test,org.jminor.swing.framework.ui.test']
    testAddExports = [
            'org.jminor.framework.demos.world/org.jminor.framework.demos.world.ui': 'org.jminor.swing.framework.ui.test',
            'org.jminor.framework.demos.world/org.jminor.framework.demos.world.domain': 'org.jminor.framework.db.local',
            'org.junit.platform.commons/org.junit.platform.commons.util': 'ALL-UNNAMED',
            'org.junit.platform.commons/org.junit.platform.commons.logging': 'ALL-UNNAMED'
    ]
}

compileTestJava {
    moduleOptions {
        addModules = testAddModules
        addReads = testAddReads
    }
}

test {
    moduleOptions {
        addModules = testAddModules
        addReads = testAddReads
        addExports = testAddExports;
    }
    systemProperty "jminor.db.initScript", "src/main/sql/create_schema.sql"
    systemProperty "jminor.client.domainClass", "org.jminor.framework.demos.world.domain.World"
}

task runClientLocal(type: ModularJavaExec) {
    group 'run'
    main = mainClass
    systemProperties = [
            'jminor.client.connectionType': 'local',
            'jminor.db.type'              : 'h2',
            'jminor.db.host'              : 'h2db',
            'jminor.db.embedded'          : 'true',
            'jminor.db.embeddedInMemory'  : 'true',
            'jminor.db.initScript'        : 'src/main/sql/create_schema.sql',
            'logback.configurationFile'   : 'src/main/resources/logback.xml'
    ]
}

task runClientRMI(type: ModularJavaExec) {
    group 'run'
    main = mainClass
    systemProperties = [
            'jminor.client.connectionType'    : 'remote',
            'jminor.server.hostname'          : 'localhost',
            'javax.net.ssl.trustStore'        : '../../framework/server/src/main/security/jminor_truststore.jks',
            'javax.net.ssl.trustStorePassword': 'crappypass',
            'logback.configurationFile'       : 'src/main/config/logback.xml'
    ]
}

task runClientHttp(type: ModularJavaExec) {
    group 'run'
    main = mainClass
    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.client.http.secure'   : 'false',
            'jminor.client.http.hostname' : 'localhost',
            'logback.configurationFile'   : 'src/main/resources/logback.xml'
    ]
}

task clientLocalScript(type: ModularCreateStartScripts) {
    runTask = tasks.runClientLocal
    applicationName = project.name + '-local'
    defaultJvmOpts = [
            '-Djminor.client.connectionType=local',
            '-Djminor.db.type=h2',
            '-Djminor.db.host=h2db',
            '-Djminor.db.embedded=true',
            '-Djminor.db.embeddedInMemory=true',
            '-Djminor.db.initScript=../config/create_schema.sql',
            '-Djminor.report.path=../reports',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientRMIScript(type: ModularCreateStartScripts) {
    runTask = tasks.runClientRMI
    applicationName = project.name + '-remote'
    defaultJvmOpts = [
            '-Djminor.client.connectionType=remote',
            '-Djminor.server.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Djavax.net.ssl.trustStore=../config/jminor_truststore.jks',
            '-Djavax.net.ssl.trustStorePassword=crappypass',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientHttpScript(type: ModularCreateStartScripts) {
    runTask = tasks.runClientHttp
    applicationName = project.name + '-http'
    defaultJvmOpts = [
            '-Djminor.client.connectionType=http',
            '-Djminor.client.http.secure=false',
            '-Djminor.client.http.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

applicationDistribution.into('config') {
    from(files('src/main/sql/create_schema.sql'))
    from(files('src/main/resources/logback.xml'))
    from(files('../../framework/server/src/main/security/jminor_truststore.jks'))
}

applicationDistribution.into('bin') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(clientLocalScript)
    from(clientRMIScript)
    from(clientHttpScript)
}