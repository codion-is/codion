apply from: '../demos.gradle'

apply plugin: BuildReportsPlugin

dependencies {
    implementation project(':codion-swing-framework-ui')
    implementation project(':codion-framework-json')
    implementation project(':codion-plugin-jasperreports')

    implementation (libs.jfreechart)
    implementation (libs.json)
    implementation 'org.jxmapviewer:jxmapviewer2:2.6'
    implementation "org.kordamp.ikonli:ikonli-foundation-pack:2.6.0"

    testImplementation project(':codion-framework-domain-test')
    testImplementation project(':codion-swing-framework-ui-test')

    runtimeOnly project(':codion-plugin-logback-proxy')

    runtimeOnly project(':codion-framework-db-local')
    runtimeOnly project(':codion-framework-db-rmi')
    runtimeOnly project(':codion-framework-db-http')

    implementation (libs.flatlaf)
    implementation (libs.flatlaf.intellij.themes)

    implementation(libs.jasperreports) {
        transitive = false
    }

    runtimeOnly (libs.commons.logging)
    runtimeOnly (libs.commons.digester)
    runtimeOnly (libs.commons.collections4)
    runtimeOnly (libs.commons.beanutils)
    runtimeOnly (libs.jdt.core.compiler)

    runtimeOnly project(':codion-dbms-h2database')
    runtimeOnly (libs.h2)
}

ext.execMainClass = 'is.codion.framework.demos.world.ui.WorldAppPanel'

buildReports {
    sourceDir = file('src/main/reports')
    targetDir = file(sourceSets.main.output.resourcesDir.toString() + '/is/codion/framework/demos/world/model')
}

test {
    systemProperty "codion.db.initScripts", "src/main/sql/create_schema.sql"
    systemProperty "codion.client.domainClass", "is.codion.framework.demos.world.domain.WorldImpl"
}

startScripts {
    mainClass.set(execMainClass)
}

clientRMIScript {
    mainClass.set(execMainClass)
}

clientHttpScript {
    mainClass.set(execMainClass)
}

runClientLocal {
    mainClass.set(execMainClass)
}

runClientRMI {
    mainClass.set(execMainClass)
}

runClientHttp {
    mainClass.set(execMainClass)
}