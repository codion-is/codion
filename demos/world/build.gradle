plugins {
    id "org.gradlex.extra-java-module-info"
}

apply from: "../demos.gradle"

apply plugin: BuildReportsPlugin

dependencies {
    implementation project(":codion-swing-framework-ui")
    implementation project(":codion-framework-json-domain")
    implementation project(":codion-plugin-jasperreports")

    implementation(libs.jfreechart)
    implementation(libs.json)
    implementation "org.jxmapviewer:jxmapviewer2:2.8"
    implementation "org.kordamp.ikonli:ikonli-foundation-pack:12.3.1"

    testImplementation project(":codion-framework-domain-test")
    testImplementation project(":codion-swing-framework-ui-test")
    testImplementation project(":codion-framework-db-local")

    runtimeOnly project(":codion-plugin-logback-proxy")

    runtimeOnly project(":codion-framework-db-local")
    runtimeOnly project(":codion-framework-db-rmi")
    runtimeOnly project(":codion-framework-db-http")

    implementation(libs.flatlaf)
    implementation(libs.flatlaf.intellij.themes)

    implementation(libs.jasperreports) {
        transitive = false
    }

    runtimeOnly project(":codion-dbms-h2")
    runtimeOnly(libs.h2)
}

apply from: "../../plugins/jasperreports/extra-module-info-jasperreports.gradle"

buildReports {
    sourceDir = file("src/main/reports")
    targetDir = file(sourceSets.main.output.resourcesDir.toString() + "/is/codion/framework/demos/world/model")
}

test {
    systemProperty "codion.db.initScripts", "src/main/sql/create_schema.sql"
    systemProperty "codion.client.domainType", "World"
}

runClientLocal {
    mainClass.set("is.codion.framework.demos.world.ui.WorldAppPanel")
}

runClientRMI {
    mainClass.set("is.codion.framework.demos.world.ui.WorldAppPanel")
}

runClientHttp {
    mainClass.set("is.codion.framework.demos.world.ui.WorldAppPanel")
}