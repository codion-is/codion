apply from: '../demos.gradle'

dependencies {
    implementation project(':jminor-common-core')
    implementation project(':jminor-common-db')
    implementation project(':jminor-common-model')

    implementation project(':jminor-framework-db-core')
    implementation project(':jminor-framework-db-local')
    implementation project(':jminor-framework-model')

    implementation project(':jminor-swing-common-model')
    implementation project(':jminor-swing-common-ui')
    implementation project(':jminor-swing-common-tools')
    implementation project(':jminor-swing-common-tools-ui')
    implementation project(':jminor-swing-framework-model')
    implementation project(':jminor-swing-framework-ui')
    implementation project(':jminor-swing-framework-tools')

    implementation project(':jminor-javafx-framework')

    implementation project(':jminor-plugin-jasperreports')

    runtime project(':jminor-framework-db-http')
    runtime project(':jminor-plugin-logback-proxy')

    testImplementation project(':jminor-framework-db-test')

    implementation "org.jfree:jcommon:${jcommonVersion}"
    implementation "org.jfree:jfreechart:${jfreechartVersion}"

    runtime project(':jminor-plugin-logback-proxy')

    compile ("net.sf.jasperreports:jasperreports:${jasperreportsVersion}") {
        transitive = false
    }

    runtime "commons-logging:commons-logging:${commonsloggingVersion}"
    runtime "commons-digester:commons-digester:${commonsdigesterVersion}"
    runtime "commons-collections:commons-collections:${commonscollectionsVersion}"
    runtime "commons-beanutils:commons-beanutils:${commonsbeanutilsVersion}"
    runtime "org.eclipse.jdt.core.compiler:ecj:${jdtcorecompilerVersion}"

    runtime "com.h2database:h2:${h2Version}"
}

test {
    systemProperty "jminor.db.initScript", "src/main/sql/create_schema.sql"
    systemProperty "jminor.client.domainClass", "org.jminor.framework.demos.chinook.domain.ChinookDomain"
}

task buildReports(dependsOn: 'compileJava') {
    group 'build'
    doLast {
        def jasperSourceDir = file('src/main/reports')
        def jasperTargetDir = file('build/classes/reports')
        ant {
            taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.runtime.asPath)
            jasperTargetDir.mkdirs()
            jrc(srcdir: jasperSourceDir, destdir: jasperTargetDir) {
                classpath(path: sourceSets.main.output.classesDirs)
                include(name: '**/*.jrxml')
            }
        }
    }
}
classes.dependsOn buildReports

//jnlp {
//    mainClassName = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
//}

startScripts {
    mainClassName = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
}

clientRemoteScript {
    mainClassName = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
}

clientHttpScript {
    mainClassName = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
}

loadTestRemoteScript {
    mainClassName = 'org.jminor.framework.demos.chinook.testing.ChinookLoadTest'
}

loadTestHttpScript {
    mainClassName = 'org.jminor.framework.demos.chinook.testing.ChinookLoadTest'
}

runClientLocal {
    main = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
}

runClientRemote {
    main = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
    systemProperties = [
            'jminor.client.connectionType': 'remote',
            'jminor.server.hostname': 'localhost',
            'jminor.report.path': '../../demos/chinook/build/classes/reports',
            'javax.net.ssl.trustStore': '../../framework/server/src/main/security/JMinorClientTruststore',
            'logback.configurationFile': 'src/main/resources/logback.xml'
    ]
}

runClientHttp {
    main = 'org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel'
    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.client.http.secure': 'false',
            'jminor.client.http.hostname': 'localhost',
            'jminor.report.path': '../../demos/chinook/build/classes/reports',
            'logback.configurationFile': 'src/main/resources/logback.xml'
    ]
}

runLoadTestRemote {
    main = 'org.jminor.framework.demos.chinook.testing.ChinookLoadTest'
    systemProperties = [
            'jminor.client.connectionType': 'remote',
            'jminor.server.hostname': 'localhost',
            'jminor.report.path': '../../demos/chinook/build/classes/reports',
            'javax.net.ssl.trustStore': '../../framework/server/src/main/security/JMinorClientTruststore',
            'logback.configurationFile': 'src/main/resources/logback.xml'
    ]
}

runLoadTestHttp {
    main = 'org.jminor.framework.demos.chinook.testing.ChinookLoadTest'
    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.client.http.secure': 'false',
            'jminor.client.http.hostname': 'localhost',
            'jminor.report.path': '../../demos/chinook/build/classes/reports',
            'logback.configurationFile': 'src/main/resources/logback.xml'
    ]
}