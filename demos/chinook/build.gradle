apply from: '../demos.gradle'

dependencies {
    implementation project(':codion-common-rmi')

    implementation project(':codion-framework-db-local')

    implementation project(':codion-swing-common-tools')
    implementation project(':codion-swing-common-tools-ui')
    implementation project(':codion-swing-framework-ui')
    implementation project(':codion-swing-framework-tools')

    implementation project(':codion-javafx-framework')

    implementation project(':codion-plugin-imagepanel')
    implementation project(':codion-plugin-jasperreports')
    implementation project(':codion-plugin-ikonli-foundation')

    runtimeOnly project(':codion-plugin-logback-proxy')

    implementation project(':codion-framework-db-http')
    implementation project(':codion-framework-db-rmi')

    testImplementation project(':codion-framework-domain-test')

    implementation("net.sf.jasperreports:jasperreports:${jasperReportsVersion}") {
        transitive = false
    }

    runtimeOnly "commons-logging:commons-logging:${commonsLoggingVersion}"
    runtimeOnly "commons-digester:commons-digester:${commonsDigesterVersion}"
    runtimeOnly "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
    runtimeOnly "commons-beanutils:commons-beanutils:${commonsBeanUtilsVersion}"
    runtimeOnly "org.eclipse.jdt.core.compiler:ecj:${jdtCoreCompilerVersion}"

    runtimeOnly project(':codion-dbms-h2database')
    runtimeOnly "com.h2database:h2:${h2Version}"
}

ext.mainClass = 'org.jminor.framework.demos.chinook.ui.ChinookAppPanel'
ext.loadTestMainClass = 'org.jminor.framework.demos.chinook.testing.ChinookLoadTest'

test {
    systemProperty "jminor.db.initScript", "src/main/sql/create_schema.sql"
    systemProperty "jminor.client.domainClass", "org.jminor.framework.demos.chinook.domain.impl.ChinookImpl"
}

task buildReports(dependsOn: 'compileJava') {
    group 'build'
    def jasperSourceDir = file('src/main/reports')
    def jasperTargetDir = file(sourceSets.main.output.resourcesDir.toString() + '/org/jminor/framework/demos/chinook/domain')
    inputs.dir jasperSourceDir
    outputs.dir jasperTargetDir
    doLast {
        ant {
            taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.runtimeClasspath.asPath)
            jasperTargetDir.mkdirs()
            jrc(srcdir: jasperSourceDir, destdir: jasperTargetDir) {
                classpath(path: sourceSets.main.output.classesDirs)
                include(name: '**/*.jrxml')
            }
        }
    }
}
classes.finalizedBy buildReports

startScripts {
    mainClassName = mainClass
}

clientRMIScript {
    mainClassName = mainClass
}

clientHttpScript {
    mainClassName = mainClass
}

loadTestRMIScript {
    mainClassName = loadTestMainClass
}

loadTestHttpScript {
    mainClassName = loadTestMainClass
}

runClientLocal {
    main = mainClass
}

runClientRMI {
    main = mainClass
}

runClientHttp {
    main = mainClass
}

runLoadTestRMI {
    main = loadTestMainClass
}

runLoadTestHttp {
    main = loadTestMainClass
}