dependencies {
    compile project(':org.jminor.swing.common.tools.ui')
    compile project(':org.jminor.swing.framework.ui')
    compile project(':org.jminor.swing.framework.ui.test')
    compile project(':org.jminor.swing.framework.tools')
    compile project(':org.jminor.javafx.framework')
    compile project(':org.jminor.plugin.jasperreports')

    runtime project(':org.jminor.framework.db.http')
    runtime project(':org.jminor.plugin.logback.proxy')
    runtime project(':org.jminor.plugin.jasperreports')

    testCompile project(':org.jminor.framework.db.test')

    compile ('net.sf.jasperreports:jasperreports:6.0.0') {
        transitive = false
    }

    runtime 'commons-logging:commons-logging:1.1.1'
    runtime 'commons-digester:commons-digester:2.1'
    runtime 'commons-collections:commons-collections:3.2.1'
    runtime 'commons-beanutils:commons-beanutils:1.9.0'
    runtime 'org.eclipse.jdt.core.compiler:ecj:4.3.1'

    runtime "com.h2database:h2:${h2Version}"
}

test {
    systemProperty "jminor.db.initScript", "src/main/sql/create_schema.sql"
}

task compileJasper(dependsOn: 'compileJava') {
    def jasperSourceDir = file('src/main/reports')
    def jasperTargetDir = file('build/classes/reports')
    ant {
        taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.runtime.asPath)
        jasperTargetDir.mkdirs()
        jrc(srcdir: jasperSourceDir, destdir: jasperTargetDir) {
            classpath(path: sourceSets.main.output.classesDirs)
            include(name: '**/*.jrxml')
        }
    }
}
compileTestJava {
    doLast {
        compileJasper
    }
}

task runClientLocal() {
    doLast {
        ant.java(
                classname: "org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel",
                classpath: sourceSets.main.runtimeClasspath.asPath,
                fork: true
        ) {
            sysproperty(key: 'jminor.client.connectionType', value: 'local')
            sysproperty(key: 'jminor.db.type', value: 'h2')
            sysproperty(key: 'jminor.db.host', value: 'h2db')
            sysproperty(key: 'jminor.db.embedded', value: 'true')
            sysproperty(key: 'jminor.db.embeddedInMemory', value: 'true')
            sysproperty(key: 'jminor.db.initScript', value: 'src/main/sql/create_schema.sql')
            sysproperty(key: 'jminor.report.path', value: 'build/classes/reports')
            sysproperty(key: 'logback.configurationFile', value: 'src/main/resources/logback.xml')

        }
    }
}

task runClientRemote {
    doLast {
        ant.java(
                classname: "org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel",
                classpath: sourceSets.main.runtimeClasspath.asPath,
                fork: true
        ) {
            sysproperty(key: 'jminor.client.connectionType', value: 'remote')
            sysproperty(key: 'jminor.server.hostname', value: 'localhost')
            sysproperty(key: 'javax.net.ssl.trustStore', value: '../../resources/security/JMinorClientTruststore')
            sysproperty(key: 'java.security.policy', value: '../../resources/security/jminor_client.policy')
            sysproperty(key: 'logback.configurationFile', value: 'src/main/resources/logback.xml')
        }
    }
}

task runClientHttp {
    doLast {
        ant.java(
                classname: "org.jminor.framework.demos.chinook.client.ui.ChinookAppPanel",
                classpath: sourceSets.main.runtimeClasspath.asPath,
                fork: true
        ) {
            sysproperty(key: 'jminor.client.connectionType', value: 'http')
            sysproperty(key: 'jminor.server.hostname', value: 'localhost')
            sysproperty(key: 'jminor.report.path', value: 'build/classes/reports')
            sysproperty(key: 'logback.configurationFile', value: 'src/main/resources/logback.xml')
        }
    }
}

task runLoadTestRemote {
    doLast {
        ant.java(
                classname: "org.jminor.framework.demos.chinook.testing.ChinookLoadTest",
                classpath: sourceSets.main.runtimeClasspath.asPath,
                fork: true
        ) {
            sysproperty(key: 'jminor.client.connectionType', value: 'remote')
            sysproperty(key: 'jminor.server.hostname', value: 'localhost')
            sysproperty(key: 'jminor.report.path', value: 'build/classes/reports')
            sysproperty(key: 'javax.net.ssl.trustStore', value: '../../resources/security/JMinorClientTruststore')
            sysproperty(key: 'java.security.policy', value: '../../resources/security/jminor_client.policy')
            sysproperty(key: 'logback.configurationFile', value: 'src/main/resources/logback.xml')
        }
    }
}

task runLoadTestHttp {
    doLast {
        ant.java(
                classname: "org.jminor.framework.demos.chinook.testing.ChinookLoadTest",
                classpath: sourceSets.main.runtimeClasspath.asPath,
                fork: true
        ) {
            sysproperty(key: 'jminor.client.connectionType', value: 'http')
            sysproperty(key: 'jminor.server.hostname', value: 'localhost')
            sysproperty(key: 'logback.configurationFile', value: 'src/main/resources/logback.xml')
        }
    }
}