plugins {
    id 'org.openjfx.javafxplugin' version '0.0.14'
    id 'org.gradlex.extra-java-module-info'
}

apply from: '../demos.gradle'

apply plugin: BuildReportsPlugin

dependencies {
    implementation project(':codion-common-rmi')

    implementation project(':codion-framework-db-local')

    implementation project(':codion-swing-common-model-tools')
    implementation project(':codion-swing-common-ui-tools')
    implementation project(':codion-swing-framework-ui')
    implementation project(':codion-swing-framework-model-tools')

    implementation project(':codion-javafx-framework')

    implementation project(':codion-plugin-imagepanel')
    implementation project(':codion-plugin-jasperreports')

    runtimeOnly project(':codion-plugin-logback-proxy')

    implementation project(':codion-framework-db-http')
    implementation project(':codion-framework-db-rmi')

    implementation(libs.flatlaf)
    implementation(libs.flatlaf.intellij.themes)

    testImplementation project(':codion-framework-domain-test')

    implementation(libs.jasperreports) {
        transitive = false
    }

    implementation(libs.commons.logging)
    implementation(libs.commons.digester) {
        transitive = false
    }
    implementation(libs.commons.collections4)
    implementation(libs.commons.beanutils) {
        transitive = false
    }
    implementation(libs.jdt.core.compiler)

    runtimeOnly project(':codion-dbms-h2database')
    runtimeOnly(libs.h2)
}

apply from: "../../plugins/jasperreports/extra-module-info-jasperreports.gradle"

javafx {
    version = '18'
    modules = ['javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.swing']
}

compileTestJava {
    options.compilerArgs = [
            '--add-modules', 'is.codion.framework.domain.test',
            '--add-reads', "$moduleName=is.codion.framework.domain.test",
    ]
}

buildReports {
    sourceDir = file('src/main/reports')
    targetDir = file(sourceSets.main.output.resourcesDir.toString() + '/is/codion/framework/demos/chinook/domain')
}

test {
    systemProperty "codion.db.initScripts", "src/main/sql/create_schema.sql"
    systemProperty "codion.client.domainClass", "is.codion.framework.demos.chinook.domain.impl.ChinookImpl"
    jvmArgs = [
            '--add-reads', "$moduleName=is.codion.framework.domain.test",
            '--add-reads', "is.codion.framework.domain=is.codion.framework.demos.chinook"
    ]
}

runClientLocal {
    mainClass.set("is.codion.framework.demos.chinook.ui.ChinookAppPanel")
}

runClientRMI {
    mainClass.set("is.codion.framework.demos.chinook.ui.ChinookAppPanel")
}

runClientHttp {
    mainClass.set("is.codion.framework.demos.chinook.ui.ChinookAppPanel")
}

runLoadTestRMI {
    mainClass.set("is.codion.framework.demos.chinook.testing.ChinookLoadTest")
}

runLoadTestHttp {
    mainClass.set("is.codion.framework.demos.chinook.testing.ChinookLoadTest")
}