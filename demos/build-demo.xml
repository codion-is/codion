<project name="jminor-demo">

  <property name="project.root" value="../../"/>
  <property name="junit.db.initScript" value="src/main/sql/create_schema.sql"/>
  <import file="../build-common.xml"/>

  <target name="dist" depends="jminor-common.dist">
    <jar jarfile="dist/${ant.project.name}-domain.jar" basedir="build/main"
         includes="org/jminor/framework/demos/${ant.project.name}/domain/**/*,
         org/jminor/framework/demos/${ant.project.name}/server/**/*"
         manifest="${build.main}/META-INF/MANIFEST.MF"/>

    <!--create anothor domain jar file without annotations using the purgeannotationrefs library-->
    <!--<taskdef resource="org/dyndns/fichtner/purgeannotationrefs/tasks/antlib.xml"-->
    <!--classpathref="lib.ant.util"/>-->
    <!--<purgeannotationrefs>-->
    <!--<src>-->
    <!--<fileset dir="build/main">-->
    <!--<filename name="org/jminor/framework/demos/${ant.project.name}/domain/**/*.class" />-->
    <!--</fileset>-->
    <!--</src>-->
    <!--<remove regexp="org.jminor.framework.domain.Entity.Data" />-->
    <!--<remove regexp="org.jminor.framework.domain.Property.Data" />-->
    <!--</purgeannotationrefs>-->
    <!--<jar jarfile="dist/${ant.project.name}-domain-remote.jar" basedir="build/main"-->
    <!--includes="org/jminor/framework/demos/${ant.project.name}/domain/**/*"-->
    <!--manifest="${build.main}/META-INF/MANIFEST.MF"/>-->
  </target>

  <target name="run_local"
          description="Runs the demo application with a local db connection">
    <java classname="${client.main.class}" fork="yes" dir="${basedir}">
      <classpath>
        <pathelement path="${build.main}"/>
        <path refid="lib.runtime"/>
      </classpath>
      <jvmarg value="-Djminor.db.type=${demo.db.type}"/>
      <jvmarg value="-Djminor.db.host=${demo.db.host}"/>
      <jvmarg value="-Djminor.db.port=${demo.db.port}"/>
      <jvmarg value="-Djminor.db.sid=${demo.db.sid}"/>
      <jvmarg value="-Djminor.db.embedded=${demo.db.embedded}"/>
      <jvmarg value="-Djminor.db.embeddedInMemory=${demo.db.embeddedInMemory}"/>
      <jvmarg value="-Djminor.db.initScript=${demo.db.initScript}"/>
      <jvmarg value="-Djminor.report.path=build/reports"/>
    </java>
  </target>

  <target name="run_remote" depends="build"
          description="Runs the demo application with a remote db connection">
    <java classname="${client.main.class}" fork="yes">
      <classpath>
        <pathelement path="${build.main}"/>
        <path refid="lib.runtime"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <!--this report path setting is based on the fact that the server is run in the demos directory-->
      <jvmarg value="-Djminor.report.path=chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=../../framework/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=../../framework/resources/security/jminor_client.policy"/>
    </java>
  </target>

  <target name="run_load_test" depends="build"
          description="Runs the load testing application with a remote db connection">
    <java classname="${loadtest.main.class}" fork="yes">
      <classpath>
        <pathelement path="${build.main}"/>
        <path refid="lib.runtime"/>
      </classpath>
      <jvmarg value="-Djminor.client.connectionType=remote"/>
      <jvmarg value="-Djminor.server.hostname=localhost"/>
      <!--this report path setting is based on the fact that the server is run in the demos directory-->
      <jvmarg value="-Djminor.report.path=chinook/build/reports"/>
      <jvmarg value="-Djavax.net.ssl.trustStore=../../framework/resources/security/JMinorClientTruststore"/>
      <jvmarg value="-Djava.security.policy=../../framework/resources/security/jminor_load_test.policy"/>
    </java>
  </target>

  <target name="deploy" depends="dist">
    <taskdef name="getdown_digest" classname="com.threerings.getdown.tools.DigesterTask" classpathref="lib.ant.util"/>
    <delete dir="dist/deployment"/>
    <!--create uber-jar-->
    <mkdir dir="dist/deployment/libtmp"/>
    <unzip dest="dist/deployment/libtmp">
      <fileset dir="lib/runtime">
        <include name="**/*.jar"/>
      </fileset>
    </unzip>
    <zip destfile="dist/deployment/${ant.project.name}.jar">
      <zipfileset src="dist/${ant.project.name}.jar" excludes="**/META-INF/**/*"/>
      <zipfileset dir="dist/deployment/libtmp" excludes="**/META-INF/**/*"/>
      <zipfileset file="src/main/config/logback.xml"/>
      <zipfileset file="../../framework/resources/security/JMinorClientTruststore"/>
    </zip>
    <delete dir="dist/deployment/libtmp"/>

    <!--create web deployment, webstart and getdown-->
    <mkdir dir="dist/deployment/web"/>
    <copy file="dist/deployment/${ant.project.name}.jar" todir="dist/deployment/web"/>
    <zip destfile="dist/deployment/web/${ant.project.name}.jar" update="true">
      <zipfileset dir="src/main/config/" includes="${ant.project.name}.jnlp" fullpath="JNLP-INF/APPLICATION.JNLP"/>
    </zip>
    <signjar jar="dist/deployment/web/${ant.project.name}.jar" alias="${jar.sign.alias}"
             storepass="${jar.sign.storepass}" keystore="${jar.sign.keystore}"/>
    <copy file="src/main/config/${ant.project.name}.jnlp" todir="dist/deployment/web" failonerror="false"/>
    <copy file="src/main/config/getdown.txt" todir="dist/deployment/web"/>
    <copy file="../../core/docs/jminor.org/jminor_logo_2.png" tofile="dist/deployment/web/jminor.png"/>
    <copy file="../../core/docs/jminor.org/jminor_logo_medium.png" tofile="dist/deployment/web/jminor-getdown.png"/>

    <!--getdown-->
    <getdown_digest appdir="dist/deployment/web"/>
    <copy todir="dist/deployment/web/getdown.tmp/${ant.project.name}" file="../../lib/ant/getdown-${getdown.version}.jar"/>
    <concat destfile="dist/deployment/web/getdown.tmp/${ant.project.name}/getdown.txt">appbase = http://jminor.no-ip.org/demos/${ant.project.name}/</concat>
    <concat destfile="dist/deployment/web/getdown.tmp/${ant.project.name}.sh">java -jar ${ant.project.name}/getdown-${getdown.version}.jar ${ant.project.name}</concat>
    <copy file="dist/deployment/web/getdown.tmp/${ant.project.name}.sh" tofile="dist/deployment/web/getdown.tmp/${ant.project.name}.bat"/>
    <zip destfile="dist/deployment/web/${ant.project.name}-getdown.zip" basedir="dist/deployment/web/getdown.tmp"/>
    <delete dir="dist/deployment/web/getdown.tmp"/>

    <!--create local deployment-->
    <mkdir dir="dist/deployment/local"/>
    <copy todir="dist/deployment/local">
      <file file="dist/deployment/${ant.project.name}.jar"/>
      <fileset dir="src/main/config" includes="**/*.sh, **/*.bat"/>
    </copy>
    <chmod dir="dist/deployment/local" perm="u+x" type="file" includes="**/*.sh"/>
    <copy todir="dist/deployment/local/config">
      <fileset dir="src/main/config" includes="**/*.config"/>
    </copy>
    <zip destfile="dist/deployment/local/${ant.project.name}.jar" update="true">
      <zipfileset dir="build/reports" includes="**/*.jasper" prefix="reports" erroronmissingdir="false"/>
      <zipfileset file="src/main/sql/create_schema.sql" erroronmissingdir="false"/>
    </zip>
    <zip destfile="dist/deployment/web/${ant.project.name}-local.zip">
      <zipfileset dir="dist/deployment/local"/>
    </zip>
    <delete file="dist/deployment/${ant.project.name}.jar"/>
  </target>
</project>