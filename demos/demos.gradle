buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.javamodularity:moduleplugin:1.4.0"
    }
}

apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'org.javamodularity.moduleplugin'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
}

//clean intellij output dir as well
clean.doLast {
    file('out').deleteDir()
}

sonarqube {
    skipProject = true
}

dependencies {
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
}

configurations {
    /** A configuration with a single jar file containing the domain model (and server classes) */
    domain
}

task jarDomain(type: Jar, dependsOn: classes) {
    group 'build'
    baseName = baseName + '-domain'
    from sourceSets.main.output
    include '**/domain/**/*'
    include '**/server/**/*'
}

artifacts {
    domain jarDomain
}

test {
    systemProperty "jminor.db.type", "h2"
    systemProperty "jminor.db.host", "h2db"
    systemProperty "jminor.db.embedded", "true"
    systemProperty "jminor.db.embeddedInMemory", "true"
    systemProperty "jminor.db.initScript", "src/test/sql/create_h2_db.sql"
    systemProperty "jminor.unittest.username", "scott"
    systemProperty "jminor.unittest.password", "tiger"
}

application {
    mainClassName = 'dummy.class.Name'
}