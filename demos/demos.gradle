apply plugin: 'application'
apply plugin: 'jacoco'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sonarqube {
    skipProject = true
}

dependencies {
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

configurations {
    /** A configuration with a single jar file containing the application domain model
     * (and server classes), used by the Framework Server module when running the server*/
    domain
}

task domainJar(type: Jar, dependsOn: classes) {
    group 'build'
    archiveBaseName.set(archiveBaseName.get() + '-domain')
    from sourceSets.main.output
    include '**/domain/**/*'
    include '**/server/**/*'
    include '**/services/**/*'
    includeEmptyDirs false
}

jar.finalizedBy domainJar

artifacts {
    domain domainJar
}

test {
    useJUnitPlatform()
    systemProperty "codion.db.url", "jdbc:h2:mem:h2db"
    systemProperty "codion.db.initScripts", "src/main/sql/create_schema.sql"
    systemProperty "codion.test.user", "scott:tiger"
}

startScripts {
    applicationName = project.name + '-local'
    defaultJvmOpts = [
            '-Dcodion.client.connectionType=local',
            '-Dcodion.db.url=jdbc:h2:mem:h2db',
            '-Dcodion.db.initScripts=../config/create_schema.sql',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientRMIScript(type: CreateStartScripts) {
    applicationName = project.name + '-remote'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Dcodion.client.connectionType=remote',
            "-Dcodion.server.hostname=${serverHostName}",
            '-Djavax.net.ssl.trustStore=../config/truststore.jks',
            '-Dcodion.client.trustStorePassword=crappypass',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientHttpScript(type: CreateStartScripts) {
    applicationName = project.name + '-http'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Dcodion.client.connectionType=http',
            '-Dcodion.client.http.secure=false',
            "-Dcodion.client.http.hostname=${serverHostName}",
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task loadTestRMIScript(type: CreateStartScripts) {
    applicationName = project.name + '-loadtest-remote'
    mainClass = 'is.codion.framework.demos.DummyLoadTest'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Dcodion.client.connectionType=remote',
            "-Dcodion.server.hostname=${serverHostName}",
            '-Dcodion.client.trustStore=../config/truststore.jks',
            '-Dcodion.client.trustStorePassword=crappypass',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task loadTestHttpScript(type: CreateStartScripts) {
    applicationName = project.name + '-loadtest-http'
    mainClass = 'is.codion.framework.demos.DummyLoadTest'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Dcodion.client.connectionType=http',
            '-Dcodion.client.http.secure=false',
            "-Dcodion.client.http.hostname=${serverHostName}",
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

applicationDistribution.into('config') {
    from(files('src/main/sql/create_schema.sql'))
    from(files('src/main/config/logback.xml'))
    from(files('../../framework/server/src/main/config/truststore.jks'))
}

applicationDistribution.into('reports') {
    from(fileTree(dir: 'build/classes/reports', include: '*.jasper'))
}

applicationDistribution.into('bin') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(clientRMIScript)
    from(clientHttpScript)
    from(loadTestHttpScript)
    from(loadTestRMIScript)
}

task runClientLocal(type: JavaExec) {
    group 'application'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType': 'local',
            'codion.db.url'               : 'jdbc:h2:mem:h2db',
            'codion.db.initScripts'       : 'src/main/sql/create_schema.sql',
            'logback.configurationFile'   : 'src/main/config/logback.xml',
            'sun.awt.disablegrab'         : 'true'
    ]
}

task runClientRMI(type: JavaExec) {
    group 'application'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType'    : 'remote',
            'codion.server.hostname'          : "${serverHostName}",
            'codion.client.trustStore'        : '../../framework/server/src/main/config/truststore.jks',
            'codion.client.trustStorePassword': 'crappypass',
            'logback.configurationFile'       : 'src/main/config/logback.xml',
            'sun.awt.disablegrab'             : 'true'
    ]
}

task runClientHttp(type: JavaExec) {
    group 'application'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType': 'http',
            'codion.client.http.secure'   : 'false',
            'codion.client.http.hostname' : "${serverHostName}",
            'logback.configurationFile'   : 'src/main/config/logback.xml',
            'sun.awt.disablegrab'         : 'true'
    ]
}

task runLoadTestRMI(type: JavaExec) {
    group 'application'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType'    : 'remote',
            'codion.server.hostname'          : "${serverHostName}",
            'codion.client.trustStore'        : '../../framework/server/src/main/config/truststore.jks',
            'codion.client.trustStorePassword': 'crappypass',
            'logback.configurationFile'       : 'src/main/config/logback.xml'
    ]
}

task runLoadTestHttp(type: JavaExec) {
    group 'application'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'codion.client.connectionType': 'http',
            'codion.client.http.secure'   : 'false',
            'codion.client.http.hostname' : "${serverHostName}",
            'logback.configurationFile'   : 'src/main/config/logback.xml'
    ]
}