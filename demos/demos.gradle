buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.javamodularity:moduleplugin:1.3.1"
    }
}

import org.javamodularity.moduleplugin.tasks.ModularJavaExec

apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'org.javamodularity.moduleplugin'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
}

//clean intellij output dir as well
clean.doLast {
    file('out').deleteDir()
}

sonarqube {
    skipProject = true
}

dependencies {
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
}

configurations {
    /** A configuration with a single jar file containing the domain model (and server classes) */
    domain
}

task jarDomain(type: Jar, dependsOn: classes) {
    group 'build'
    baseName = baseName + '-domain'
    from sourceSets.main.output
    include '**/domain/**/*'
    include '**/server/**/*'
}

artifacts {
    domain jarDomain
}

test {
    systemProperty "jminor.db.type", "h2"
    systemProperty "jminor.db.host", "h2db"
    systemProperty "jminor.db.embedded", "true"
    systemProperty "jminor.db.embeddedInMemory", "true"
    systemProperty "jminor.db.initScript", "src/test/sql/create_h2_db.sql"
    systemProperty "jminor.unittest.username", "scott"
    systemProperty "jminor.unittest.password", "tiger"
}

startScripts {
    applicationName = project.name + '-local'
    defaultJvmOpts = [
            '-Djminor.client.connectionType=local',
            '-Djminor.db.type=h2',
            '-Djminor.db.host=h2db',
            '-Djminor.db.embedded=true',
            '-Djminor.db.embeddedInMemory=true',
            '-Djminor.db.initScript=../config/create_schema.sql',
            '-Djminor.report.path=../reports',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientRemoteScript(type: CreateStartScripts) {
    applicationName = project.name + '-remote'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Djminor.client.connectionType=remote',
            '-Djminor.server.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Djavax.net.ssl.trustStore=../config/jminor_truststore.jks',
            '-Djavax.net.ssl.trustStorePassword=crappypass',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task clientHttpScript(type: CreateStartScripts) {
    applicationName = project.name + '-http'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Djminor.client.connectionType=http',
            '-Djminor.client.http.secure=false',
            '-Djminor.client.http.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task loadTestRemoteScript(type: CreateStartScripts) {
    applicationName = project.name + '-loadtest-remote'
    mainClassName = 'org.jminor.framework.demos.DummyLoadTest'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Djminor.client.connectionType=remote',
            '-Djminor.server.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Djavax.net.ssl.trustStore=../config/jminor_truststore.jks',
            '-Djavax.net.ssl.trustStorePassword=crappypass',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

task loadTestHttpScript(type: CreateStartScripts) {
    applicationName = project.name + '-loadtest-http'
    mainClassName = 'org.jminor.framework.demos.DummyLoadTest'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    defaultJvmOpts = [
            '-Djminor.client.connectionType=http',
            '-Djminor.client.http.secure=false',
            '-Djminor.client.http.hostname=localhost',
            '-Djminor.report.path=../reports',
            '-Dlogback.configurationFile=../config/logback.xml'
    ]
}

applicationDistribution.into('config') {
    from(files('src/main/sql/create_schema.sql'))
    from(files('src/main/resources/logback.xml'))
    from(files('../../framework/server/src/main/security/jminor_truststore.jks'))
}

applicationDistribution.into('reports') {
    from(fileTree(dir: 'build/classes/reports', include: '*.jasper'))
}

applicationDistribution.into('bin') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(clientRemoteScript)
    from(clientHttpScript)
    from(loadTestHttpScript)
    from(loadTestRemoteScript)
}

task runClientLocal(type: ModularJavaExec) {
    group 'run'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'jminor.client.connectionType': 'local',
            'jminor.db.type'              : 'h2',
            'jminor.db.host'              : 'h2db',
            'jminor.db.embedded'          : 'true',
            'jminor.db.embeddedInMemory'  : 'true',
            'jminor.db.initScript'        : 'src/main/sql/create_schema.sql',
            'jminor.report.path'          : 'build/classes/reports',
            'logback.configurationFile'   : 'src/main/resources/logback.xml'
    ]
}

task runClientRemote(type: ModularJavaExec) {
    group 'run'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'jminor.client.connectionType'    : 'remote',
            'jminor.server.hostname'          : 'localhost',
            'javax.net.ssl.trustStore'        : '../../framework/server/src/main/security/jminor_truststore.jks',
            'javax.net.ssl.trustStorePassword': 'crappypass',
            'logback.configurationFile'       : 'src/main/config/logback.xml'
    ]
}

task runClientHttp(type: JavaExec) {
    group 'run'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.client.http.secure'   : 'false',
            'jminor.client.http.hostname' : 'localhost',
            'logback.configurationFile'   : 'src/main/config/logback.xml'
    ]
}

task runLoadTestRemote(type: JavaExec) {
    group 'run'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'jminor.client.connectionType'    : 'remote',
            'jminor.server.hostname'          : 'localhost',
            'javax.net.ssl.trustStore'        : '../../framework/server/src/main/security/jminor_truststore.jks',
            'javax.net.ssl.trustStorePassword': 'crappypass',
            'logback.configurationFile'       : 'src/main/config/logback.xml'
    ]
}

task runLoadTestHttp(type: JavaExec) {
    group 'run'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.client.http.secure'   : 'false',
            'jminor.client.http.hostname' : 'localhost',
            'logback.configurationFile'   : 'src/main/config/logback.xml'
    ]
}