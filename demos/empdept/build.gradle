dependencies {
    compile project(':org.jminor.framework.server')
    compile project(':org.jminor.framework.servlet')
    compile project(':org.jminor.framework.db.http')
    compile project(':org.jminor.framework.db.test')

    compile project(':org.jminor.swing.framework.bundle')
    compile project(':org.jminor.framework.plugin.jasperreports')
    compile project(':org.jminor.framework.plugin.json')
    testCompile project(':org.jminor.swing.framework.ui.test')
    compile project(':org.jminor.javafx.framework')

    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile "org.jfree:jcommon:${jcommonVersion}"
    compile "org.jfree:jfreechart:${jfreechartVersion}"

    runtime project(':org.jminor.framework.plugin.logback.proxy')

    compile ('net.sf.jasperreports:jasperreports:6.0.0') {
        transitive = false
    }

    runtime 'commons-logging:commons-logging:1.1.1'
    runtime 'commons-digester:commons-digester:2.1'
    runtime 'commons-collections:commons-collections:3.2.1'
    runtime 'commons-beanutils:commons-beanutils:1.9.0'
    runtime 'org.eclipse.jdt.core.compiler:ecj:4.3.1'

    runtime "com.h2database:h2:${h2Version}"
}

test {
    systemProperty "jminor.db.initScript", "src/main/sql/create_schema.sql"
}

task compileJasper(dependsOn: 'compileJava') {
    def jasperSourceDir = file('src/main/reports')
    def jasperTargetDir = file('build/classes/reports')
    ant {
        taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.runtime.asPath)
        jasperTargetDir.mkdirs()
        jrc(srcdir: jasperSourceDir, destdir: jasperTargetDir) {
            classpath(path: sourceSets.main.output.classesDirs)
            include(name: '**/*.jrxml')
        }
    }
}
compileTestJava {
    doLast {
        compileJasper
    }
}

task runClientLocal(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel'

    systemProperties = [
            'jminor.client.connectionType': 'local',
            'jminor.db.type': 'h2',
            'jminor.db.host': 'h2db',
            'jminor.db.embedded': 'true',
            'jminor.db.embeddedInMemory': 'true',
            'jminor.db.initScript': 'src/main/sql/create_schema.sql',
            'jminor.report.path': 'build/classes/reports'
    ]
}

task runClientRemote(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel'

    systemProperties = [
            'jminor.client.connectionType': 'remote',
            'jminor.server.hostname': 'localhost',
            'jminor.report.path': '../../demos/empdept/build/classes/reports',
            'javax.net.ssl.trustStore': '../../resources/security/JMinorClientTruststore',
            'java.security.policy': '../../resources/security/jminor_client.policy'
    ]
}

task runClientHttp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'org.jminor.framework.demos.empdept.client.ui.EmpDeptAppPanel'

    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.server.hostname': 'localhost',
            'jminor.report.path': '../../demos/empdept/build/classes/reports',
    ]
}

task runLoadTestRemote(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'org.jminor.framework.demos.empdept.testing.EmpDeptLoadTest'

    systemProperties = [
            'jminor.client.connectionType': 'remote',
            'jminor.server.hostname': 'localhost',
            'jminor.report.path': '../../demos/empdept/build/classes/reports',
            'javax.net.ssl.trustStore': '../../resources/security/JMinorClientTruststore',
            'java.security.policy': '../../resources/security/jminor_client.policy'
    ]
}

task runLoadTestHttp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'org.jminor.framework.demos.empdept.testing.EmptDeptLoadTest'

    systemProperties = [
            'jminor.client.connectionType': 'http',
            'jminor.server.hostname': 'localhost',
    ]
}