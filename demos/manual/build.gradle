plugins {
    id "org.gradlex.extra-java-module-info"
}
apply plugin: "java"
apply plugin: "jacoco"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of("$jdkVersion")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

sonarqube {
    skipProject = true
}

dependencies {
    implementation project(":codion-tools-loadtest-ui")
    implementation project(":codion-swing-framework-ui")
    implementation project(":codion-framework-domain-test")
    implementation project(":codion-framework-db-local")
    implementation project(":codion-framework-db-rmi")
    implementation project(":codion-framework-db-http")
    implementation (project(":codion-plugin-jasperreports")) {
        exclude group: "org.apache.xmlgraphics"
    }

    implementation project(":codion-framework-server")
    implementation project(":codion-framework-servlet")
    implementation project(":codion-dbms-h2")

    implementation(libs.flatlaf)
    implementation(libs.flatlaf.intellij.themes)

    implementation(libs.jasperreports) {
        transitive = false
    }

    runtimeOnly project(":codion-plugin-logback-proxy")

    runtimeOnly(libs.h2)
}

apply from: "../../plugins/jasperreports/extra-module-info-jasperreports.gradle"

tasks.register("runNotesDemo", JavaExec) {
    group "application"
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set("is.codion.framework.demos.manual.notes.NotesDemo")
}

tasks.register("runApplicationPanel", JavaExec) {
    group "application"
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set("is.codion.framework.demos.manual.common.demo.ApplicationPanel")
}